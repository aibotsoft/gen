/*
 * Sportmarket API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package sportmarketapi

import (
	"encoding/json"
)

// WebsocketResponseStatus struct for WebsocketResponseStatus
type WebsocketResponseStatus struct {
	Code string `json:"code"`
}

// NewWebsocketResponseStatus instantiates a new WebsocketResponseStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsocketResponseStatus(code string, ) *WebsocketResponseStatus {
	this := WebsocketResponseStatus{}
	this.Code = code
	return &this
}

// NewWebsocketResponseStatusWithDefaults instantiates a new WebsocketResponseStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsocketResponseStatusWithDefaults() *WebsocketResponseStatus {
	this := WebsocketResponseStatus{}
	return &this
}

// GetCode returns the Code field value
func (o *WebsocketResponseStatus) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *WebsocketResponseStatus) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *WebsocketResponseStatus) SetCode(v string) {
	o.Code = v
}

func (o WebsocketResponseStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableWebsocketResponseStatus struct {
	value *WebsocketResponseStatus
	isSet bool
}

func (v NullableWebsocketResponseStatus) Get() *WebsocketResponseStatus {
	return v.value
}

func (v *NullableWebsocketResponseStatus) Set(val *WebsocketResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsocketResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsocketResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsocketResponseStatus(val *WebsocketResponseStatus) *NullableWebsocketResponseStatus {
	return &NullableWebsocketResponseStatus{value: val, isSet: true}
}

func (v NullableWebsocketResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsocketResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sportmarket API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package sportmarketapi

import (
	"encoding/json"
)

// ValidationErrors struct for ValidationErrors
type ValidationErrors struct {
	BetslipId *[]string `json:"betslip_id,omitempty"`
}

// NewValidationErrors instantiates a new ValidationErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationErrors() *ValidationErrors {
	this := ValidationErrors{}
	return &this
}

// NewValidationErrorsWithDefaults instantiates a new ValidationErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationErrorsWithDefaults() *ValidationErrors {
	this := ValidationErrors{}
	return &this
}

// GetBetslipId returns the BetslipId field value if set, zero value otherwise.
func (o *ValidationErrors) GetBetslipId() []string {
	if o == nil || o.BetslipId == nil {
		var ret []string
		return ret
	}
	return *o.BetslipId
}

// GetBetslipIdOk returns a tuple with the BetslipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationErrors) GetBetslipIdOk() (*[]string, bool) {
	if o == nil || o.BetslipId == nil {
		return nil, false
	}
	return o.BetslipId, true
}

// HasBetslipId returns a boolean if a field has been set.
func (o *ValidationErrors) HasBetslipId() bool {
	if o != nil && o.BetslipId != nil {
		return true
	}

	return false
}

// SetBetslipId gets a reference to the given []string and assigns it to the BetslipId field.
func (o *ValidationErrors) SetBetslipId(v []string) {
	o.BetslipId = &v
}

func (o ValidationErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BetslipId != nil {
		toSerialize["betslip_id"] = o.BetslipId
	}
	return json.Marshal(toSerialize)
}

type NullableValidationErrors struct {
	value *ValidationErrors
	isSet bool
}

func (v NullableValidationErrors) Get() *ValidationErrors {
	return v.value
}

func (v *NullableValidationErrors) Set(val *ValidationErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationErrors(val *ValidationErrors) *NullableValidationErrors {
	return &NullableValidationErrors{value: val, isSet: true}
}

func (v NullableValidationErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package blackapi

import (
	"encoding/json"
)

// GetEventsResponse struct for GetEventsResponse
type GetEventsResponse struct {
	Status *string `json:"status,omitempty"`
	Data *map[string]League `json:"data,omitempty"`
}

// NewGetEventsResponse instantiates a new GetEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventsResponse() *GetEventsResponse {
	this := GetEventsResponse{}
	return &this
}

// NewGetEventsResponseWithDefaults instantiates a new GetEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventsResponseWithDefaults() *GetEventsResponse {
	this := GetEventsResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetEventsResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventsResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetEventsResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetEventsResponse) SetStatus(v string) {
	o.Status = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetEventsResponse) GetData() map[string]League {
	if o == nil || o.Data == nil {
		var ret map[string]League
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventsResponse) GetDataOk() (*map[string]League, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetEventsResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]League and assigns it to the Data field.
func (o *GetEventsResponse) SetData(v map[string]League) {
	o.Data = &v
}

func (o GetEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetEventsResponse struct {
	value *GetEventsResponse
	isSet bool
}

func (v NullableGetEventsResponse) Get() *GetEventsResponse {
	return v.value
}

func (v *NullableGetEventsResponse) Set(val *GetEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventsResponse(val *GetEventsResponse) *NullableGetEventsResponse {
	return &NullableGetEventsResponse{value: val, isSet: true}
}

func (v NullableGetEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

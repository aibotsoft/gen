/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package blackapi

import (
	"encoding/json"
)

// GetEventsRequest struct for GetEventsRequest
type GetEventsRequest struct {
	IncludePrices bool `json:"include_prices"`
	AllEvents bool `json:"all_events"`
	AllHcaps *bool `json:"all_hcaps,omitempty"`
	EventIds *[][]string `json:"event_ids,omitempty"`
}

// NewGetEventsRequest instantiates a new GetEventsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventsRequest(includePrices bool, allEvents bool, ) *GetEventsRequest {
	this := GetEventsRequest{}
	this.IncludePrices = includePrices
	this.AllEvents = allEvents
	return &this
}

// NewGetEventsRequestWithDefaults instantiates a new GetEventsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventsRequestWithDefaults() *GetEventsRequest {
	this := GetEventsRequest{}
	return &this
}

// GetIncludePrices returns the IncludePrices field value
func (o *GetEventsRequest) GetIncludePrices() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IncludePrices
}

// GetIncludePricesOk returns a tuple with the IncludePrices field value
// and a boolean to check if the value has been set.
func (o *GetEventsRequest) GetIncludePricesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncludePrices, true
}

// SetIncludePrices sets field value
func (o *GetEventsRequest) SetIncludePrices(v bool) {
	o.IncludePrices = v
}

// GetAllEvents returns the AllEvents field value
func (o *GetEventsRequest) GetAllEvents() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.AllEvents
}

// GetAllEventsOk returns a tuple with the AllEvents field value
// and a boolean to check if the value has been set.
func (o *GetEventsRequest) GetAllEventsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AllEvents, true
}

// SetAllEvents sets field value
func (o *GetEventsRequest) SetAllEvents(v bool) {
	o.AllEvents = v
}

// GetAllHcaps returns the AllHcaps field value if set, zero value otherwise.
func (o *GetEventsRequest) GetAllHcaps() bool {
	if o == nil || o.AllHcaps == nil {
		var ret bool
		return ret
	}
	return *o.AllHcaps
}

// GetAllHcapsOk returns a tuple with the AllHcaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventsRequest) GetAllHcapsOk() (*bool, bool) {
	if o == nil || o.AllHcaps == nil {
		return nil, false
	}
	return o.AllHcaps, true
}

// HasAllHcaps returns a boolean if a field has been set.
func (o *GetEventsRequest) HasAllHcaps() bool {
	if o != nil && o.AllHcaps != nil {
		return true
	}

	return false
}

// SetAllHcaps gets a reference to the given bool and assigns it to the AllHcaps field.
func (o *GetEventsRequest) SetAllHcaps(v bool) {
	o.AllHcaps = &v
}

// GetEventIds returns the EventIds field value if set, zero value otherwise.
func (o *GetEventsRequest) GetEventIds() [][]string {
	if o == nil || o.EventIds == nil {
		var ret [][]string
		return ret
	}
	return *o.EventIds
}

// GetEventIdsOk returns a tuple with the EventIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEventsRequest) GetEventIdsOk() (*[][]string, bool) {
	if o == nil || o.EventIds == nil {
		return nil, false
	}
	return o.EventIds, true
}

// HasEventIds returns a boolean if a field has been set.
func (o *GetEventsRequest) HasEventIds() bool {
	if o != nil && o.EventIds != nil {
		return true
	}

	return false
}

// SetEventIds gets a reference to the given [][]string and assigns it to the EventIds field.
func (o *GetEventsRequest) SetEventIds(v [][]string) {
	o.EventIds = &v
}

func (o GetEventsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["include_prices"] = o.IncludePrices
	}
	if true {
		toSerialize["all_events"] = o.AllEvents
	}
	if o.AllHcaps != nil {
		toSerialize["all_hcaps"] = o.AllHcaps
	}
	if o.EventIds != nil {
		toSerialize["event_ids"] = o.EventIds
	}
	return json.Marshal(toSerialize)
}

type NullableGetEventsRequest struct {
	value *GetEventsRequest
	isSet bool
}

func (v NullableGetEventsRequest) Get() *GetEventsRequest {
	return v.value
}

func (v *NullableGetEventsRequest) Set(val *GetEventsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventsRequest(val *GetEventsRequest) *NullableGetEventsRequest {
	return &NullableGetEventsRequest{value: val, isSet: true}
}

func (v NullableGetEventsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package blackapi

import (
	"encoding/json"
)

// RefreshBetSlipResponse struct for RefreshBetSlipResponse
type RefreshBetSlipResponse struct {
	Status string `json:"status"`
}

// NewRefreshBetSlipResponse instantiates a new RefreshBetSlipResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshBetSlipResponse(status string, ) *RefreshBetSlipResponse {
	this := RefreshBetSlipResponse{}
	this.Status = status
	return &this
}

// NewRefreshBetSlipResponseWithDefaults instantiates a new RefreshBetSlipResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshBetSlipResponseWithDefaults() *RefreshBetSlipResponse {
	this := RefreshBetSlipResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *RefreshBetSlipResponse) GetStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RefreshBetSlipResponse) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RefreshBetSlipResponse) SetStatus(v string) {
	o.Status = v
}

func (o RefreshBetSlipResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableRefreshBetSlipResponse struct {
	value *RefreshBetSlipResponse
	isSet bool
}

func (v NullableRefreshBetSlipResponse) Get() *RefreshBetSlipResponse {
	return v.value
}

func (v *NullableRefreshBetSlipResponse) Set(val *RefreshBetSlipResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshBetSlipResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshBetSlipResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshBetSlipResponse(val *RefreshBetSlipResponse) *NullableRefreshBetSlipResponse {
	return &NullableRefreshBetSlipResponse{value: val, isSet: true}
}

func (v NullableRefreshBetSlipResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshBetSlipResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

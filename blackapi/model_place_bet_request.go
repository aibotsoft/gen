/*
 * Black API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package blackapi

import (
	"encoding/json"
)

// PlaceBetRequest struct for PlaceBetRequest
type PlaceBetRequest struct {
	BetslipId string `json:"betslip_id"`
	Price float64 `json:"price"`
	Stake []interface{} `json:"stake"`
	IgnoreSystemMaintenance bool `json:"ignore_system_maintenance"`
	NoPutOfferExchange bool `json:"no_put_offer_exchange"`
	AdaptiveBookies *[]string `json:"adaptive_bookies,omitempty"`
	RequestUuid string `json:"request_uuid"`
	Duration int64 `json:"duration"`
	Accounts *[][]string `json:"accounts,omitempty"`
}

// NewPlaceBetRequest instantiates a new PlaceBetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceBetRequest(betslipId string, price float64, stake []interface{}, ignoreSystemMaintenance bool, noPutOfferExchange bool, requestUuid string, duration int64, ) *PlaceBetRequest {
	this := PlaceBetRequest{}
	this.BetslipId = betslipId
	this.Price = price
	this.Stake = stake
	this.IgnoreSystemMaintenance = ignoreSystemMaintenance
	this.NoPutOfferExchange = noPutOfferExchange
	this.RequestUuid = requestUuid
	this.Duration = duration
	return &this
}

// NewPlaceBetRequestWithDefaults instantiates a new PlaceBetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceBetRequestWithDefaults() *PlaceBetRequest {
	this := PlaceBetRequest{}
	return &this
}

// GetBetslipId returns the BetslipId field value
func (o *PlaceBetRequest) GetBetslipId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BetslipId
}

// GetBetslipIdOk returns a tuple with the BetslipId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetBetslipIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BetslipId, true
}

// SetBetslipId sets field value
func (o *PlaceBetRequest) SetBetslipId(v string) {
	o.BetslipId = v
}

// GetPrice returns the Price field value
func (o *PlaceBetRequest) GetPrice() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetPriceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *PlaceBetRequest) SetPrice(v float64) {
	o.Price = v
}

// GetStake returns the Stake field value
func (o *PlaceBetRequest) GetStake() []interface{} {
	if o == nil  {
		var ret []interface{}
		return ret
	}

	return o.Stake
}

// GetStakeOk returns a tuple with the Stake field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetStakeOk() (*[]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Stake, true
}

// SetStake sets field value
func (o *PlaceBetRequest) SetStake(v []interface{}) {
	o.Stake = v
}

// GetIgnoreSystemMaintenance returns the IgnoreSystemMaintenance field value
func (o *PlaceBetRequest) GetIgnoreSystemMaintenance() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IgnoreSystemMaintenance
}

// GetIgnoreSystemMaintenanceOk returns a tuple with the IgnoreSystemMaintenance field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetIgnoreSystemMaintenanceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IgnoreSystemMaintenance, true
}

// SetIgnoreSystemMaintenance sets field value
func (o *PlaceBetRequest) SetIgnoreSystemMaintenance(v bool) {
	o.IgnoreSystemMaintenance = v
}

// GetNoPutOfferExchange returns the NoPutOfferExchange field value
func (o *PlaceBetRequest) GetNoPutOfferExchange() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.NoPutOfferExchange
}

// GetNoPutOfferExchangeOk returns a tuple with the NoPutOfferExchange field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetNoPutOfferExchangeOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NoPutOfferExchange, true
}

// SetNoPutOfferExchange sets field value
func (o *PlaceBetRequest) SetNoPutOfferExchange(v bool) {
	o.NoPutOfferExchange = v
}

// GetAdaptiveBookies returns the AdaptiveBookies field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetAdaptiveBookies() []string {
	if o == nil || o.AdaptiveBookies == nil {
		var ret []string
		return ret
	}
	return *o.AdaptiveBookies
}

// GetAdaptiveBookiesOk returns a tuple with the AdaptiveBookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetAdaptiveBookiesOk() (*[]string, bool) {
	if o == nil || o.AdaptiveBookies == nil {
		return nil, false
	}
	return o.AdaptiveBookies, true
}

// HasAdaptiveBookies returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasAdaptiveBookies() bool {
	if o != nil && o.AdaptiveBookies != nil {
		return true
	}

	return false
}

// SetAdaptiveBookies gets a reference to the given []string and assigns it to the AdaptiveBookies field.
func (o *PlaceBetRequest) SetAdaptiveBookies(v []string) {
	o.AdaptiveBookies = &v
}

// GetRequestUuid returns the RequestUuid field value
func (o *PlaceBetRequest) GetRequestUuid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RequestUuid
}

// GetRequestUuidOk returns a tuple with the RequestUuid field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetRequestUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestUuid, true
}

// SetRequestUuid sets field value
func (o *PlaceBetRequest) SetRequestUuid(v string) {
	o.RequestUuid = v
}

// GetDuration returns the Duration field value
func (o *PlaceBetRequest) GetDuration() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetDurationOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *PlaceBetRequest) SetDuration(v int64) {
	o.Duration = v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetAccounts() [][]string {
	if o == nil || o.Accounts == nil {
		var ret [][]string
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetAccountsOk() (*[][]string, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given [][]string and assigns it to the Accounts field.
func (o *PlaceBetRequest) SetAccounts(v [][]string) {
	o.Accounts = &v
}

func (o PlaceBetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["betslip_id"] = o.BetslipId
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["stake"] = o.Stake
	}
	if true {
		toSerialize["ignore_system_maintenance"] = o.IgnoreSystemMaintenance
	}
	if true {
		toSerialize["no_put_offer_exchange"] = o.NoPutOfferExchange
	}
	if o.AdaptiveBookies != nil {
		toSerialize["adaptive_bookies"] = o.AdaptiveBookies
	}
	if true {
		toSerialize["request_uuid"] = o.RequestUuid
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceBetRequest struct {
	value *PlaceBetRequest
	isSet bool
}

func (v NullablePlaceBetRequest) Get() *PlaceBetRequest {
	return v.value
}

func (v *NullablePlaceBetRequest) Set(val *PlaceBetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceBetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceBetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceBetRequest(val *PlaceBetRequest) *NullablePlaceBetRequest {
	return &NullablePlaceBetRequest{value: val, isSet: true}
}

func (v NullablePlaceBetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceBetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

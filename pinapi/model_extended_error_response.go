/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// ExtendedErrorResponse struct for ExtendedErrorResponse
type ExtendedErrorResponse struct {
	Ref *string `json:"ref,omitempty"`
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewExtendedErrorResponse instantiates a new ExtendedErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendedErrorResponse() *ExtendedErrorResponse {
	this := ExtendedErrorResponse{}
	return &this
}

// NewExtendedErrorResponseWithDefaults instantiates a new ExtendedErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendedErrorResponseWithDefaults() *ExtendedErrorResponse {
	this := ExtendedErrorResponse{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ExtendedErrorResponse) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedErrorResponse) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ExtendedErrorResponse) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ExtendedErrorResponse) SetRef(v string) {
	o.Ref = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ExtendedErrorResponse) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedErrorResponse) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ExtendedErrorResponse) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ExtendedErrorResponse) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ExtendedErrorResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ExtendedErrorResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ExtendedErrorResponse) SetMessage(v string) {
	o.Message = &v
}

func (o ExtendedErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableExtendedErrorResponse struct {
	value *ExtendedErrorResponse
	isSet bool
}

func (v NullableExtendedErrorResponse) Get() *ExtendedErrorResponse {
	return v.value
}

func (v *NullableExtendedErrorResponse) Set(val *ExtendedErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendedErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendedErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendedErrorResponse(val *ExtendedErrorResponse) *NullableExtendedErrorResponse {
	return &NullableExtendedErrorResponse{value: val, isSet: true}
}

func (v NullableExtendedErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendedErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

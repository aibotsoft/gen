/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// CancellationReasonResponse Cancellation Response Data
type CancellationReasonResponse struct {
	// Contains a list of Cancellation Reasons.
	CancellationReasons *[]CancellationReason `json:"cancellationReasons,omitempty"`
}

// NewCancellationReasonResponse instantiates a new CancellationReasonResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancellationReasonResponse() *CancellationReasonResponse {
	this := CancellationReasonResponse{}
	return &this
}

// NewCancellationReasonResponseWithDefaults instantiates a new CancellationReasonResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancellationReasonResponseWithDefaults() *CancellationReasonResponse {
	this := CancellationReasonResponse{}
	return &this
}

// GetCancellationReasons returns the CancellationReasons field value if set, zero value otherwise.
func (o *CancellationReasonResponse) GetCancellationReasons() []CancellationReason {
	if o == nil || o.CancellationReasons == nil {
		var ret []CancellationReason
		return ret
	}
	return *o.CancellationReasons
}

// GetCancellationReasonsOk returns a tuple with the CancellationReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationReasonResponse) GetCancellationReasonsOk() (*[]CancellationReason, bool) {
	if o == nil || o.CancellationReasons == nil {
		return nil, false
	}
	return o.CancellationReasons, true
}

// HasCancellationReasons returns a boolean if a field has been set.
func (o *CancellationReasonResponse) HasCancellationReasons() bool {
	if o != nil && o.CancellationReasons != nil {
		return true
	}

	return false
}

// SetCancellationReasons gets a reference to the given []CancellationReason and assigns it to the CancellationReasons field.
func (o *CancellationReasonResponse) SetCancellationReasons(v []CancellationReason) {
	o.CancellationReasons = &v
}

func (o CancellationReasonResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CancellationReasons != nil {
		toSerialize["cancellationReasons"] = o.CancellationReasons
	}
	return json.Marshal(toSerialize)
}

type NullableCancellationReasonResponse struct {
	value *CancellationReasonResponse
	isSet bool
}

func (v NullableCancellationReasonResponse) Get() *CancellationReasonResponse {
	return v.value
}

func (v *NullableCancellationReasonResponse) Set(val *CancellationReasonResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCancellationReasonResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCancellationReasonResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancellationReasonResponse(val *CancellationReasonResponse) *NullableCancellationReasonResponse {
	return &NullableCancellationReasonResponse{value: val, isSet: true}
}

func (v NullableCancellationReasonResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancellationReasonResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

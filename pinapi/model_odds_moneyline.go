/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pinapi

import (
	"bytes"
	"encoding/json"
)

// OddsMoneyline struct for OddsMoneyline
type OddsMoneyline struct {
	// Away team price
	Home *float64 `json:"home,omitempty" xml:"home"`
	// Away team price.
	Away *float64 `json:"away,omitempty" xml:"away"`
	// Draw price. This is present only for events we offer price for draw.
	Draw *float64 `json:"draw,omitempty" xml:"draw"`
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *OddsMoneyline) GetHome() float64 {
	if o == nil || o.Home == nil {
		var ret float64
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OddsMoneyline) GetHomeOk() (float64, bool) {
	if o == nil || o.Home == nil {
		var ret float64
		return ret, false
	}
	return *o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *OddsMoneyline) HasHome() bool {
	if o != nil && o.Home != nil {
		return true
	}

	return false
}

// SetHome gets a reference to the given float64 and assigns it to the Home field.
func (o *OddsMoneyline) SetHome(v float64) {
	o.Home = &v
}

// GetAway returns the Away field value if set, zero value otherwise.
func (o *OddsMoneyline) GetAway() float64 {
	if o == nil || o.Away == nil {
		var ret float64
		return ret
	}
	return *o.Away
}

// GetAwayOk returns a tuple with the Away field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OddsMoneyline) GetAwayOk() (float64, bool) {
	if o == nil || o.Away == nil {
		var ret float64
		return ret, false
	}
	return *o.Away, true
}

// HasAway returns a boolean if a field has been set.
func (o *OddsMoneyline) HasAway() bool {
	if o != nil && o.Away != nil {
		return true
	}

	return false
}

// SetAway gets a reference to the given float64 and assigns it to the Away field.
func (o *OddsMoneyline) SetAway(v float64) {
	o.Away = &v
}

// GetDraw returns the Draw field value if set, zero value otherwise.
func (o *OddsMoneyline) GetDraw() float64 {
	if o == nil || o.Draw == nil {
		var ret float64
		return ret
	}
	return *o.Draw
}

// GetDrawOk returns a tuple with the Draw field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OddsMoneyline) GetDrawOk() (float64, bool) {
	if o == nil || o.Draw == nil {
		var ret float64
		return ret, false
	}
	return *o.Draw, true
}

// HasDraw returns a boolean if a field has been set.
func (o *OddsMoneyline) HasDraw() bool {
	if o != nil && o.Draw != nil {
		return true
	}

	return false
}

// SetDraw gets a reference to the given float64 and assigns it to the Draw field.
func (o *OddsMoneyline) SetDraw(v float64) {
	o.Draw = &v
}

type NullableOddsMoneyline struct {
	Value        OddsMoneyline
	ExplicitNull bool
}

func (v NullableOddsMoneyline) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableOddsMoneyline) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

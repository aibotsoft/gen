/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// PlaceBetRequest Request to place a bet.
type PlaceBetRequest struct {
	OddsFormat OddsFormat `json:"oddsFormat"`
	// This is a Unique ID for PlaceBet requests. This is to support idempotent requests.
	UniqueRequestId string `json:"uniqueRequestId"`
	// Whether or not to accept a bet when there is a line change in favor of the client.
	AcceptBetterLine bool `json:"acceptBetterLine"`
	// amount in clientâ€™s currency.
	Stake float64 `json:"stake"`
	WinRiskStake WinRiskStake `json:"winRiskStake"`
	// Line identification.
	LineId int64 `json:"lineId"`
	// Alternate line identification.
	AltLineId NullableInt64 `json:"altLineId,omitempty"`
	// Baseball only. Refers to the pitcher for Team1. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.
	Pitcher1MustStart *bool `json:"pitcher1MustStart,omitempty"`
	// Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.
	Pitcher2MustStart *bool `json:"pitcher2MustStart,omitempty"`
	FillType FillType `json:"fillType"`
	SportId int64 `json:"sportId"`
	EventId int64 `json:"eventId"`
	PeriodNumber int `json:"periodNumber"`
	// Bet type.
	BetType string `json:"betType"`
	// Team type.
	Team *string `json:"team,omitempty"`
	// Side type.
	Side NullableString `json:"side,omitempty"`
}

// NewPlaceBetRequest instantiates a new PlaceBetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceBetRequest(oddsFormat OddsFormat, uniqueRequestId string, acceptBetterLine bool, stake float64, winRiskStake WinRiskStake, lineId int64, fillType FillType, sportId int64, eventId int64, periodNumber int, betType string, ) *PlaceBetRequest {
	this := PlaceBetRequest{}
	this.OddsFormat = oddsFormat
	this.UniqueRequestId = uniqueRequestId
	this.AcceptBetterLine = acceptBetterLine
	this.Stake = stake
	this.WinRiskStake = winRiskStake
	this.LineId = lineId
	this.FillType = fillType
	this.SportId = sportId
	this.EventId = eventId
	this.PeriodNumber = periodNumber
	this.BetType = betType
	return &this
}

// NewPlaceBetRequestWithDefaults instantiates a new PlaceBetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceBetRequestWithDefaults() *PlaceBetRequest {
	this := PlaceBetRequest{}
	var fillType FillType = "NORMAL"
	this.FillType = fillType
	return &this
}

// GetOddsFormat returns the OddsFormat field value
func (o *PlaceBetRequest) GetOddsFormat() OddsFormat {
	if o == nil  {
		var ret OddsFormat
		return ret
	}

	return o.OddsFormat
}

// GetOddsFormatOk returns a tuple with the OddsFormat field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetOddsFormatOk() (*OddsFormat, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OddsFormat, true
}

// SetOddsFormat sets field value
func (o *PlaceBetRequest) SetOddsFormat(v OddsFormat) {
	o.OddsFormat = v
}

// GetUniqueRequestId returns the UniqueRequestId field value
func (o *PlaceBetRequest) GetUniqueRequestId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UniqueRequestId
}

// GetUniqueRequestIdOk returns a tuple with the UniqueRequestId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetUniqueRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UniqueRequestId, true
}

// SetUniqueRequestId sets field value
func (o *PlaceBetRequest) SetUniqueRequestId(v string) {
	o.UniqueRequestId = v
}

// GetAcceptBetterLine returns the AcceptBetterLine field value
func (o *PlaceBetRequest) GetAcceptBetterLine() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.AcceptBetterLine
}

// GetAcceptBetterLineOk returns a tuple with the AcceptBetterLine field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetAcceptBetterLineOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcceptBetterLine, true
}

// SetAcceptBetterLine sets field value
func (o *PlaceBetRequest) SetAcceptBetterLine(v bool) {
	o.AcceptBetterLine = v
}

// GetStake returns the Stake field value
func (o *PlaceBetRequest) GetStake() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.Stake
}

// GetStakeOk returns a tuple with the Stake field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetStakeOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Stake, true
}

// SetStake sets field value
func (o *PlaceBetRequest) SetStake(v float64) {
	o.Stake = v
}

// GetWinRiskStake returns the WinRiskStake field value
func (o *PlaceBetRequest) GetWinRiskStake() WinRiskStake {
	if o == nil  {
		var ret WinRiskStake
		return ret
	}

	return o.WinRiskStake
}

// GetWinRiskStakeOk returns a tuple with the WinRiskStake field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetWinRiskStakeOk() (*WinRiskStake, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WinRiskStake, true
}

// SetWinRiskStake sets field value
func (o *PlaceBetRequest) SetWinRiskStake(v WinRiskStake) {
	o.WinRiskStake = v
}

// GetLineId returns the LineId field value
func (o *PlaceBetRequest) GetLineId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.LineId
}

// GetLineIdOk returns a tuple with the LineId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetLineIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LineId, true
}

// SetLineId sets field value
func (o *PlaceBetRequest) SetLineId(v int64) {
	o.LineId = v
}

// GetAltLineId returns the AltLineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlaceBetRequest) GetAltLineId() int64 {
	if o == nil || o.AltLineId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AltLineId.Get()
}

// GetAltLineIdOk returns a tuple with the AltLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlaceBetRequest) GetAltLineIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AltLineId.Get(), o.AltLineId.IsSet()
}

// HasAltLineId returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasAltLineId() bool {
	if o != nil && o.AltLineId.IsSet() {
		return true
	}

	return false
}

// SetAltLineId gets a reference to the given NullableInt64 and assigns it to the AltLineId field.
func (o *PlaceBetRequest) SetAltLineId(v int64) {
	o.AltLineId.Set(&v)
}
// SetAltLineIdNil sets the value for AltLineId to be an explicit nil
func (o *PlaceBetRequest) SetAltLineIdNil() {
	o.AltLineId.Set(nil)
}

// UnsetAltLineId ensures that no value is present for AltLineId, not even an explicit nil
func (o *PlaceBetRequest) UnsetAltLineId() {
	o.AltLineId.Unset()
}

// GetPitcher1MustStart returns the Pitcher1MustStart field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetPitcher1MustStart() bool {
	if o == nil || o.Pitcher1MustStart == nil {
		var ret bool
		return ret
	}
	return *o.Pitcher1MustStart
}

// GetPitcher1MustStartOk returns a tuple with the Pitcher1MustStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetPitcher1MustStartOk() (*bool, bool) {
	if o == nil || o.Pitcher1MustStart == nil {
		return nil, false
	}
	return o.Pitcher1MustStart, true
}

// HasPitcher1MustStart returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasPitcher1MustStart() bool {
	if o != nil && o.Pitcher1MustStart != nil {
		return true
	}

	return false
}

// SetPitcher1MustStart gets a reference to the given bool and assigns it to the Pitcher1MustStart field.
func (o *PlaceBetRequest) SetPitcher1MustStart(v bool) {
	o.Pitcher1MustStart = &v
}

// GetPitcher2MustStart returns the Pitcher2MustStart field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetPitcher2MustStart() bool {
	if o == nil || o.Pitcher2MustStart == nil {
		var ret bool
		return ret
	}
	return *o.Pitcher2MustStart
}

// GetPitcher2MustStartOk returns a tuple with the Pitcher2MustStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetPitcher2MustStartOk() (*bool, bool) {
	if o == nil || o.Pitcher2MustStart == nil {
		return nil, false
	}
	return o.Pitcher2MustStart, true
}

// HasPitcher2MustStart returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasPitcher2MustStart() bool {
	if o != nil && o.Pitcher2MustStart != nil {
		return true
	}

	return false
}

// SetPitcher2MustStart gets a reference to the given bool and assigns it to the Pitcher2MustStart field.
func (o *PlaceBetRequest) SetPitcher2MustStart(v bool) {
	o.Pitcher2MustStart = &v
}

// GetFillType returns the FillType field value
func (o *PlaceBetRequest) GetFillType() FillType {
	if o == nil  {
		var ret FillType
		return ret
	}

	return o.FillType
}

// GetFillTypeOk returns a tuple with the FillType field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetFillTypeOk() (*FillType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FillType, true
}

// SetFillType sets field value
func (o *PlaceBetRequest) SetFillType(v FillType) {
	o.FillType = v
}

// GetSportId returns the SportId field value
func (o *PlaceBetRequest) GetSportId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.SportId
}

// GetSportIdOk returns a tuple with the SportId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetSportIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SportId, true
}

// SetSportId sets field value
func (o *PlaceBetRequest) SetSportId(v int64) {
	o.SportId = v
}

// GetEventId returns the EventId field value
func (o *PlaceBetRequest) GetEventId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetEventIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *PlaceBetRequest) SetEventId(v int64) {
	o.EventId = v
}

// GetPeriodNumber returns the PeriodNumber field value
func (o *PlaceBetRequest) GetPeriodNumber() int {
	if o == nil  {
		var ret int
		return ret
	}

	return o.PeriodNumber
}

// GetPeriodNumberOk returns a tuple with the PeriodNumber field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetPeriodNumberOk() (*int, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PeriodNumber, true
}

// SetPeriodNumber sets field value
func (o *PlaceBetRequest) SetPeriodNumber(v int) {
	o.PeriodNumber = v
}

// GetBetType returns the BetTypeId field value
func (o *PlaceBetRequest) GetBetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.BetType
}

// GetBetTypeOk returns a tuple with the BetTypeId field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetBetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BetType, true
}

// SetBetType sets field value
func (o *PlaceBetRequest) SetBetType(v string) {
	o.BetType = v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetTeam() string {
	if o == nil || o.Team == nil {
		var ret string
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetTeamOk() (*string, bool) {
	if o == nil || o.Team == nil {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasTeam() bool {
	if o != nil && o.Team != nil {
		return true
	}

	return false
}

// SetTeam gets a reference to the given string and assigns it to the Team field.
func (o *PlaceBetRequest) SetTeam(v string) {
	o.Team = &v
}

// GetSide returns the Side field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlaceBetRequest) GetSide() string {
	if o == nil || o.Side.Get() == nil {
		var ret string
		return ret
	}
	return *o.Side.Get()
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlaceBetRequest) GetSideOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Side.Get(), o.Side.IsSet()
}

// HasSide returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasSide() bool {
	if o != nil && o.Side.IsSet() {
		return true
	}

	return false
}

// SetSide gets a reference to the given NullableString and assigns it to the Side field.
func (o *PlaceBetRequest) SetSide(v string) {
	o.Side.Set(&v)
}
// SetSideNil sets the value for Side to be an explicit nil
func (o *PlaceBetRequest) SetSideNil() {
	o.Side.Set(nil)
}

// UnsetSide ensures that no value is present for Side, not even an explicit nil
func (o *PlaceBetRequest) UnsetSide() {
	o.Side.Unset()
}

func (o PlaceBetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["oddsFormat"] = o.OddsFormat
	}
	if true {
		toSerialize["uniqueRequestId"] = o.UniqueRequestId
	}
	if true {
		toSerialize["acceptBetterLine"] = o.AcceptBetterLine
	}
	if true {
		toSerialize["stake"] = o.Stake
	}
	if true {
		toSerialize["winRiskStake"] = o.WinRiskStake
	}
	if true {
		toSerialize["lineId"] = o.LineId
	}
	if o.AltLineId.IsSet() {
		toSerialize["altLineId"] = o.AltLineId.Get()
	}
	if o.Pitcher1MustStart != nil {
		toSerialize["pitcher1MustStart"] = o.Pitcher1MustStart
	}
	if o.Pitcher2MustStart != nil {
		toSerialize["pitcher2MustStart"] = o.Pitcher2MustStart
	}
	if true {
		toSerialize["fillType"] = o.FillType
	}
	if true {
		toSerialize["sportId"] = o.SportId
	}
	if true {
		toSerialize["eventId"] = o.EventId
	}
	if true {
		toSerialize["periodNumber"] = o.PeriodNumber
	}
	if true {
		toSerialize["betType"] = o.BetType
	}
	if o.Team != nil {
		toSerialize["team"] = o.Team
	}
	if o.Side.IsSet() {
		toSerialize["side"] = o.Side.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceBetRequest struct {
	value *PlaceBetRequest
	isSet bool
}

func (v NullablePlaceBetRequest) Get() *PlaceBetRequest {
	return v.value
}

func (v *NullablePlaceBetRequest) Set(val *PlaceBetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceBetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceBetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceBetRequest(val *PlaceBetRequest) *NullablePlaceBetRequest {
	return &NullablePlaceBetRequest{value: val, isSet: true}
}

func (v NullablePlaceBetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceBetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

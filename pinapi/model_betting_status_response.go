/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// BettingStatusResponse struct for BettingStatusResponse
type BettingStatusResponse struct {
	// Betting status. 
	Status string `json:"status"`
}

// NewBettingStatusResponse instantiates a new BettingStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBettingStatusResponse(status string, ) *BettingStatusResponse {
	this := BettingStatusResponse{}
	this.Status = status
	return &this
}

// NewBettingStatusResponseWithDefaults instantiates a new BettingStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBettingStatusResponseWithDefaults() *BettingStatusResponse {
	this := BettingStatusResponse{}
	return &this
}

// GetStatus returns the Status field value
func (o *BettingStatusResponse) GetStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BettingStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BettingStatusResponse) SetStatus(v string) {
	o.Status = v
}

func (o BettingStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableBettingStatusResponse struct {
	value *BettingStatusResponse
	isSet bool
}

func (v NullableBettingStatusResponse) Get() *BettingStatusResponse {
	return v.value
}

func (v *NullableBettingStatusResponse) Set(val *BettingStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBettingStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBettingStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBettingStatusResponse(val *BettingStatusResponse) *NullableBettingStatusResponse {
	return &NullableBettingStatusResponse{value: val, isSet: true}
}

func (v NullableBettingStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBettingStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// WinRiskStake Whether the stake amount is risk or win amount.
type WinRiskStake string

// List of WinRiskStake
const (
	WIN WinRiskStake = "WIN"
	RISK WinRiskStake = "RISK"
)

// Ptr returns reference to WinRiskStake value
func (v WinRiskStake) Ptr() *WinRiskStake {
	return &v
}


type NullableWinRiskStake struct {
	value *WinRiskStake
	isSet bool
}

func (v NullableWinRiskStake) Get() *WinRiskStake {
	return v.value
}

func (v *NullableWinRiskStake) Set(val *WinRiskStake) {
	v.value = val
	v.isSet = true
}

func (v NullableWinRiskStake) IsSet() bool {
	return v.isSet
}

func (v *NullableWinRiskStake) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWinRiskStake(val *WinRiskStake) *NullableWinRiskStake {
	return &NullableWinRiskStake{value: val, isSet: true}
}

func (v NullableWinRiskStake) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWinRiskStake) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

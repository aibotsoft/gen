/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// TeaserGroupsPayout struct for TeaserGroupsPayout
type TeaserGroupsPayout struct {
	// Number of legs that must be bet and won to get the associated price.
	NumberOfLegs *int `json:"numberOfLegs,omitempty"`
	// Price of the bet given the specified number of legs.
	Price *float64 `json:"price,omitempty"`
}

// NewTeaserGroupsPayout instantiates a new TeaserGroupsPayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeaserGroupsPayout() *TeaserGroupsPayout {
	this := TeaserGroupsPayout{}
	return &this
}

// NewTeaserGroupsPayoutWithDefaults instantiates a new TeaserGroupsPayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeaserGroupsPayoutWithDefaults() *TeaserGroupsPayout {
	this := TeaserGroupsPayout{}
	return &this
}

// GetNumberOfLegs returns the NumberOfLegs field value if set, zero value otherwise.
func (o *TeaserGroupsPayout) GetNumberOfLegs() int {
	if o == nil || o.NumberOfLegs == nil {
		var ret int
		return ret
	}
	return *o.NumberOfLegs
}

// GetNumberOfLegsOk returns a tuple with the NumberOfLegs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeaserGroupsPayout) GetNumberOfLegsOk() (*int, bool) {
	if o == nil || o.NumberOfLegs == nil {
		return nil, false
	}
	return o.NumberOfLegs, true
}

// HasNumberOfLegs returns a boolean if a field has been set.
func (o *TeaserGroupsPayout) HasNumberOfLegs() bool {
	if o != nil && o.NumberOfLegs != nil {
		return true
	}

	return false
}

// SetNumberOfLegs gets a reference to the given int and assigns it to the NumberOfLegs field.
func (o *TeaserGroupsPayout) SetNumberOfLegs(v int) {
	o.NumberOfLegs = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *TeaserGroupsPayout) GetPrice() float64 {
	if o == nil || o.Price == nil {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeaserGroupsPayout) GetPriceOk() (*float64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *TeaserGroupsPayout) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *TeaserGroupsPayout) SetPrice(v float64) {
	o.Price = &v
}

func (o TeaserGroupsPayout) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumberOfLegs != nil {
		toSerialize["numberOfLegs"] = o.NumberOfLegs
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableTeaserGroupsPayout struct {
	value *TeaserGroupsPayout
	isSet bool
}

func (v NullableTeaserGroupsPayout) Get() *TeaserGroupsPayout {
	return v.value
}

func (v *NullableTeaserGroupsPayout) Set(val *TeaserGroupsPayout) {
	v.value = val
	v.isSet = true
}

func (v NullableTeaserGroupsPayout) IsSet() bool {
	return v.isSet
}

func (v *NullableTeaserGroupsPayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeaserGroupsPayout(val *TeaserGroupsPayout) *NullableTeaserGroupsPayout {
	return &NullableTeaserGroupsPayout{value: val, isSet: true}
}

func (v NullableTeaserGroupsPayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeaserGroupsPayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

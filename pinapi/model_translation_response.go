/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// TranslationResponse struct for TranslationResponse
type TranslationResponse struct {
	// Collection of translations.
	Translations *[]Translation `json:"translations,omitempty"`
}

// NewTranslationResponse instantiates a new TranslationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslationResponse() *TranslationResponse {
	this := TranslationResponse{}
	return &this
}

// NewTranslationResponseWithDefaults instantiates a new TranslationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslationResponseWithDefaults() *TranslationResponse {
	this := TranslationResponse{}
	return &this
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *TranslationResponse) GetTranslations() []Translation {
	if o == nil || o.Translations == nil {
		var ret []Translation
		return ret
	}
	return *o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationResponse) GetTranslationsOk() (*[]Translation, bool) {
	if o == nil || o.Translations == nil {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *TranslationResponse) HasTranslations() bool {
	if o != nil && o.Translations != nil {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *TranslationResponse) SetTranslations(v []Translation) {
	o.Translations = &v
}

func (o TranslationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Translations != nil {
		toSerialize["translations"] = o.Translations
	}
	return json.Marshal(toSerialize)
}

type NullableTranslationResponse struct {
	value *TranslationResponse
	isSet bool
}

func (v NullableTranslationResponse) Get() *TranslationResponse {
	return v.value
}

func (v *NullableTranslationResponse) Set(val *TranslationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslationResponse(val *TranslationResponse) *NullableTranslationResponse {
	return &NullableTranslationResponse{value: val, isSet: true}
}

func (v NullableTranslationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

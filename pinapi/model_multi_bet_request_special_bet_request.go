/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pinapi

import (
	"encoding/json"
)

// MultiBetRequestSpecialBetRequest struct for MultiBetRequestSpecialBetRequest
type MultiBetRequestSpecialBetRequest struct {
	// The individual bets.
	Bets *[]SpecialBetRequest `json:"bets,omitempty"`
}

// NewMultiBetRequestSpecialBetRequest instantiates a new MultiBetRequestSpecialBetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiBetRequestSpecialBetRequest() *MultiBetRequestSpecialBetRequest {
	this := MultiBetRequestSpecialBetRequest{}
	return &this
}

// NewMultiBetRequestSpecialBetRequestWithDefaults instantiates a new MultiBetRequestSpecialBetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiBetRequestSpecialBetRequestWithDefaults() *MultiBetRequestSpecialBetRequest {
	this := MultiBetRequestSpecialBetRequest{}
	return &this
}

// GetBets returns the Bets field value if set, zero value otherwise.
func (o *MultiBetRequestSpecialBetRequest) GetBets() []SpecialBetRequest {
	if o == nil || o.Bets == nil {
		var ret []SpecialBetRequest
		return ret
	}
	return *o.Bets
}

// GetBetsOk returns a tuple with the Bets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiBetRequestSpecialBetRequest) GetBetsOk() (*[]SpecialBetRequest, bool) {
	if o == nil || o.Bets == nil {
		return nil, false
	}
	return o.Bets, true
}

// HasBets returns a boolean if a field has been set.
func (o *MultiBetRequestSpecialBetRequest) HasBets() bool {
	if o != nil && o.Bets != nil {
		return true
	}

	return false
}

// SetBets gets a reference to the given []SpecialBetRequest and assigns it to the Bets field.
func (o *MultiBetRequestSpecialBetRequest) SetBets(v []SpecialBetRequest) {
	o.Bets = &v
}

func (o MultiBetRequestSpecialBetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bets != nil {
		toSerialize["bets"] = o.Bets
	}
	return json.Marshal(toSerialize)
}

type NullableMultiBetRequestSpecialBetRequest struct {
	value *MultiBetRequestSpecialBetRequest
	isSet bool
}

func (v NullableMultiBetRequestSpecialBetRequest) Get() *MultiBetRequestSpecialBetRequest {
	return v.value
}

func (v *NullableMultiBetRequestSpecialBetRequest) Set(val *MultiBetRequestSpecialBetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiBetRequestSpecialBetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiBetRequestSpecialBetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiBetRequestSpecialBetRequest(val *MultiBetRequestSpecialBetRequest) *NullableMultiBetRequestSpecialBetRequest {
	return &NullableMultiBetRequestSpecialBetRequest{value: val, isSet: true}
}

func (v NullableMultiBetRequestSpecialBetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiBetRequestSpecialBetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

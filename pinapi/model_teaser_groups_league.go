/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// TeaserGroupsLeague struct for TeaserGroupsLeague
type TeaserGroupsLeague struct {
	// Unique identifier. League details can be retrieved from a call to v2/leagues endpoint.
	Id *int `json:"id,omitempty"`
	Spread *TeaserGroupsBetType `json:"spread,omitempty"`
	Total *TeaserGroupsBetType `json:"total,omitempty"`
}

// NewTeaserGroupsLeague instantiates a new TeaserGroupsLeague object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeaserGroupsLeague() *TeaserGroupsLeague {
	this := TeaserGroupsLeague{}
	return &this
}

// NewTeaserGroupsLeagueWithDefaults instantiates a new TeaserGroupsLeague object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeaserGroupsLeagueWithDefaults() *TeaserGroupsLeague {
	this := TeaserGroupsLeague{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TeaserGroupsLeague) GetId() int {
	if o == nil || o.Id == nil {
		var ret int
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeaserGroupsLeague) GetIdOk() (*int, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TeaserGroupsLeague) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int and assigns it to the Id field.
func (o *TeaserGroupsLeague) SetId(v int) {
	o.Id = &v
}

// GetSpread returns the Spread field value if set, zero value otherwise.
func (o *TeaserGroupsLeague) GetSpread() TeaserGroupsBetType {
	if o == nil || o.Spread == nil {
		var ret TeaserGroupsBetType
		return ret
	}
	return *o.Spread
}

// GetSpreadOk returns a tuple with the Spread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeaserGroupsLeague) GetSpreadOk() (*TeaserGroupsBetType, bool) {
	if o == nil || o.Spread == nil {
		return nil, false
	}
	return o.Spread, true
}

// HasSpread returns a boolean if a field has been set.
func (o *TeaserGroupsLeague) HasSpread() bool {
	if o != nil && o.Spread != nil {
		return true
	}

	return false
}

// SetSpread gets a reference to the given TeaserGroupsBetType and assigns it to the Spread field.
func (o *TeaserGroupsLeague) SetSpread(v TeaserGroupsBetType) {
	o.Spread = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *TeaserGroupsLeague) GetTotal() TeaserGroupsBetType {
	if o == nil || o.Total == nil {
		var ret TeaserGroupsBetType
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeaserGroupsLeague) GetTotalOk() (*TeaserGroupsBetType, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *TeaserGroupsLeague) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given TeaserGroupsBetType and assigns it to the Total field.
func (o *TeaserGroupsLeague) SetTotal(v TeaserGroupsBetType) {
	o.Total = &v
}

func (o TeaserGroupsLeague) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Spread != nil {
		toSerialize["spread"] = o.Spread
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableTeaserGroupsLeague struct {
	value *TeaserGroupsLeague
	isSet bool
}

func (v NullableTeaserGroupsLeague) Get() *TeaserGroupsLeague {
	return v.value
}

func (v *NullableTeaserGroupsLeague) Set(val *TeaserGroupsLeague) {
	v.value = val
	v.isSet = true
}

func (v NullableTeaserGroupsLeague) IsSet() bool {
	return v.isSet
}

func (v *NullableTeaserGroupsLeague) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeaserGroupsLeague(val *TeaserGroupsLeague) *NullableTeaserGroupsLeague {
	return &NullableTeaserGroupsLeague{value: val, isSet: true}
}

func (v NullableTeaserGroupsLeague) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeaserGroupsLeague) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

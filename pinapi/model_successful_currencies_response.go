/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1` 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// SuccessfulCurrenciesResponse struct for SuccessfulCurrenciesResponse
type SuccessfulCurrenciesResponse struct {
	// Currencies container.
	Currencies *[]Currency `json:"currencies,omitempty"`
}

// NewSuccessfulCurrenciesResponse instantiates a new SuccessfulCurrenciesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessfulCurrenciesResponse() *SuccessfulCurrenciesResponse {
	this := SuccessfulCurrenciesResponse{}
	return &this
}

// NewSuccessfulCurrenciesResponseWithDefaults instantiates a new SuccessfulCurrenciesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessfulCurrenciesResponseWithDefaults() *SuccessfulCurrenciesResponse {
	this := SuccessfulCurrenciesResponse{}
	return &this
}

// GetCurrencies returns the Currencies field value if set, zero value otherwise.
func (o *SuccessfulCurrenciesResponse) GetCurrencies() []Currency {
	if o == nil || o.Currencies == nil {
		var ret []Currency
		return ret
	}
	return *o.Currencies
}

// GetCurrenciesOk returns a tuple with the Currencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessfulCurrenciesResponse) GetCurrenciesOk() (*[]Currency, bool) {
	if o == nil || o.Currencies == nil {
		return nil, false
	}
	return o.Currencies, true
}

// HasCurrencies returns a boolean if a field has been set.
func (o *SuccessfulCurrenciesResponse) HasCurrencies() bool {
	if o != nil && o.Currencies != nil {
		return true
	}

	return false
}

// SetCurrencies gets a reference to the given []Currency and assigns it to the Currencies field.
func (o *SuccessfulCurrenciesResponse) SetCurrencies(v []Currency) {
	o.Currencies = &v
}

func (o SuccessfulCurrenciesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Currencies != nil {
		toSerialize["currencies"] = o.Currencies
	}
	return json.Marshal(toSerialize)
}

type NullableSuccessfulCurrenciesResponse struct {
	value *SuccessfulCurrenciesResponse
	isSet bool
}

func (v NullableSuccessfulCurrenciesResponse) Get() *SuccessfulCurrenciesResponse {
	return v.value
}

func (v *NullableSuccessfulCurrenciesResponse) Set(val *SuccessfulCurrenciesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessfulCurrenciesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessfulCurrenciesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessfulCurrenciesResponse(val *SuccessfulCurrenciesResponse) *NullableSuccessfulCurrenciesResponse {
	return &NullableSuccessfulCurrenciesResponse{value: val, isSet: true}
}

func (v NullableSuccessfulCurrenciesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessfulCurrenciesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pinapi

import (
	"bytes"
	"encoding/json"
)

// CancellationReason Possible keys \\:   * correctTeam1Id * correctTeam2Id * correctListedPitcher1 * correctListedPitcher2 * correctSpread * correctTotalPoints * correctTeam1TotalPoints * correctTeam2TotalPoints * correctTeam1Score * correctTeam2Score * correctTeam1TennisSetsScore * correctTeam2TennisSetsScore
type CancellationReason struct {
	Code    string                     `json:"code" xml:"code"`
	Details *[]CancellationDetailsItem `json:"details,omitempty" xml:"details"`
}

// GetCode returns the Code field value
func (o *CancellationReason) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// SetCode sets field value
func (o *CancellationReason) SetCode(v string) {
	o.Code = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *CancellationReason) GetDetails() []CancellationDetailsItem {
	if o == nil || o.Details == nil {
		var ret []CancellationDetailsItem
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CancellationReason) GetDetailsOk() ([]CancellationDetailsItem, bool) {
	if o == nil || o.Details == nil {
		var ret []CancellationDetailsItem
		return ret, false
	}
	return *o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *CancellationReason) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []CancellationDetailsItem and assigns it to the Details field.
func (o *CancellationReason) SetDetails(v []CancellationDetailsItem) {
	o.Details = &v
}

type NullableCancellationReason struct {
	Value        CancellationReason
	ExplicitNull bool
}

func (v NullableCancellationReason) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCancellationReason) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

syntax = "proto3";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package confpb;
option go_package = "confpb";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.equal_all) = true;
//option (gogoproto.populate_all) = true;
//option (gogoproto.testgen_all) = true;


service Conf {
    rpc Ping (PingRequest) returns (PingResponse) {
    }
    rpc GetConfig (GetConfigRequest) returns (GetConfigResponse) {
    }
    rpc GetAccount (GetAccountRequest) returns (GetAccountResponse) {
    }
    rpc GetCurrency (GetCurrencyRequest) returns (GetCurrencyResponse) {
    }
    rpc GetServices (GetServicesRequest) returns (GetServicesResponse) {
    }
    rpc GetNetStatus (GetNetStatusRequest) returns (GetNetStatusResponse) {
    }
}

message GetServicesRequest {
}
message GetServicesResponse {
    repeated BetService services = 1 [(gogoproto.nullable) = false];
}
message BetService {
    int64 id = 1;
    string forted_name = 2;
    string service_name = 3;
    int64 grpc_port = 4;
}
//-------------------------------------------------------
message GetCurrencyRequest {
}
message GetCurrencyResponse {
    repeated Currency currency_list = 1 [(gogoproto.nullable) = false];
}
message Currency {
    string code = 1;
    double value = 2;
}
//--------------------------------------------------------
message GetAccountRequest {
    string service_name = 1;
}
message GetAccountResponse {
    Account account = 1 [(gogoproto.nullable) = false];
}
message Account {
    int64 id = 1;
    string account_type = 2;
    string currency_code = 3;
    string service_name = 4;
    string username = 5;
    string password = 6;
    double commission = 7;
    double share = 8;
}
//---------------------------------------------------------------
message GetConfigRequest {
    string service_name = 1;
}
message GetConfigResponse {
    ServiceConfig service_config = 1 [(gogoproto.nullable) = false];
}

message ServiceConfig {
    int64 grpc_port = 1;
}

message GetNetStatusRequest {
}
message GetNetStatusResponse {
    bool status = 1;
}
message PingRequest {
}
message PingResponse {
}
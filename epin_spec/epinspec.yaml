openapi: 3.0.1
info:
  title: EpinApi
  version: 1.0.0
servers:
  - url: 'https://api.arcadia.pinnacle.com/0.1'
security:
  - x-api-key: []
    x-session: []
    x-device-uuid: []
paths:
  /bets/straight/quote:
    post:
      tags:
        - Bet
      operationId: GetLine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceBetRequest'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLineResponse'
  /bets/straight:
    post:
      tags:
        - Bet
      operationId: PlaceBet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceBetRequest'

      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceBetResponse'
        400:
          description: Bad Request
          content:
            application/*:
              schema:
                $ref: '#/components/schemas/BadRequestError'


  /sessions/{session}:
    put:
      tags:
        - Client
      operationId: CheckLogin
      parameters:
        - required: true
          in: path
          name: session
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /sessions:
    post:
      tags:
        - Client
      operationId: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'

      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'


  /wallet/balance:
    get:
      tags:
        - Client
      operationId: GetBalance
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientBalanceResponse'

  /matchups/{event_id}/market/{marketKey}:
    get:
      tags:
        - Markets
      operationId: GetMarket
      parameters:
        - required: true
          in: path
          name: event_id
          schema:
            type: integer
        - required: true
          in: path
          name: marketKey
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketItem'

  /matchups/{id}/markets/straight:
    get:
      tags:
        - Markets
      operationId: GetMarketsByEventId
      parameters:
        - name: id
          in: path
          description: EventID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketsResponse'
components:
  securitySchemes:
    x-api-key:
      type: apiKey
      in: header
      name: x-api-key
    x-session:
      type: apiKey
      in: header
      name: x-session
    x-device-uuid:
      type: apiKey
      in: header
      name: x-device-uuid

  schemas:
    ClientBalanceResponse:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: number
          description: Amount available for betting.
          format: float
        currency:
          type: string
          description: Clientâ€™s currency code.
      description: Client Balance Details

    MarketsResponse:
      type: array
      items:
        $ref: '#/components/schemas/MarketItem'
    MarketItem:
      required:
        - key
        - isAlternate
        - matchupId
        - prices
        - limits
      type: object
      example:
        {"cutoffAt": "2020-05-19T22:00:00+00:00",
         "isAlternate": false,
         "key": "s;2;m",
         "limits": [{"amount": 250, "type": "maxRiskStake"}],
         "matchupId": 1124366254,
         "period": 2,
         "prices": [{ "designation": "home","price": -102},{ "designation": "away","price": -119 }],
         "status": "open",
         "type": "moneyline",
         "version": 1001539647}
      properties:
        cutoffAt:
          type: string
          format: date-time
        isAlternate:
          type: boolean
        key:
          type: string
        limits:
          type: array
          items:
            $ref: '#/components/schemas/LimitItem'
        matchupId:
          type: integer
        period:
          type: integer
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PriceItem'
        status:
          type: string
        type:
          type: string
        version:
          type: integer
    LimitItem:
      required:
        - type
        - amount
      type: object
      example:
        {"amount":0.97,"type":"minWinStake"}
      properties:
        amount:
          type: number
          format: double
        type:
          type: string
    PriceItem:
      required:
        - designation
        - price
      type: object
      properties:
        designation:
          type: string
        points:
          type: float
        price:
          type: integer

    LoginRequest:
      type: object
      required:
        - username
        - password
        - trustCode
        - captchaToken
      properties:
        password:
          type: string
        username:
          type: string
        captchaToken:
          type: string
        trustCode:
          type: string
    LoginResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: 'date-time'
        expiresAt:
          type: string
          format: 'date-time'
        isExpired:
          type: boolean
        isSuperseded:
          type: boolean
        isTimedOut:
          type: boolean
        lastUsedAt:
          type: string
          format: 'date-time'
        license:
          type: string
        preferredView:
          type: string
        token:
          type: string
        transactionId:
          type: string
        trustCode:
          type: string
        username:
          type: string
    PlaceBetRequest:
      type: object
      required:
        - oddsFormat
        - selections
      example:
        {"oddsFormat":"decimal",
         "selections":[{"matchupId":1124397913,
                        "marketKey":"s;0;m",
                        "designation":"home",
                        "pitchers":[{"alignment":"home","name":"","status":"listed"},{"alignment":"away","name":"","status":"listed"}],
                        "price":2.28}],
         "stake":1,
         "class":"Straight",
         "acceptBetterPrices":false,
         "acceptBetterPrice":false}
      properties:
        oddsFormat:
          type: string
        acceptBetterPrice:
          type: boolean
        acceptBetterPrices:
          type: boolean
        class:
          type: string
        stake:
          type: number
          format: double
        selections:
          type: array
          items:
            $ref: '#/components/schemas/SelectionItem'
    SelectionItem:
      type: object
      example:
        {"designation": "home",
         "marketKey": "s;0;m",
         "matchupId": 1124397913,
         "participantId": null,
         "points": null,
         "price": 2.28}
      required:
        - price
        - designation
        - matchupId
        - marketKey
      properties:
        matchupId:
          type: integer
        marketKey:
          type: string
        designation:
          type: string
        pitchers:
          type: array
          items:
            $ref: '#/components/schemas/PitcherItem'
        price:
          type: number
          format: double
        points:
          type: number
          format: double
        participantId:
          type: integer
    PitcherItem:
      type: object
      example:
        {"alignment":"home","name":"","status":"listed"}
      properties:
        alignment:
          type: string
        name:
          type: string
        status:
          type: string
    PlaceBetResponse:
      type: object
      example:
        {
          "createdAt": "2020-05-20T09:36:48.549001+00:00",
          "id": 1124430658,
          "oddsFormat": "decimal",
          "precisePrice": null,
          "price": 2.28,
          "requestId": "698edc14-95a8-f7ec-e338-b1c81ac7109e",
          "selections": [
          {
            "designation": "home",
            "marketKey": "s;0;m",
            "matchupId": 1124397913,
            "participantId": null,
            "points": null,
            "price": 2.28
          }
          ],
          "stake": 1.0,
          "type": "straight"
        }
      properties:
        createdAt:
          type: string
          format: 'date-time'
        id:
          type: integer
        oddsFormat:
          type: string
        price:
          type: number
          format: double
        requestId:
          type: string
          format: uuid
        stake:
          type: number
          format: double
        type:
          type: string
        selections:
          type: array
          items:
            $ref: '#/components/schemas/SelectionItem'
    #    GetLineRequest:
    #      type: object
    #      example:
    #        {"oddsFormat":"american",
    #         "selections":[{"matchupId":1122534955,
    #                        "marketKey":"s;0;s;1.5",
    #                        "designation":"home",
    #                        "pitchers":[{"alignment":"home","name":"","status":"listed"},{"alignment":"away","name":"","status":"listed"}],
    #                        "price":-106,
    #                        "points":1.5}]}
    #      properties:
    #        prop:
    #          type:
    GetLineResponse:
      type: object
      example:
        {"classes": [{  "name": "Straight",  "price": 106.0}],
         "limits": [{  "amount": 0.91,  "type": "minRiskStake" },
                    {  "amount": 8445.25,"type": "maxRiskStake" },
                    {  "amount": 0.97,"type": "minWinStake" },
                    {"amount": 8951.97,"type": "maxWinStake" }],
         "selections": [{"designation": "home","marketKey": "s;0;s;1.5","matchupId": 1122534955,"price": 106.0}]        }
      properties:
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassItem'
        limits:
          type: array
          items:
            $ref: '#/components/schemas/LimitItem'
        selections:
          type: array
          items:
            $ref: '#/components/schemas/SelectionItem'
    ClassItem:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: double
    BadRequestError:
      type: object
      example:
        {
          "detail": "This bet was not accepted. The bet amount is less than the minimum. We have adjusted your stake amount to match the minimum limit. Please resubmit to confirm your wager.",
          "maxRiskStake": 12679.63,
          "maxWinStake": 4615.38,
          "minRiskStake": 2.75,
          "minWinStake": 1.0,
          "status": 400,
          "title": "BELOW_MIN_BET_AMOUNT",
          "type": "about:blank"
        }
      properties:
        title:
          type: string
        detail:
          type: string
        type:
          type: string
        status:
          type: integer







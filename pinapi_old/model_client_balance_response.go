/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pinapi_old

import (
	"bytes"
	"encoding/json"
)

// ClientBalanceResponse Client Balance Details
type ClientBalanceResponse struct {
	// Amount available for betting.
	AvailableBalance float64 `json:"availableBalance" xml:"availableBalance"`
	// Sum of not yet settled bet amounts.
	OutstandingTransactions float64 `json:"outstandingTransactions" xml:"outstandingTransactions"`
	// Client’s credit.
	GivenCredit float64 `json:"givenCredit" xml:"givenCredit"`
	// Client’s currency code.
	Currency string `json:"currency" xml:"currency"`
}

// GetAvailableBalance returns the AvailableBalance field value
func (o *ClientBalanceResponse) GetAvailableBalance() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.AvailableBalance
}

// SetAvailableBalance sets field value
func (o *ClientBalanceResponse) SetAvailableBalance(v float64) {
	o.AvailableBalance = v
}

// GetOutstandingTransactions returns the OutstandingTransactions field value
func (o *ClientBalanceResponse) GetOutstandingTransactions() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.OutstandingTransactions
}

// SetOutstandingTransactions sets field value
func (o *ClientBalanceResponse) SetOutstandingTransactions(v float64) {
	o.OutstandingTransactions = v
}

// GetGivenCredit returns the GivenCredit field value
func (o *ClientBalanceResponse) GetGivenCredit() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.GivenCredit
}

// SetGivenCredit sets field value
func (o *ClientBalanceResponse) SetGivenCredit(v float64) {
	o.GivenCredit = v
}

// GetCurrency returns the Currency field value
func (o *ClientBalanceResponse) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// SetCurrency sets field value
func (o *ClientBalanceResponse) SetCurrency(v string) {
	o.Currency = v
}

type NullableClientBalanceResponse struct {
	Value        ClientBalanceResponse
	ExplicitNull bool
}

func (v NullableClientBalanceResponse) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableClientBalanceResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

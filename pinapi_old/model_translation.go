/*
 * Pinnacle - Customer API Reference
 *
 *  # Authentication   API uses HTTP Basic access authentication. You need to send Authorization HTTP Request header:    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`  Example:  `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pinapi_old

import (
	"bytes"
	"encoding/json"
)

// Translation struct for Translation
type Translation struct {
	// Original requested text to be translated.
	Text *string `json:"text,omitempty" xml:"text"`
	// Collection of translations by culture.
	Cultures *[]TranslationByCulture `json:"cultures,omitempty" xml:"cultures"`
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *Translation) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Translation) GetTextOk() (string, bool) {
	if o == nil || o.Text == nil {
		var ret string
		return ret, false
	}
	return *o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *Translation) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *Translation) SetText(v string) {
	o.Text = &v
}

// GetCultures returns the Cultures field value if set, zero value otherwise.
func (o *Translation) GetCultures() []TranslationByCulture {
	if o == nil || o.Cultures == nil {
		var ret []TranslationByCulture
		return ret
	}
	return *o.Cultures
}

// GetCulturesOk returns a tuple with the Cultures field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Translation) GetCulturesOk() ([]TranslationByCulture, bool) {
	if o == nil || o.Cultures == nil {
		var ret []TranslationByCulture
		return ret, false
	}
	return *o.Cultures, true
}

// HasCultures returns a boolean if a field has been set.
func (o *Translation) HasCultures() bool {
	if o != nil && o.Cultures != nil {
		return true
	}

	return false
}

// SetCultures gets a reference to the given []TranslationByCulture and assigns it to the Cultures field.
func (o *Translation) SetCultures(v []TranslationByCulture) {
	o.Cultures = &v
}

type NullableTranslation struct {
	Value        Translation
	ExplicitNull bool
}

func (v NullableTranslation) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableTranslation) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

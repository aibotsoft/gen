openapi: 3.0.1
info:
  title: Pinnacle - Customer API Reference
  description: >

    # Authentication 


    API uses HTTP Basic access authentication. You need to send Authorization
    HTTP Request header:  


    `Authorization: Basic <Base64 value of UTF-8 encoded "username:password">`


    Example:


    `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`
  version: 1.0.0
  x-logo:
    url: >-
      https://avatars2.githubusercontent.com/u/31601407?s=400&u=f3c6e1cfc8a26665e4a4df6d8da4a7ee527aeceb&v=4
servers:
  - url: 'https://api.pinnacle.com/'
security:
  - basicAuth: []
paths:
  /v1/client/balance:
    get:
      summary: Get Client Balance - v1
      description: Returns current client balance.
      operationId: Client_Balance_V1_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientBalanceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ClientBalanceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClientBalanceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ClientBalanceResponse'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExtendedErrorResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/ExtendedErrorResponse'
      deprecated: false
  /v1/translations:
    get:
      summary: Get Translations - v1
      description: >
        Returns language translations.  


        Example to translate `football` and `soccer` to German and French
        language: 

          ```
          
          https://api.pinnacle.com/v1/translations?cultureCodes=de-DE|fr-FR&baseTexts=Football|Soccer
          

          ```
          ## Supported languages 
          
          | Language   | Culture |
          |------------|---------|
          | English    | en-US   |
          | British    | en-GB   |
          | ChineseSI  | zh-CN   |
          | ChineseTR  | zh-TW   |
          | Finnish    | fi-FI   |
          | German     | de-DE   |
          | Hebrew     | he-IL   |
          | Italian    | it-IT   |
          | Norwegian  | nb-NO   |
          | Portuguese | pt-BR   |
          | Russian    | ru-RU   |
          | Spanish    | es-ES   |
          | Swedish    | sv-SE   |
          | Thai       | th-TH   |
          | Polish     | pl-PL   |
          | French     | fr-FR   |
          | Japanese   | ja-JP   |
          | Korean     | ko-KR   |
          | Vietnamese | vi-VN   |
          | Indonesian | id-ID   |
          | Czech      | cs-CZ   |
          
          
      operationId: Translations_V1_Get
      parameters:
        - name: cultureCodes
          in: query
          description: Array of language cultures separated with |.
          required: true
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: baseTexts
          in: query
          description: >-
            Array of base texts to be translated separated with |. Each base
            text in the array must be URL encoded. Base texts are not case
            sensitive.
          required: true
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Identifier representing the type of error that occurred.
        message:
          type: string
          description: Description of the error.
      description: Contains details of an error that was encountered.
    ExtendedErrorResponse:
      type: object
      properties:
        ref:
          type: string
        code:
          type: string
        message:
          type: string
    ClientBalanceResponse:
      required:
        - availableBalance
        - currency
        - givenCredit
        - outstandingTransactions
      type: object
      properties:
        availableBalance:
          type: number
          description: Amount available for betting.
          format: double
        outstandingTransactions:
          type: number
          description: Sum of not yet settled bet amounts.
          format: double
        givenCredit:
          type: number
          description: Client’s credit.
          format: double
        currency:
          type: string
          description: Client’s currency code.
      description: Client Balance Details
    TranslationResponse:
      type: object
      properties:
        translations:
          type: array
          description: Collection of translations.
          items:
            $ref: '#/components/schemas/Translation'
    Translation:
      type: object
      properties:
        text:
          type: string
          description: Original requested text to be translated.
          example: Football
        cultures:
          type: array
          description: Collection of translations by culture.
          items:
            $ref: '#/components/schemas/TranslationByCulture'
    TranslationByCulture:
      type: object
      properties:
        id:
          type: string
          description: Culture based on which the text is translated.
          example: fr-FR
          enum:
            - en-US
            - en-GB
            - zh-CN
            - zh-TW
            - fi-FI
            - de-DE
            - he-IL
            - it-IT
            - nb-NO
            - pt-BR
            - ru-RU
            - es-ES
            - sv-SE
            - th-TH
            - pl-PL
            - fr-FR
            - ja-JP
            - ko-KR
            - vi-VN
            - id-ID
            - cs-CZ
        text:
          type: string
          description: Translation text.
          example: Football américain
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

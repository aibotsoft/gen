/*
 * EpinApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package epinapi

import (
	"encoding/json"
)

// LoginRequest struct for LoginRequest
type LoginRequest struct {
	Password string `json:"password"`
	Username string `json:"username"`
	CaptchaToken string `json:"captchaToken"`
	TrustCode string `json:"trustCode"`
}

// NewLoginRequest instantiates a new LoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginRequest(password string, username string, captchaToken string, trustCode string, ) *LoginRequest {
	this := LoginRequest{}
	this.Password = password
	this.Username = username
	this.CaptchaToken = captchaToken
	this.TrustCode = trustCode
	return &this
}

// NewLoginRequestWithDefaults instantiates a new LoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginRequestWithDefaults() *LoginRequest {
	this := LoginRequest{}
	return &this
}

// GetPassword returns the Password field value
func (o *LoginRequest) GetPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *LoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *LoginRequest) SetPassword(v string) {
	o.Password = v
}

// GetUsername returns the Username field value
func (o *LoginRequest) GetUsername() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *LoginRequest) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *LoginRequest) SetUsername(v string) {
	o.Username = v
}

// GetCaptchaToken returns the CaptchaToken field value
func (o *LoginRequest) GetCaptchaToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CaptchaToken
}

// GetCaptchaTokenOk returns a tuple with the CaptchaToken field value
// and a boolean to check if the value has been set.
func (o *LoginRequest) GetCaptchaTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CaptchaToken, true
}

// SetCaptchaToken sets field value
func (o *LoginRequest) SetCaptchaToken(v string) {
	o.CaptchaToken = v
}

// GetTrustCode returns the TrustCode field value
func (o *LoginRequest) GetTrustCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TrustCode
}

// GetTrustCodeOk returns a tuple with the TrustCode field value
// and a boolean to check if the value has been set.
func (o *LoginRequest) GetTrustCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TrustCode, true
}

// SetTrustCode sets field value
func (o *LoginRequest) SetTrustCode(v string) {
	o.TrustCode = v
}

func (o LoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["captchaToken"] = o.CaptchaToken
	}
	if true {
		toSerialize["trustCode"] = o.TrustCode
	}
	return json.Marshal(toSerialize)
}

type NullableLoginRequest struct {
	value *LoginRequest
	isSet bool
}

func (v NullableLoginRequest) Get() *LoginRequest {
	return v.value
}

func (v *NullableLoginRequest) Set(val *LoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginRequest(val *LoginRequest) *NullableLoginRequest {
	return &NullableLoginRequest{value: val, isSet: true}
}

func (v NullableLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * EpinApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package epinapi

import (
	"encoding/json"
)

// ClientBalanceResponse Client Balance Details
type ClientBalanceResponse struct {
	// Amount available for betting.
	Amount float32 `json:"amount"`
	// Clientâ€™s currency code.
	Currency string `json:"currency"`
}

// NewClientBalanceResponse instantiates a new ClientBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientBalanceResponse(amount float32, currency string, ) *ClientBalanceResponse {
	this := ClientBalanceResponse{}
	this.Amount = amount
	this.Currency = currency
	return &this
}

// NewClientBalanceResponseWithDefaults instantiates a new ClientBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientBalanceResponseWithDefaults() *ClientBalanceResponse {
	this := ClientBalanceResponse{}
	return &this
}

// GetAmount returns the Amount field value
func (o *ClientBalanceResponse) GetAmount() float32 {
	if o == nil  {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ClientBalanceResponse) GetAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ClientBalanceResponse) SetAmount(v float32) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *ClientBalanceResponse) GetCurrency() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ClientBalanceResponse) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ClientBalanceResponse) SetCurrency(v string) {
	o.Currency = v
}

func (o ClientBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullableClientBalanceResponse struct {
	value *ClientBalanceResponse
	isSet bool
}

func (v NullableClientBalanceResponse) Get() *ClientBalanceResponse {
	return v.value
}

func (v *NullableClientBalanceResponse) Set(val *ClientBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClientBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClientBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientBalanceResponse(val *ClientBalanceResponse) *NullableClientBalanceResponse {
	return &NullableClientBalanceResponse{value: val, isSet: true}
}

func (v NullableClientBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

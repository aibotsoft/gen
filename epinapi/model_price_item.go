/*
 * EpinApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package epinapi

import (
	"encoding/json"
)

// PriceItem struct for PriceItem
type PriceItem struct {
	Designation string `json:"designation"`
	Points *float32 `json:"points,omitempty"`
	Price int64 `json:"price"`
}

// NewPriceItem instantiates a new PriceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceItem(designation string, price int64, ) *PriceItem {
	this := PriceItem{}
	this.Designation = designation
	this.Price = price
	return &this
}

// NewPriceItemWithDefaults instantiates a new PriceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceItemWithDefaults() *PriceItem {
	this := PriceItem{}
	return &this
}

// GetDesignation returns the Designation field value
func (o *PriceItem) GetDesignation() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Designation
}

// GetDesignationOk returns a tuple with the Designation field value
// and a boolean to check if the value has been set.
func (o *PriceItem) GetDesignationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Designation, true
}

// SetDesignation sets field value
func (o *PriceItem) SetDesignation(v string) {
	o.Designation = v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *PriceItem) GetPoints() float32 {
	if o == nil || o.Points == nil {
		var ret float32
		return ret
	}
	return *o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceItem) GetPointsOk() (*float32, bool) {
	if o == nil || o.Points == nil {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *PriceItem) HasPoints() bool {
	if o != nil && o.Points != nil {
		return true
	}

	return false
}

// SetPoints gets a reference to the given float32 and assigns it to the Points field.
func (o *PriceItem) SetPoints(v float32) {
	o.Points = &v
}

// GetPrice returns the Price field value
func (o *PriceItem) GetPrice() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *PriceItem) GetPriceOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *PriceItem) SetPrice(v int64) {
	o.Price = v
}

func (o PriceItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["designation"] = o.Designation
	}
	if o.Points != nil {
		toSerialize["points"] = o.Points
	}
	if true {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullablePriceItem struct {
	value *PriceItem
	isSet bool
}

func (v NullablePriceItem) Get() *PriceItem {
	return v.value
}

func (v *NullablePriceItem) Set(val *PriceItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceItem(val *PriceItem) *NullablePriceItem {
	return &NullablePriceItem{value: val, isSet: true}
}

func (v NullablePriceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

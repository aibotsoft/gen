/*
 * EpinApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package epinapi

import (
	"encoding/json"
)

// PlaceBetRequest struct for PlaceBetRequest
type PlaceBetRequest struct {
	OddsFormat string `json:"oddsFormat"`
	AcceptBetterPrice *bool `json:"acceptBetterPrice,omitempty"`
	AcceptBetterPrices *bool `json:"acceptBetterPrices,omitempty"`
	Class *string `json:"class,omitempty"`
	Stake *float64 `json:"stake,omitempty"`
	Selections []SelectionItem `json:"selections"`
}

// NewPlaceBetRequest instantiates a new PlaceBetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceBetRequest(oddsFormat string, selections []SelectionItem, ) *PlaceBetRequest {
	this := PlaceBetRequest{}
	this.OddsFormat = oddsFormat
	this.Selections = selections
	return &this
}

// NewPlaceBetRequestWithDefaults instantiates a new PlaceBetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceBetRequestWithDefaults() *PlaceBetRequest {
	this := PlaceBetRequest{}
	return &this
}

// GetOddsFormat returns the OddsFormat field value
func (o *PlaceBetRequest) GetOddsFormat() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OddsFormat
}

// GetOddsFormatOk returns a tuple with the OddsFormat field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetOddsFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OddsFormat, true
}

// SetOddsFormat sets field value
func (o *PlaceBetRequest) SetOddsFormat(v string) {
	o.OddsFormat = v
}

// GetAcceptBetterPrice returns the AcceptBetterPrice field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetAcceptBetterPrice() bool {
	if o == nil || o.AcceptBetterPrice == nil {
		var ret bool
		return ret
	}
	return *o.AcceptBetterPrice
}

// GetAcceptBetterPriceOk returns a tuple with the AcceptBetterPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetAcceptBetterPriceOk() (*bool, bool) {
	if o == nil || o.AcceptBetterPrice == nil {
		return nil, false
	}
	return o.AcceptBetterPrice, true
}

// HasAcceptBetterPrice returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasAcceptBetterPrice() bool {
	if o != nil && o.AcceptBetterPrice != nil {
		return true
	}

	return false
}

// SetAcceptBetterPrice gets a reference to the given bool and assigns it to the AcceptBetterPrice field.
func (o *PlaceBetRequest) SetAcceptBetterPrice(v bool) {
	o.AcceptBetterPrice = &v
}

// GetAcceptBetterPrices returns the AcceptBetterPrices field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetAcceptBetterPrices() bool {
	if o == nil || o.AcceptBetterPrices == nil {
		var ret bool
		return ret
	}
	return *o.AcceptBetterPrices
}

// GetAcceptBetterPricesOk returns a tuple with the AcceptBetterPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetAcceptBetterPricesOk() (*bool, bool) {
	if o == nil || o.AcceptBetterPrices == nil {
		return nil, false
	}
	return o.AcceptBetterPrices, true
}

// HasAcceptBetterPrices returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasAcceptBetterPrices() bool {
	if o != nil && o.AcceptBetterPrices != nil {
		return true
	}

	return false
}

// SetAcceptBetterPrices gets a reference to the given bool and assigns it to the AcceptBetterPrices field.
func (o *PlaceBetRequest) SetAcceptBetterPrices(v bool) {
	o.AcceptBetterPrices = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *PlaceBetRequest) SetClass(v string) {
	o.Class = &v
}

// GetStake returns the Stake field value if set, zero value otherwise.
func (o *PlaceBetRequest) GetStake() float64 {
	if o == nil || o.Stake == nil {
		var ret float64
		return ret
	}
	return *o.Stake
}

// GetStakeOk returns a tuple with the Stake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetStakeOk() (*float64, bool) {
	if o == nil || o.Stake == nil {
		return nil, false
	}
	return o.Stake, true
}

// HasStake returns a boolean if a field has been set.
func (o *PlaceBetRequest) HasStake() bool {
	if o != nil && o.Stake != nil {
		return true
	}

	return false
}

// SetStake gets a reference to the given float64 and assigns it to the Stake field.
func (o *PlaceBetRequest) SetStake(v float64) {
	o.Stake = &v
}

// GetSelections returns the Selections field value
func (o *PlaceBetRequest) GetSelections() []SelectionItem {
	if o == nil  {
		var ret []SelectionItem
		return ret
	}

	return o.Selections
}

// GetSelectionsOk returns a tuple with the Selections field value
// and a boolean to check if the value has been set.
func (o *PlaceBetRequest) GetSelectionsOk() (*[]SelectionItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Selections, true
}

// SetSelections sets field value
func (o *PlaceBetRequest) SetSelections(v []SelectionItem) {
	o.Selections = v
}

func (o PlaceBetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["oddsFormat"] = o.OddsFormat
	}
	if o.AcceptBetterPrice != nil {
		toSerialize["acceptBetterPrice"] = o.AcceptBetterPrice
	}
	if o.AcceptBetterPrices != nil {
		toSerialize["acceptBetterPrices"] = o.AcceptBetterPrices
	}
	if o.Class != nil {
		toSerialize["class"] = o.Class
	}
	if o.Stake != nil {
		toSerialize["stake"] = o.Stake
	}
	if true {
		toSerialize["selections"] = o.Selections
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceBetRequest struct {
	value *PlaceBetRequest
	isSet bool
}

func (v NullablePlaceBetRequest) Get() *PlaceBetRequest {
	return v.value
}

func (v *NullablePlaceBetRequest) Set(val *PlaceBetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceBetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceBetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceBetRequest(val *PlaceBetRequest) *NullablePlaceBetRequest {
	return &NullablePlaceBetRequest{value: val, isSet: true}
}

func (v NullablePlaceBetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceBetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

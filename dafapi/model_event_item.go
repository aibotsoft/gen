/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// EventItem struct for EventItem
type EventItem struct {
	GameID *int64 `json:"GameID,omitempty"`
	LeagueId *int64 `json:"LeagueId,omitempty"`
	MatchId *int64 `json:"MatchId,omitempty"`
	TeamId1 *int64 `json:"TeamId1,omitempty"`
	TeamId2 *int64 `json:"TeamId2,omitempty"`
	IsLive *bool `json:"IsLive,omitempty"`
	HasLive *bool `json:"hasLive,omitempty"`
	MatchCode *string `json:"MatchCode,omitempty"`
	GameTime *string `json:"GameTime,omitempty"`
	Ktm *string `json:"Ktm,omitempty"`
	ShowTime *string `json:"ShowTime,omitempty"`
	Etm *string `json:"Etm,omitempty"`
	T1V *int64 `json:"T1V,omitempty"`
	T2V *int64 `json:"T2V,omitempty"`
	Neu *bool `json:"Neu,omitempty"`
	Moc *int64 `json:"Moc,omitempty"`
	Rc1 *int64 `json:"Rc1,omitempty"`
	Rc2 *int64 `json:"Rc2,omitempty"`
	Tsp *bool `json:"Tsp,omitempty"`
	LDM *int64 `json:"LDM,omitempty"`
	HLS *int64 `json:"HLS,omitempty"`
	Sup *bool `json:"Sup,omitempty"`
	GV *bool `json:"GV,omitempty"`
	Sid *string `json:"Sid,omitempty"`
	Sid2 *string `json:"Sid2,omitempty"`
	Src *int64 `json:"Src,omitempty"`
	Src2 *int64 `json:"Src2,omitempty"`
	MaT *DateTypeEnum `json:"MaT,omitempty"`
	GST *int64 `json:"GST,omitempty"`
	CCode *string `json:"CCode,omitempty"`
	FtCount *int64 `json:"FtCount,omitempty"`
	HtCount *int64 `json:"HtCount,omitempty"`
	Markets *[]MarketItem `json:"Markets,omitempty"`
}

// NewEventItem instantiates a new EventItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventItem() *EventItem {
	this := EventItem{}
	return &this
}

// NewEventItemWithDefaults instantiates a new EventItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventItemWithDefaults() *EventItem {
	this := EventItem{}
	return &this
}

// GetGameID returns the GameID field value if set, zero value otherwise.
func (o *EventItem) GetGameID() int64 {
	if o == nil || o.GameID == nil {
		var ret int64
		return ret
	}
	return *o.GameID
}

// GetGameIDOk returns a tuple with the GameID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetGameIDOk() (*int64, bool) {
	if o == nil || o.GameID == nil {
		return nil, false
	}
	return o.GameID, true
}

// HasGameID returns a boolean if a field has been set.
func (o *EventItem) HasGameID() bool {
	if o != nil && o.GameID != nil {
		return true
	}

	return false
}

// SetGameID gets a reference to the given int64 and assigns it to the GameID field.
func (o *EventItem) SetGameID(v int64) {
	o.GameID = &v
}

// GetLeagueId returns the LeagueId field value if set, zero value otherwise.
func (o *EventItem) GetLeagueId() int64 {
	if o == nil || o.LeagueId == nil {
		var ret int64
		return ret
	}
	return *o.LeagueId
}

// GetLeagueIdOk returns a tuple with the LeagueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetLeagueIdOk() (*int64, bool) {
	if o == nil || o.LeagueId == nil {
		return nil, false
	}
	return o.LeagueId, true
}

// HasLeagueId returns a boolean if a field has been set.
func (o *EventItem) HasLeagueId() bool {
	if o != nil && o.LeagueId != nil {
		return true
	}

	return false
}

// SetLeagueId gets a reference to the given int64 and assigns it to the LeagueId field.
func (o *EventItem) SetLeagueId(v int64) {
	o.LeagueId = &v
}

// GetMatchId returns the MatchId field value if set, zero value otherwise.
func (o *EventItem) GetMatchId() int64 {
	if o == nil || o.MatchId == nil {
		var ret int64
		return ret
	}
	return *o.MatchId
}

// GetMatchIdOk returns a tuple with the MatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetMatchIdOk() (*int64, bool) {
	if o == nil || o.MatchId == nil {
		return nil, false
	}
	return o.MatchId, true
}

// HasMatchId returns a boolean if a field has been set.
func (o *EventItem) HasMatchId() bool {
	if o != nil && o.MatchId != nil {
		return true
	}

	return false
}

// SetMatchId gets a reference to the given int64 and assigns it to the MatchId field.
func (o *EventItem) SetMatchId(v int64) {
	o.MatchId = &v
}

// GetTeamId1 returns the TeamId1 field value if set, zero value otherwise.
func (o *EventItem) GetTeamId1() int64 {
	if o == nil || o.TeamId1 == nil {
		var ret int64
		return ret
	}
	return *o.TeamId1
}

// GetTeamId1Ok returns a tuple with the TeamId1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetTeamId1Ok() (*int64, bool) {
	if o == nil || o.TeamId1 == nil {
		return nil, false
	}
	return o.TeamId1, true
}

// HasTeamId1 returns a boolean if a field has been set.
func (o *EventItem) HasTeamId1() bool {
	if o != nil && o.TeamId1 != nil {
		return true
	}

	return false
}

// SetTeamId1 gets a reference to the given int64 and assigns it to the TeamId1 field.
func (o *EventItem) SetTeamId1(v int64) {
	o.TeamId1 = &v
}

// GetTeamId2 returns the TeamId2 field value if set, zero value otherwise.
func (o *EventItem) GetTeamId2() int64 {
	if o == nil || o.TeamId2 == nil {
		var ret int64
		return ret
	}
	return *o.TeamId2
}

// GetTeamId2Ok returns a tuple with the TeamId2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetTeamId2Ok() (*int64, bool) {
	if o == nil || o.TeamId2 == nil {
		return nil, false
	}
	return o.TeamId2, true
}

// HasTeamId2 returns a boolean if a field has been set.
func (o *EventItem) HasTeamId2() bool {
	if o != nil && o.TeamId2 != nil {
		return true
	}

	return false
}

// SetTeamId2 gets a reference to the given int64 and assigns it to the TeamId2 field.
func (o *EventItem) SetTeamId2(v int64) {
	o.TeamId2 = &v
}

// GetIsLive returns the IsLive field value if set, zero value otherwise.
func (o *EventItem) GetIsLive() bool {
	if o == nil || o.IsLive == nil {
		var ret bool
		return ret
	}
	return *o.IsLive
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetIsLiveOk() (*bool, bool) {
	if o == nil || o.IsLive == nil {
		return nil, false
	}
	return o.IsLive, true
}

// HasIsLive returns a boolean if a field has been set.
func (o *EventItem) HasIsLive() bool {
	if o != nil && o.IsLive != nil {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given bool and assigns it to the IsLive field.
func (o *EventItem) SetIsLive(v bool) {
	o.IsLive = &v
}

// GetHasLive returns the HasLive field value if set, zero value otherwise.
func (o *EventItem) GetHasLive() bool {
	if o == nil || o.HasLive == nil {
		var ret bool
		return ret
	}
	return *o.HasLive
}

// GetHasLiveOk returns a tuple with the HasLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetHasLiveOk() (*bool, bool) {
	if o == nil || o.HasLive == nil {
		return nil, false
	}
	return o.HasLive, true
}

// HasHasLive returns a boolean if a field has been set.
func (o *EventItem) HasHasLive() bool {
	if o != nil && o.HasLive != nil {
		return true
	}

	return false
}

// SetHasLive gets a reference to the given bool and assigns it to the HasLive field.
func (o *EventItem) SetHasLive(v bool) {
	o.HasLive = &v
}

// GetMatchCode returns the MatchCode field value if set, zero value otherwise.
func (o *EventItem) GetMatchCode() string {
	if o == nil || o.MatchCode == nil {
		var ret string
		return ret
	}
	return *o.MatchCode
}

// GetMatchCodeOk returns a tuple with the MatchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetMatchCodeOk() (*string, bool) {
	if o == nil || o.MatchCode == nil {
		return nil, false
	}
	return o.MatchCode, true
}

// HasMatchCode returns a boolean if a field has been set.
func (o *EventItem) HasMatchCode() bool {
	if o != nil && o.MatchCode != nil {
		return true
	}

	return false
}

// SetMatchCode gets a reference to the given string and assigns it to the MatchCode field.
func (o *EventItem) SetMatchCode(v string) {
	o.MatchCode = &v
}

// GetGameTime returns the GameTime field value if set, zero value otherwise.
func (o *EventItem) GetGameTime() string {
	if o == nil || o.GameTime == nil {
		var ret string
		return ret
	}
	return *o.GameTime
}

// GetGameTimeOk returns a tuple with the GameTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetGameTimeOk() (*string, bool) {
	if o == nil || o.GameTime == nil {
		return nil, false
	}
	return o.GameTime, true
}

// HasGameTime returns a boolean if a field has been set.
func (o *EventItem) HasGameTime() bool {
	if o != nil && o.GameTime != nil {
		return true
	}

	return false
}

// SetGameTime gets a reference to the given string and assigns it to the GameTime field.
func (o *EventItem) SetGameTime(v string) {
	o.GameTime = &v
}

// GetKtm returns the Ktm field value if set, zero value otherwise.
func (o *EventItem) GetKtm() string {
	if o == nil || o.Ktm == nil {
		var ret string
		return ret
	}
	return *o.Ktm
}

// GetKtmOk returns a tuple with the Ktm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetKtmOk() (*string, bool) {
	if o == nil || o.Ktm == nil {
		return nil, false
	}
	return o.Ktm, true
}

// HasKtm returns a boolean if a field has been set.
func (o *EventItem) HasKtm() bool {
	if o != nil && o.Ktm != nil {
		return true
	}

	return false
}

// SetKtm gets a reference to the given string and assigns it to the Ktm field.
func (o *EventItem) SetKtm(v string) {
	o.Ktm = &v
}

// GetShowTime returns the ShowTime field value if set, zero value otherwise.
func (o *EventItem) GetShowTime() string {
	if o == nil || o.ShowTime == nil {
		var ret string
		return ret
	}
	return *o.ShowTime
}

// GetShowTimeOk returns a tuple with the ShowTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetShowTimeOk() (*string, bool) {
	if o == nil || o.ShowTime == nil {
		return nil, false
	}
	return o.ShowTime, true
}

// HasShowTime returns a boolean if a field has been set.
func (o *EventItem) HasShowTime() bool {
	if o != nil && o.ShowTime != nil {
		return true
	}

	return false
}

// SetShowTime gets a reference to the given string and assigns it to the ShowTime field.
func (o *EventItem) SetShowTime(v string) {
	o.ShowTime = &v
}

// GetEtm returns the Etm field value if set, zero value otherwise.
func (o *EventItem) GetEtm() string {
	if o == nil || o.Etm == nil {
		var ret string
		return ret
	}
	return *o.Etm
}

// GetEtmOk returns a tuple with the Etm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetEtmOk() (*string, bool) {
	if o == nil || o.Etm == nil {
		return nil, false
	}
	return o.Etm, true
}

// HasEtm returns a boolean if a field has been set.
func (o *EventItem) HasEtm() bool {
	if o != nil && o.Etm != nil {
		return true
	}

	return false
}

// SetEtm gets a reference to the given string and assigns it to the Etm field.
func (o *EventItem) SetEtm(v string) {
	o.Etm = &v
}

// GetT1V returns the T1V field value if set, zero value otherwise.
func (o *EventItem) GetT1V() int64 {
	if o == nil || o.T1V == nil {
		var ret int64
		return ret
	}
	return *o.T1V
}

// GetT1VOk returns a tuple with the T1V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetT1VOk() (*int64, bool) {
	if o == nil || o.T1V == nil {
		return nil, false
	}
	return o.T1V, true
}

// HasT1V returns a boolean if a field has been set.
func (o *EventItem) HasT1V() bool {
	if o != nil && o.T1V != nil {
		return true
	}

	return false
}

// SetT1V gets a reference to the given int64 and assigns it to the T1V field.
func (o *EventItem) SetT1V(v int64) {
	o.T1V = &v
}

// GetT2V returns the T2V field value if set, zero value otherwise.
func (o *EventItem) GetT2V() int64 {
	if o == nil || o.T2V == nil {
		var ret int64
		return ret
	}
	return *o.T2V
}

// GetT2VOk returns a tuple with the T2V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetT2VOk() (*int64, bool) {
	if o == nil || o.T2V == nil {
		return nil, false
	}
	return o.T2V, true
}

// HasT2V returns a boolean if a field has been set.
func (o *EventItem) HasT2V() bool {
	if o != nil && o.T2V != nil {
		return true
	}

	return false
}

// SetT2V gets a reference to the given int64 and assigns it to the T2V field.
func (o *EventItem) SetT2V(v int64) {
	o.T2V = &v
}

// GetNeu returns the Neu field value if set, zero value otherwise.
func (o *EventItem) GetNeu() bool {
	if o == nil || o.Neu == nil {
		var ret bool
		return ret
	}
	return *o.Neu
}

// GetNeuOk returns a tuple with the Neu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetNeuOk() (*bool, bool) {
	if o == nil || o.Neu == nil {
		return nil, false
	}
	return o.Neu, true
}

// HasNeu returns a boolean if a field has been set.
func (o *EventItem) HasNeu() bool {
	if o != nil && o.Neu != nil {
		return true
	}

	return false
}

// SetNeu gets a reference to the given bool and assigns it to the Neu field.
func (o *EventItem) SetNeu(v bool) {
	o.Neu = &v
}

// GetMoc returns the Moc field value if set, zero value otherwise.
func (o *EventItem) GetMoc() int64 {
	if o == nil || o.Moc == nil {
		var ret int64
		return ret
	}
	return *o.Moc
}

// GetMocOk returns a tuple with the Moc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetMocOk() (*int64, bool) {
	if o == nil || o.Moc == nil {
		return nil, false
	}
	return o.Moc, true
}

// HasMoc returns a boolean if a field has been set.
func (o *EventItem) HasMoc() bool {
	if o != nil && o.Moc != nil {
		return true
	}

	return false
}

// SetMoc gets a reference to the given int64 and assigns it to the Moc field.
func (o *EventItem) SetMoc(v int64) {
	o.Moc = &v
}

// GetRc1 returns the Rc1 field value if set, zero value otherwise.
func (o *EventItem) GetRc1() int64 {
	if o == nil || o.Rc1 == nil {
		var ret int64
		return ret
	}
	return *o.Rc1
}

// GetRc1Ok returns a tuple with the Rc1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetRc1Ok() (*int64, bool) {
	if o == nil || o.Rc1 == nil {
		return nil, false
	}
	return o.Rc1, true
}

// HasRc1 returns a boolean if a field has been set.
func (o *EventItem) HasRc1() bool {
	if o != nil && o.Rc1 != nil {
		return true
	}

	return false
}

// SetRc1 gets a reference to the given int64 and assigns it to the Rc1 field.
func (o *EventItem) SetRc1(v int64) {
	o.Rc1 = &v
}

// GetRc2 returns the Rc2 field value if set, zero value otherwise.
func (o *EventItem) GetRc2() int64 {
	if o == nil || o.Rc2 == nil {
		var ret int64
		return ret
	}
	return *o.Rc2
}

// GetRc2Ok returns a tuple with the Rc2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetRc2Ok() (*int64, bool) {
	if o == nil || o.Rc2 == nil {
		return nil, false
	}
	return o.Rc2, true
}

// HasRc2 returns a boolean if a field has been set.
func (o *EventItem) HasRc2() bool {
	if o != nil && o.Rc2 != nil {
		return true
	}

	return false
}

// SetRc2 gets a reference to the given int64 and assigns it to the Rc2 field.
func (o *EventItem) SetRc2(v int64) {
	o.Rc2 = &v
}

// GetTsp returns the Tsp field value if set, zero value otherwise.
func (o *EventItem) GetTsp() bool {
	if o == nil || o.Tsp == nil {
		var ret bool
		return ret
	}
	return *o.Tsp
}

// GetTspOk returns a tuple with the Tsp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetTspOk() (*bool, bool) {
	if o == nil || o.Tsp == nil {
		return nil, false
	}
	return o.Tsp, true
}

// HasTsp returns a boolean if a field has been set.
func (o *EventItem) HasTsp() bool {
	if o != nil && o.Tsp != nil {
		return true
	}

	return false
}

// SetTsp gets a reference to the given bool and assigns it to the Tsp field.
func (o *EventItem) SetTsp(v bool) {
	o.Tsp = &v
}

// GetLDM returns the LDM field value if set, zero value otherwise.
func (o *EventItem) GetLDM() int64 {
	if o == nil || o.LDM == nil {
		var ret int64
		return ret
	}
	return *o.LDM
}

// GetLDMOk returns a tuple with the LDM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetLDMOk() (*int64, bool) {
	if o == nil || o.LDM == nil {
		return nil, false
	}
	return o.LDM, true
}

// HasLDM returns a boolean if a field has been set.
func (o *EventItem) HasLDM() bool {
	if o != nil && o.LDM != nil {
		return true
	}

	return false
}

// SetLDM gets a reference to the given int64 and assigns it to the LDM field.
func (o *EventItem) SetLDM(v int64) {
	o.LDM = &v
}

// GetHLS returns the HLS field value if set, zero value otherwise.
func (o *EventItem) GetHLS() int64 {
	if o == nil || o.HLS == nil {
		var ret int64
		return ret
	}
	return *o.HLS
}

// GetHLSOk returns a tuple with the HLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetHLSOk() (*int64, bool) {
	if o == nil || o.HLS == nil {
		return nil, false
	}
	return o.HLS, true
}

// HasHLS returns a boolean if a field has been set.
func (o *EventItem) HasHLS() bool {
	if o != nil && o.HLS != nil {
		return true
	}

	return false
}

// SetHLS gets a reference to the given int64 and assigns it to the HLS field.
func (o *EventItem) SetHLS(v int64) {
	o.HLS = &v
}

// GetSup returns the Sup field value if set, zero value otherwise.
func (o *EventItem) GetSup() bool {
	if o == nil || o.Sup == nil {
		var ret bool
		return ret
	}
	return *o.Sup
}

// GetSupOk returns a tuple with the Sup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetSupOk() (*bool, bool) {
	if o == nil || o.Sup == nil {
		return nil, false
	}
	return o.Sup, true
}

// HasSup returns a boolean if a field has been set.
func (o *EventItem) HasSup() bool {
	if o != nil && o.Sup != nil {
		return true
	}

	return false
}

// SetSup gets a reference to the given bool and assigns it to the Sup field.
func (o *EventItem) SetSup(v bool) {
	o.Sup = &v
}

// GetGV returns the GV field value if set, zero value otherwise.
func (o *EventItem) GetGV() bool {
	if o == nil || o.GV == nil {
		var ret bool
		return ret
	}
	return *o.GV
}

// GetGVOk returns a tuple with the GV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetGVOk() (*bool, bool) {
	if o == nil || o.GV == nil {
		return nil, false
	}
	return o.GV, true
}

// HasGV returns a boolean if a field has been set.
func (o *EventItem) HasGV() bool {
	if o != nil && o.GV != nil {
		return true
	}

	return false
}

// SetGV gets a reference to the given bool and assigns it to the GV field.
func (o *EventItem) SetGV(v bool) {
	o.GV = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *EventItem) GetSid() string {
	if o == nil || o.Sid == nil {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetSidOk() (*string, bool) {
	if o == nil || o.Sid == nil {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *EventItem) HasSid() bool {
	if o != nil && o.Sid != nil {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *EventItem) SetSid(v string) {
	o.Sid = &v
}

// GetSid2 returns the Sid2 field value if set, zero value otherwise.
func (o *EventItem) GetSid2() string {
	if o == nil || o.Sid2 == nil {
		var ret string
		return ret
	}
	return *o.Sid2
}

// GetSid2Ok returns a tuple with the Sid2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetSid2Ok() (*string, bool) {
	if o == nil || o.Sid2 == nil {
		return nil, false
	}
	return o.Sid2, true
}

// HasSid2 returns a boolean if a field has been set.
func (o *EventItem) HasSid2() bool {
	if o != nil && o.Sid2 != nil {
		return true
	}

	return false
}

// SetSid2 gets a reference to the given string and assigns it to the Sid2 field.
func (o *EventItem) SetSid2(v string) {
	o.Sid2 = &v
}

// GetSrc returns the Src field value if set, zero value otherwise.
func (o *EventItem) GetSrc() int64 {
	if o == nil || o.Src == nil {
		var ret int64
		return ret
	}
	return *o.Src
}

// GetSrcOk returns a tuple with the Src field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetSrcOk() (*int64, bool) {
	if o == nil || o.Src == nil {
		return nil, false
	}
	return o.Src, true
}

// HasSrc returns a boolean if a field has been set.
func (o *EventItem) HasSrc() bool {
	if o != nil && o.Src != nil {
		return true
	}

	return false
}

// SetSrc gets a reference to the given int64 and assigns it to the Src field.
func (o *EventItem) SetSrc(v int64) {
	o.Src = &v
}

// GetSrc2 returns the Src2 field value if set, zero value otherwise.
func (o *EventItem) GetSrc2() int64 {
	if o == nil || o.Src2 == nil {
		var ret int64
		return ret
	}
	return *o.Src2
}

// GetSrc2Ok returns a tuple with the Src2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetSrc2Ok() (*int64, bool) {
	if o == nil || o.Src2 == nil {
		return nil, false
	}
	return o.Src2, true
}

// HasSrc2 returns a boolean if a field has been set.
func (o *EventItem) HasSrc2() bool {
	if o != nil && o.Src2 != nil {
		return true
	}

	return false
}

// SetSrc2 gets a reference to the given int64 and assigns it to the Src2 field.
func (o *EventItem) SetSrc2(v int64) {
	o.Src2 = &v
}

// GetMaT returns the MaT field value if set, zero value otherwise.
func (o *EventItem) GetMaT() DateTypeEnum {
	if o == nil || o.MaT == nil {
		var ret DateTypeEnum
		return ret
	}
	return *o.MaT
}

// GetMaTOk returns a tuple with the MaT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetMaTOk() (*DateTypeEnum, bool) {
	if o == nil || o.MaT == nil {
		return nil, false
	}
	return o.MaT, true
}

// HasMaT returns a boolean if a field has been set.
func (o *EventItem) HasMaT() bool {
	if o != nil && o.MaT != nil {
		return true
	}

	return false
}

// SetMaT gets a reference to the given DateTypeEnum and assigns it to the MaT field.
func (o *EventItem) SetMaT(v DateTypeEnum) {
	o.MaT = &v
}

// GetGST returns the GST field value if set, zero value otherwise.
func (o *EventItem) GetGST() int64 {
	if o == nil || o.GST == nil {
		var ret int64
		return ret
	}
	return *o.GST
}

// GetGSTOk returns a tuple with the GST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetGSTOk() (*int64, bool) {
	if o == nil || o.GST == nil {
		return nil, false
	}
	return o.GST, true
}

// HasGST returns a boolean if a field has been set.
func (o *EventItem) HasGST() bool {
	if o != nil && o.GST != nil {
		return true
	}

	return false
}

// SetGST gets a reference to the given int64 and assigns it to the GST field.
func (o *EventItem) SetGST(v int64) {
	o.GST = &v
}

// GetCCode returns the CCode field value if set, zero value otherwise.
func (o *EventItem) GetCCode() string {
	if o == nil || o.CCode == nil {
		var ret string
		return ret
	}
	return *o.CCode
}

// GetCCodeOk returns a tuple with the CCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetCCodeOk() (*string, bool) {
	if o == nil || o.CCode == nil {
		return nil, false
	}
	return o.CCode, true
}

// HasCCode returns a boolean if a field has been set.
func (o *EventItem) HasCCode() bool {
	if o != nil && o.CCode != nil {
		return true
	}

	return false
}

// SetCCode gets a reference to the given string and assigns it to the CCode field.
func (o *EventItem) SetCCode(v string) {
	o.CCode = &v
}

// GetFtCount returns the FtCount field value if set, zero value otherwise.
func (o *EventItem) GetFtCount() int64 {
	if o == nil || o.FtCount == nil {
		var ret int64
		return ret
	}
	return *o.FtCount
}

// GetFtCountOk returns a tuple with the FtCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetFtCountOk() (*int64, bool) {
	if o == nil || o.FtCount == nil {
		return nil, false
	}
	return o.FtCount, true
}

// HasFtCount returns a boolean if a field has been set.
func (o *EventItem) HasFtCount() bool {
	if o != nil && o.FtCount != nil {
		return true
	}

	return false
}

// SetFtCount gets a reference to the given int64 and assigns it to the FtCount field.
func (o *EventItem) SetFtCount(v int64) {
	o.FtCount = &v
}

// GetHtCount returns the HtCount field value if set, zero value otherwise.
func (o *EventItem) GetHtCount() int64 {
	if o == nil || o.HtCount == nil {
		var ret int64
		return ret
	}
	return *o.HtCount
}

// GetHtCountOk returns a tuple with the HtCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetHtCountOk() (*int64, bool) {
	if o == nil || o.HtCount == nil {
		return nil, false
	}
	return o.HtCount, true
}

// HasHtCount returns a boolean if a field has been set.
func (o *EventItem) HasHtCount() bool {
	if o != nil && o.HtCount != nil {
		return true
	}

	return false
}

// SetHtCount gets a reference to the given int64 and assigns it to the HtCount field.
func (o *EventItem) SetHtCount(v int64) {
	o.HtCount = &v
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *EventItem) GetMarkets() []MarketItem {
	if o == nil || o.Markets == nil {
		var ret []MarketItem
		return ret
	}
	return *o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventItem) GetMarketsOk() (*[]MarketItem, bool) {
	if o == nil || o.Markets == nil {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *EventItem) HasMarkets() bool {
	if o != nil && o.Markets != nil {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given []MarketItem and assigns it to the Markets field.
func (o *EventItem) SetMarkets(v []MarketItem) {
	o.Markets = &v
}

func (o EventItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GameID != nil {
		toSerialize["GameID"] = o.GameID
	}
	if o.LeagueId != nil {
		toSerialize["LeagueId"] = o.LeagueId
	}
	if o.MatchId != nil {
		toSerialize["MatchId"] = o.MatchId
	}
	if o.TeamId1 != nil {
		toSerialize["TeamId1"] = o.TeamId1
	}
	if o.TeamId2 != nil {
		toSerialize["TeamId2"] = o.TeamId2
	}
	if o.IsLive != nil {
		toSerialize["IsLive"] = o.IsLive
	}
	if o.HasLive != nil {
		toSerialize["hasLive"] = o.HasLive
	}
	if o.MatchCode != nil {
		toSerialize["MatchCode"] = o.MatchCode
	}
	if o.GameTime != nil {
		toSerialize["GameTime"] = o.GameTime
	}
	if o.Ktm != nil {
		toSerialize["Ktm"] = o.Ktm
	}
	if o.ShowTime != nil {
		toSerialize["ShowTime"] = o.ShowTime
	}
	if o.Etm != nil {
		toSerialize["Etm"] = o.Etm
	}
	if o.T1V != nil {
		toSerialize["T1V"] = o.T1V
	}
	if o.T2V != nil {
		toSerialize["T2V"] = o.T2V
	}
	if o.Neu != nil {
		toSerialize["Neu"] = o.Neu
	}
	if o.Moc != nil {
		toSerialize["Moc"] = o.Moc
	}
	if o.Rc1 != nil {
		toSerialize["Rc1"] = o.Rc1
	}
	if o.Rc2 != nil {
		toSerialize["Rc2"] = o.Rc2
	}
	if o.Tsp != nil {
		toSerialize["Tsp"] = o.Tsp
	}
	if o.LDM != nil {
		toSerialize["LDM"] = o.LDM
	}
	if o.HLS != nil {
		toSerialize["HLS"] = o.HLS
	}
	if o.Sup != nil {
		toSerialize["Sup"] = o.Sup
	}
	if o.GV != nil {
		toSerialize["GV"] = o.GV
	}
	if o.Sid != nil {
		toSerialize["Sid"] = o.Sid
	}
	if o.Sid2 != nil {
		toSerialize["Sid2"] = o.Sid2
	}
	if o.Src != nil {
		toSerialize["Src"] = o.Src
	}
	if o.Src2 != nil {
		toSerialize["Src2"] = o.Src2
	}
	if o.MaT != nil {
		toSerialize["MaT"] = o.MaT
	}
	if o.GST != nil {
		toSerialize["GST"] = o.GST
	}
	if o.CCode != nil {
		toSerialize["CCode"] = o.CCode
	}
	if o.FtCount != nil {
		toSerialize["FtCount"] = o.FtCount
	}
	if o.HtCount != nil {
		toSerialize["HtCount"] = o.HtCount
	}
	if o.Markets != nil {
		toSerialize["Markets"] = o.Markets
	}
	return json.Marshal(toSerialize)
}

type NullableEventItem struct {
	value *EventItem
	isSet bool
}

func (v NullableEventItem) Get() *EventItem {
	return v.value
}

func (v *NullableEventItem) Set(val *EventItem) {
	v.value = val
	v.isSet = true
}

func (v NullableEventItem) IsSet() bool {
	return v.isSet
}

func (v *NullableEventItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventItem(val *EventItem) *NullableEventItem {
	return &NullableEventItem{value: val, isSet: true}
}

func (v NullableEventItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

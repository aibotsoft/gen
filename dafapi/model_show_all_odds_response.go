/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
	"time"
)

// ShowAllOddsResponse struct for ShowAllOddsResponse
type ShowAllOddsResponse struct {
	ErrorCode int64 `json:"ErrorCode"`
	ErrorMsg string `json:"ErrorMsg"`
	Syt *time.Time `json:"Syt,omitempty"`
	Data *ShowAllOddsResponseData `json:"Data,omitempty"`
}

// NewShowAllOddsResponse instantiates a new ShowAllOddsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowAllOddsResponse(errorCode int64, errorMsg string, ) *ShowAllOddsResponse {
	this := ShowAllOddsResponse{}
	this.ErrorCode = errorCode
	this.ErrorMsg = errorMsg
	return &this
}

// NewShowAllOddsResponseWithDefaults instantiates a new ShowAllOddsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowAllOddsResponseWithDefaults() *ShowAllOddsResponse {
	this := ShowAllOddsResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *ShowAllOddsResponse) GetErrorCode() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *ShowAllOddsResponse) GetErrorCodeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *ShowAllOddsResponse) SetErrorCode(v int64) {
	o.ErrorCode = v
}

// GetErrorMsg returns the ErrorMsg field value
func (o *ShowAllOddsResponse) GetErrorMsg() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ErrorMsg
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value
// and a boolean to check if the value has been set.
func (o *ShowAllOddsResponse) GetErrorMsgOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ErrorMsg, true
}

// SetErrorMsg sets field value
func (o *ShowAllOddsResponse) SetErrorMsg(v string) {
	o.ErrorMsg = v
}

// GetSyt returns the Syt field value if set, zero value otherwise.
func (o *ShowAllOddsResponse) GetSyt() time.Time {
	if o == nil || o.Syt == nil {
		var ret time.Time
		return ret
	}
	return *o.Syt
}

// GetSytOk returns a tuple with the Syt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowAllOddsResponse) GetSytOk() (*time.Time, bool) {
	if o == nil || o.Syt == nil {
		return nil, false
	}
	return o.Syt, true
}

// HasSyt returns a boolean if a field has been set.
func (o *ShowAllOddsResponse) HasSyt() bool {
	if o != nil && o.Syt != nil {
		return true
	}

	return false
}

// SetSyt gets a reference to the given time.Time and assigns it to the Syt field.
func (o *ShowAllOddsResponse) SetSyt(v time.Time) {
	o.Syt = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ShowAllOddsResponse) GetData() ShowAllOddsResponseData {
	if o == nil || o.Data == nil {
		var ret ShowAllOddsResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowAllOddsResponse) GetDataOk() (*ShowAllOddsResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ShowAllOddsResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given ShowAllOddsResponseData and assigns it to the Data field.
func (o *ShowAllOddsResponse) SetData(v ShowAllOddsResponseData) {
	o.Data = &v
}

func (o ShowAllOddsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["ErrorMsg"] = o.ErrorMsg
	}
	if o.Syt != nil {
		toSerialize["Syt"] = o.Syt
	}
	if o.Data != nil {
		toSerialize["Data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableShowAllOddsResponse struct {
	value *ShowAllOddsResponse
	isSet bool
}

func (v NullableShowAllOddsResponse) Get() *ShowAllOddsResponse {
	return v.value
}

func (v *NullableShowAllOddsResponse) Set(val *ShowAllOddsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableShowAllOddsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableShowAllOddsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowAllOddsResponse(val *ShowAllOddsResponse) *NullableShowAllOddsResponse {
	return &NullableShowAllOddsResponse{value: val, isSet: true}
}

func (v NullableShowAllOddsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowAllOddsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

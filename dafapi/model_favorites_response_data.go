/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// FavoritesResponseData struct for FavoritesResponseData
type FavoritesResponseData struct {
	Ldata *[]float32 `json:"Ldata,omitempty"`
	Mdata *[]float32 `json:"Mdata,omitempty"`
}

// NewFavoritesResponseData instantiates a new FavoritesResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoritesResponseData() *FavoritesResponseData {
	this := FavoritesResponseData{}
	return &this
}

// NewFavoritesResponseDataWithDefaults instantiates a new FavoritesResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoritesResponseDataWithDefaults() *FavoritesResponseData {
	this := FavoritesResponseData{}
	return &this
}

// GetLdata returns the Ldata field value if set, zero value otherwise.
func (o *FavoritesResponseData) GetLdata() []float32 {
	if o == nil || o.Ldata == nil {
		var ret []float32
		return ret
	}
	return *o.Ldata
}

// GetLdataOk returns a tuple with the Ldata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoritesResponseData) GetLdataOk() (*[]float32, bool) {
	if o == nil || o.Ldata == nil {
		return nil, false
	}
	return o.Ldata, true
}

// HasLdata returns a boolean if a field has been set.
func (o *FavoritesResponseData) HasLdata() bool {
	if o != nil && o.Ldata != nil {
		return true
	}

	return false
}

// SetLdata gets a reference to the given []float32 and assigns it to the Ldata field.
func (o *FavoritesResponseData) SetLdata(v []float32) {
	o.Ldata = &v
}

// GetMdata returns the Mdata field value if set, zero value otherwise.
func (o *FavoritesResponseData) GetMdata() []float32 {
	if o == nil || o.Mdata == nil {
		var ret []float32
		return ret
	}
	return *o.Mdata
}

// GetMdataOk returns a tuple with the Mdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoritesResponseData) GetMdataOk() (*[]float32, bool) {
	if o == nil || o.Mdata == nil {
		return nil, false
	}
	return o.Mdata, true
}

// HasMdata returns a boolean if a field has been set.
func (o *FavoritesResponseData) HasMdata() bool {
	if o != nil && o.Mdata != nil {
		return true
	}

	return false
}

// SetMdata gets a reference to the given []float32 and assigns it to the Mdata field.
func (o *FavoritesResponseData) SetMdata(v []float32) {
	o.Mdata = &v
}

func (o FavoritesResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ldata != nil {
		toSerialize["Ldata"] = o.Ldata
	}
	if o.Mdata != nil {
		toSerialize["Mdata"] = o.Mdata
	}
	return json.Marshal(toSerialize)
}

type NullableFavoritesResponseData struct {
	value *FavoritesResponseData
	isSet bool
}

func (v NullableFavoritesResponseData) Get() *FavoritesResponseData {
	return v.value
}

func (v *NullableFavoritesResponseData) Set(val *FavoritesResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoritesResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoritesResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoritesResponseData(val *FavoritesResponseData) *NullableFavoritesResponseData {
	return &NullableFavoritesResponseData{value: val, isSet: true}
}

func (v NullableFavoritesResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoritesResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// SetOddsTypeResponse struct for SetOddsTypeResponse
type SetOddsTypeResponse struct {
	ErrorCode int64 `json:"ErrorCode"`
	Data SetOddsTypeResponseData `json:"Data"`
}

// NewSetOddsTypeResponse instantiates a new SetOddsTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetOddsTypeResponse(errorCode int64, data SetOddsTypeResponseData, ) *SetOddsTypeResponse {
	this := SetOddsTypeResponse{}
	this.ErrorCode = errorCode
	this.Data = data
	return &this
}

// NewSetOddsTypeResponseWithDefaults instantiates a new SetOddsTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetOddsTypeResponseWithDefaults() *SetOddsTypeResponse {
	this := SetOddsTypeResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *SetOddsTypeResponse) GetErrorCode() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *SetOddsTypeResponse) GetErrorCodeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *SetOddsTypeResponse) SetErrorCode(v int64) {
	o.ErrorCode = v
}

// GetData returns the Data field value
func (o *SetOddsTypeResponse) GetData() SetOddsTypeResponseData {
	if o == nil  {
		var ret SetOddsTypeResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SetOddsTypeResponse) GetDataOk() (*SetOddsTypeResponseData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SetOddsTypeResponse) SetData(v SetOddsTypeResponseData) {
	o.Data = v
}

func (o SetOddsTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["Data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSetOddsTypeResponse struct {
	value *SetOddsTypeResponse
	isSet bool
}

func (v NullableSetOddsTypeResponse) Get() *SetOddsTypeResponse {
	return v.value
}

func (v *NullableSetOddsTypeResponse) Set(val *SetOddsTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetOddsTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetOddsTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetOddsTypeResponse(val *SetOddsTypeResponse) *NullableSetOddsTypeResponse {
	return &NullableSetOddsTypeResponse{value: val, isSet: true}
}

func (v NullableSetOddsTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetOddsTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

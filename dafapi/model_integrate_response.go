/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// IntegrateResponse struct for IntegrateResponse
type IntegrateResponse struct {
	Redirect *string `json:"redirect,omitempty"`
}

// NewIntegrateResponse instantiates a new IntegrateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrateResponse() *IntegrateResponse {
	this := IntegrateResponse{}
	return &this
}

// NewIntegrateResponseWithDefaults instantiates a new IntegrateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrateResponseWithDefaults() *IntegrateResponse {
	this := IntegrateResponse{}
	return &this
}

// GetRedirect returns the Redirect field value if set, zero value otherwise.
func (o *IntegrateResponse) GetRedirect() string {
	if o == nil || o.Redirect == nil {
		var ret string
		return ret
	}
	return *o.Redirect
}

// GetRedirectOk returns a tuple with the Redirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrateResponse) GetRedirectOk() (*string, bool) {
	if o == nil || o.Redirect == nil {
		return nil, false
	}
	return o.Redirect, true
}

// HasRedirect returns a boolean if a field has been set.
func (o *IntegrateResponse) HasRedirect() bool {
	if o != nil && o.Redirect != nil {
		return true
	}

	return false
}

// SetRedirect gets a reference to the given string and assigns it to the Redirect field.
func (o *IntegrateResponse) SetRedirect(v string) {
	o.Redirect = &v
}

func (o IntegrateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Redirect != nil {
		toSerialize["redirect"] = o.Redirect
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrateResponse struct {
	value *IntegrateResponse
	isSet bool
}

func (v NullableIntegrateResponse) Get() *IntegrateResponse {
	return v.value
}

func (v *NullableIntegrateResponse) Set(val *IntegrateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrateResponse(val *IntegrateResponse) *NullableIntegrateResponse {
	return &NullableIntegrateResponse{value: val, isSet: true}
}

func (v NullableIntegrateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// PlaceBetItem struct for PlaceBetItem
type PlaceBetItem struct {
	Key *string `json:"Key,omitempty"`
	DisplayOdds *string `json:"DisplayOdds,omitempty"`
	DisplayHDP *string `json:"DisplayHDP,omitempty"`
	Hdp1 *float32 `json:"Hdp1,omitempty"`
	Hdp2 *float32 `json:"Hdp2,omitempty"`
	BetID *string `json:"BetID,omitempty"`
	TransIdCash *string `json:"TransId_Cash,omitempty"`
	TransIdBonus *string `json:"TransId_Bonus,omitempty"`
	Code *int64 `json:"Code,omitempty"`
	Message *string `json:"Message,omitempty"`
	IsOddsChange *bool `json:"isOddsChange,omitempty"`
	Stake *string `json:"Stake,omitempty"`
	StakeCash *string `json:"Stake_Cash,omitempty"`
	LiveHomeScore *int64 `json:"LiveHomeScore,omitempty"`
	LiveAwayScore *int64 `json:"LiveAwayScore,omitempty"`
	TicketStatus *int64 `json:"TicketStatus,omitempty"`
	IsInPlay *bool `json:"IsInPlay,omitempty"`
	TotalPerBet *int64 `json:"TotalPerBet,omitempty"`
	FinalBalance *string `json:"FinalBalance,omitempty"`
	CheckWaitingTicket *bool `json:"CheckWaitingTicket,omitempty"`
	ErrorCode *int64 `json:"ErrorCode,omitempty"`
	Common *CommonItem `json:"Common,omitempty"`
}

// NewPlaceBetItem instantiates a new PlaceBetItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceBetItem() *PlaceBetItem {
	this := PlaceBetItem{}
	return &this
}

// NewPlaceBetItemWithDefaults instantiates a new PlaceBetItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceBetItemWithDefaults() *PlaceBetItem {
	this := PlaceBetItem{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *PlaceBetItem) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *PlaceBetItem) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *PlaceBetItem) SetKey(v string) {
	o.Key = &v
}

// GetDisplayOdds returns the DisplayOdds field value if set, zero value otherwise.
func (o *PlaceBetItem) GetDisplayOdds() string {
	if o == nil || o.DisplayOdds == nil {
		var ret string
		return ret
	}
	return *o.DisplayOdds
}

// GetDisplayOddsOk returns a tuple with the DisplayOdds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetDisplayOddsOk() (*string, bool) {
	if o == nil || o.DisplayOdds == nil {
		return nil, false
	}
	return o.DisplayOdds, true
}

// HasDisplayOdds returns a boolean if a field has been set.
func (o *PlaceBetItem) HasDisplayOdds() bool {
	if o != nil && o.DisplayOdds != nil {
		return true
	}

	return false
}

// SetDisplayOdds gets a reference to the given string and assigns it to the DisplayOdds field.
func (o *PlaceBetItem) SetDisplayOdds(v string) {
	o.DisplayOdds = &v
}

// GetDisplayHDP returns the DisplayHDP field value if set, zero value otherwise.
func (o *PlaceBetItem) GetDisplayHDP() string {
	if o == nil || o.DisplayHDP == nil {
		var ret string
		return ret
	}
	return *o.DisplayHDP
}

// GetDisplayHDPOk returns a tuple with the DisplayHDP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetDisplayHDPOk() (*string, bool) {
	if o == nil || o.DisplayHDP == nil {
		return nil, false
	}
	return o.DisplayHDP, true
}

// HasDisplayHDP returns a boolean if a field has been set.
func (o *PlaceBetItem) HasDisplayHDP() bool {
	if o != nil && o.DisplayHDP != nil {
		return true
	}

	return false
}

// SetDisplayHDP gets a reference to the given string and assigns it to the DisplayHDP field.
func (o *PlaceBetItem) SetDisplayHDP(v string) {
	o.DisplayHDP = &v
}

// GetHdp1 returns the Hdp1 field value if set, zero value otherwise.
func (o *PlaceBetItem) GetHdp1() float32 {
	if o == nil || o.Hdp1 == nil {
		var ret float32
		return ret
	}
	return *o.Hdp1
}

// GetHdp1Ok returns a tuple with the Hdp1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetHdp1Ok() (*float32, bool) {
	if o == nil || o.Hdp1 == nil {
		return nil, false
	}
	return o.Hdp1, true
}

// HasHdp1 returns a boolean if a field has been set.
func (o *PlaceBetItem) HasHdp1() bool {
	if o != nil && o.Hdp1 != nil {
		return true
	}

	return false
}

// SetHdp1 gets a reference to the given float32 and assigns it to the Hdp1 field.
func (o *PlaceBetItem) SetHdp1(v float32) {
	o.Hdp1 = &v
}

// GetHdp2 returns the Hdp2 field value if set, zero value otherwise.
func (o *PlaceBetItem) GetHdp2() float32 {
	if o == nil || o.Hdp2 == nil {
		var ret float32
		return ret
	}
	return *o.Hdp2
}

// GetHdp2Ok returns a tuple with the Hdp2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetHdp2Ok() (*float32, bool) {
	if o == nil || o.Hdp2 == nil {
		return nil, false
	}
	return o.Hdp2, true
}

// HasHdp2 returns a boolean if a field has been set.
func (o *PlaceBetItem) HasHdp2() bool {
	if o != nil && o.Hdp2 != nil {
		return true
	}

	return false
}

// SetHdp2 gets a reference to the given float32 and assigns it to the Hdp2 field.
func (o *PlaceBetItem) SetHdp2(v float32) {
	o.Hdp2 = &v
}

// GetBetID returns the BetID field value if set, zero value otherwise.
func (o *PlaceBetItem) GetBetID() string {
	if o == nil || o.BetID == nil {
		var ret string
		return ret
	}
	return *o.BetID
}

// GetBetIDOk returns a tuple with the BetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetBetIDOk() (*string, bool) {
	if o == nil || o.BetID == nil {
		return nil, false
	}
	return o.BetID, true
}

// HasBetID returns a boolean if a field has been set.
func (o *PlaceBetItem) HasBetID() bool {
	if o != nil && o.BetID != nil {
		return true
	}

	return false
}

// SetBetID gets a reference to the given string and assigns it to the BetID field.
func (o *PlaceBetItem) SetBetID(v string) {
	o.BetID = &v
}

// GetTransIdCash returns the TransIdCash field value if set, zero value otherwise.
func (o *PlaceBetItem) GetTransIdCash() string {
	if o == nil || o.TransIdCash == nil {
		var ret string
		return ret
	}
	return *o.TransIdCash
}

// GetTransIdCashOk returns a tuple with the TransIdCash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetTransIdCashOk() (*string, bool) {
	if o == nil || o.TransIdCash == nil {
		return nil, false
	}
	return o.TransIdCash, true
}

// HasTransIdCash returns a boolean if a field has been set.
func (o *PlaceBetItem) HasTransIdCash() bool {
	if o != nil && o.TransIdCash != nil {
		return true
	}

	return false
}

// SetTransIdCash gets a reference to the given string and assigns it to the TransIdCash field.
func (o *PlaceBetItem) SetTransIdCash(v string) {
	o.TransIdCash = &v
}

// GetTransIdBonus returns the TransIdBonus field value if set, zero value otherwise.
func (o *PlaceBetItem) GetTransIdBonus() string {
	if o == nil || o.TransIdBonus == nil {
		var ret string
		return ret
	}
	return *o.TransIdBonus
}

// GetTransIdBonusOk returns a tuple with the TransIdBonus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetTransIdBonusOk() (*string, bool) {
	if o == nil || o.TransIdBonus == nil {
		return nil, false
	}
	return o.TransIdBonus, true
}

// HasTransIdBonus returns a boolean if a field has been set.
func (o *PlaceBetItem) HasTransIdBonus() bool {
	if o != nil && o.TransIdBonus != nil {
		return true
	}

	return false
}

// SetTransIdBonus gets a reference to the given string and assigns it to the TransIdBonus field.
func (o *PlaceBetItem) SetTransIdBonus(v string) {
	o.TransIdBonus = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PlaceBetItem) GetCode() int64 {
	if o == nil || o.Code == nil {
		var ret int64
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetCodeOk() (*int64, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PlaceBetItem) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int64 and assigns it to the Code field.
func (o *PlaceBetItem) SetCode(v int64) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PlaceBetItem) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PlaceBetItem) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PlaceBetItem) SetMessage(v string) {
	o.Message = &v
}

// GetIsOddsChange returns the IsOddsChange field value if set, zero value otherwise.
func (o *PlaceBetItem) GetIsOddsChange() bool {
	if o == nil || o.IsOddsChange == nil {
		var ret bool
		return ret
	}
	return *o.IsOddsChange
}

// GetIsOddsChangeOk returns a tuple with the IsOddsChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetIsOddsChangeOk() (*bool, bool) {
	if o == nil || o.IsOddsChange == nil {
		return nil, false
	}
	return o.IsOddsChange, true
}

// HasIsOddsChange returns a boolean if a field has been set.
func (o *PlaceBetItem) HasIsOddsChange() bool {
	if o != nil && o.IsOddsChange != nil {
		return true
	}

	return false
}

// SetIsOddsChange gets a reference to the given bool and assigns it to the IsOddsChange field.
func (o *PlaceBetItem) SetIsOddsChange(v bool) {
	o.IsOddsChange = &v
}

// GetStake returns the Stake field value if set, zero value otherwise.
func (o *PlaceBetItem) GetStake() string {
	if o == nil || o.Stake == nil {
		var ret string
		return ret
	}
	return *o.Stake
}

// GetStakeOk returns a tuple with the Stake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetStakeOk() (*string, bool) {
	if o == nil || o.Stake == nil {
		return nil, false
	}
	return o.Stake, true
}

// HasStake returns a boolean if a field has been set.
func (o *PlaceBetItem) HasStake() bool {
	if o != nil && o.Stake != nil {
		return true
	}

	return false
}

// SetStake gets a reference to the given string and assigns it to the Stake field.
func (o *PlaceBetItem) SetStake(v string) {
	o.Stake = &v
}

// GetStakeCash returns the StakeCash field value if set, zero value otherwise.
func (o *PlaceBetItem) GetStakeCash() string {
	if o == nil || o.StakeCash == nil {
		var ret string
		return ret
	}
	return *o.StakeCash
}

// GetStakeCashOk returns a tuple with the StakeCash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetStakeCashOk() (*string, bool) {
	if o == nil || o.StakeCash == nil {
		return nil, false
	}
	return o.StakeCash, true
}

// HasStakeCash returns a boolean if a field has been set.
func (o *PlaceBetItem) HasStakeCash() bool {
	if o != nil && o.StakeCash != nil {
		return true
	}

	return false
}

// SetStakeCash gets a reference to the given string and assigns it to the StakeCash field.
func (o *PlaceBetItem) SetStakeCash(v string) {
	o.StakeCash = &v
}

// GetLiveHomeScore returns the LiveHomeScore field value if set, zero value otherwise.
func (o *PlaceBetItem) GetLiveHomeScore() int64 {
	if o == nil || o.LiveHomeScore == nil {
		var ret int64
		return ret
	}
	return *o.LiveHomeScore
}

// GetLiveHomeScoreOk returns a tuple with the LiveHomeScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetLiveHomeScoreOk() (*int64, bool) {
	if o == nil || o.LiveHomeScore == nil {
		return nil, false
	}
	return o.LiveHomeScore, true
}

// HasLiveHomeScore returns a boolean if a field has been set.
func (o *PlaceBetItem) HasLiveHomeScore() bool {
	if o != nil && o.LiveHomeScore != nil {
		return true
	}

	return false
}

// SetLiveHomeScore gets a reference to the given int64 and assigns it to the LiveHomeScore field.
func (o *PlaceBetItem) SetLiveHomeScore(v int64) {
	o.LiveHomeScore = &v
}

// GetLiveAwayScore returns the LiveAwayScore field value if set, zero value otherwise.
func (o *PlaceBetItem) GetLiveAwayScore() int64 {
	if o == nil || o.LiveAwayScore == nil {
		var ret int64
		return ret
	}
	return *o.LiveAwayScore
}

// GetLiveAwayScoreOk returns a tuple with the LiveAwayScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetLiveAwayScoreOk() (*int64, bool) {
	if o == nil || o.LiveAwayScore == nil {
		return nil, false
	}
	return o.LiveAwayScore, true
}

// HasLiveAwayScore returns a boolean if a field has been set.
func (o *PlaceBetItem) HasLiveAwayScore() bool {
	if o != nil && o.LiveAwayScore != nil {
		return true
	}

	return false
}

// SetLiveAwayScore gets a reference to the given int64 and assigns it to the LiveAwayScore field.
func (o *PlaceBetItem) SetLiveAwayScore(v int64) {
	o.LiveAwayScore = &v
}

// GetTicketStatus returns the TicketStatus field value if set, zero value otherwise.
func (o *PlaceBetItem) GetTicketStatus() int64 {
	if o == nil || o.TicketStatus == nil {
		var ret int64
		return ret
	}
	return *o.TicketStatus
}

// GetTicketStatusOk returns a tuple with the TicketStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetTicketStatusOk() (*int64, bool) {
	if o == nil || o.TicketStatus == nil {
		return nil, false
	}
	return o.TicketStatus, true
}

// HasTicketStatus returns a boolean if a field has been set.
func (o *PlaceBetItem) HasTicketStatus() bool {
	if o != nil && o.TicketStatus != nil {
		return true
	}

	return false
}

// SetTicketStatus gets a reference to the given int64 and assigns it to the TicketStatus field.
func (o *PlaceBetItem) SetTicketStatus(v int64) {
	o.TicketStatus = &v
}

// GetIsInPlay returns the IsInPlay field value if set, zero value otherwise.
func (o *PlaceBetItem) GetIsInPlay() bool {
	if o == nil || o.IsInPlay == nil {
		var ret bool
		return ret
	}
	return *o.IsInPlay
}

// GetIsInPlayOk returns a tuple with the IsInPlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetIsInPlayOk() (*bool, bool) {
	if o == nil || o.IsInPlay == nil {
		return nil, false
	}
	return o.IsInPlay, true
}

// HasIsInPlay returns a boolean if a field has been set.
func (o *PlaceBetItem) HasIsInPlay() bool {
	if o != nil && o.IsInPlay != nil {
		return true
	}

	return false
}

// SetIsInPlay gets a reference to the given bool and assigns it to the IsInPlay field.
func (o *PlaceBetItem) SetIsInPlay(v bool) {
	o.IsInPlay = &v
}

// GetTotalPerBet returns the TotalPerBet field value if set, zero value otherwise.
func (o *PlaceBetItem) GetTotalPerBet() int64 {
	if o == nil || o.TotalPerBet == nil {
		var ret int64
		return ret
	}
	return *o.TotalPerBet
}

// GetTotalPerBetOk returns a tuple with the TotalPerBet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetTotalPerBetOk() (*int64, bool) {
	if o == nil || o.TotalPerBet == nil {
		return nil, false
	}
	return o.TotalPerBet, true
}

// HasTotalPerBet returns a boolean if a field has been set.
func (o *PlaceBetItem) HasTotalPerBet() bool {
	if o != nil && o.TotalPerBet != nil {
		return true
	}

	return false
}

// SetTotalPerBet gets a reference to the given int64 and assigns it to the TotalPerBet field.
func (o *PlaceBetItem) SetTotalPerBet(v int64) {
	o.TotalPerBet = &v
}

// GetFinalBalance returns the FinalBalance field value if set, zero value otherwise.
func (o *PlaceBetItem) GetFinalBalance() string {
	if o == nil || o.FinalBalance == nil {
		var ret string
		return ret
	}
	return *o.FinalBalance
}

// GetFinalBalanceOk returns a tuple with the FinalBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetFinalBalanceOk() (*string, bool) {
	if o == nil || o.FinalBalance == nil {
		return nil, false
	}
	return o.FinalBalance, true
}

// HasFinalBalance returns a boolean if a field has been set.
func (o *PlaceBetItem) HasFinalBalance() bool {
	if o != nil && o.FinalBalance != nil {
		return true
	}

	return false
}

// SetFinalBalance gets a reference to the given string and assigns it to the FinalBalance field.
func (o *PlaceBetItem) SetFinalBalance(v string) {
	o.FinalBalance = &v
}

// GetCheckWaitingTicket returns the CheckWaitingTicket field value if set, zero value otherwise.
func (o *PlaceBetItem) GetCheckWaitingTicket() bool {
	if o == nil || o.CheckWaitingTicket == nil {
		var ret bool
		return ret
	}
	return *o.CheckWaitingTicket
}

// GetCheckWaitingTicketOk returns a tuple with the CheckWaitingTicket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetCheckWaitingTicketOk() (*bool, bool) {
	if o == nil || o.CheckWaitingTicket == nil {
		return nil, false
	}
	return o.CheckWaitingTicket, true
}

// HasCheckWaitingTicket returns a boolean if a field has been set.
func (o *PlaceBetItem) HasCheckWaitingTicket() bool {
	if o != nil && o.CheckWaitingTicket != nil {
		return true
	}

	return false
}

// SetCheckWaitingTicket gets a reference to the given bool and assigns it to the CheckWaitingTicket field.
func (o *PlaceBetItem) SetCheckWaitingTicket(v bool) {
	o.CheckWaitingTicket = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *PlaceBetItem) GetErrorCode() int64 {
	if o == nil || o.ErrorCode == nil {
		var ret int64
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetErrorCodeOk() (*int64, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *PlaceBetItem) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int64 and assigns it to the ErrorCode field.
func (o *PlaceBetItem) SetErrorCode(v int64) {
	o.ErrorCode = &v
}

// GetCommon returns the Common field value if set, zero value otherwise.
func (o *PlaceBetItem) GetCommon() CommonItem {
	if o == nil || o.Common == nil {
		var ret CommonItem
		return ret
	}
	return *o.Common
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceBetItem) GetCommonOk() (*CommonItem, bool) {
	if o == nil || o.Common == nil {
		return nil, false
	}
	return o.Common, true
}

// HasCommon returns a boolean if a field has been set.
func (o *PlaceBetItem) HasCommon() bool {
	if o != nil && o.Common != nil {
		return true
	}

	return false
}

// SetCommon gets a reference to the given CommonItem and assigns it to the Common field.
func (o *PlaceBetItem) SetCommon(v CommonItem) {
	o.Common = &v
}

func (o PlaceBetItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["Key"] = o.Key
	}
	if o.DisplayOdds != nil {
		toSerialize["DisplayOdds"] = o.DisplayOdds
	}
	if o.DisplayHDP != nil {
		toSerialize["DisplayHDP"] = o.DisplayHDP
	}
	if o.Hdp1 != nil {
		toSerialize["Hdp1"] = o.Hdp1
	}
	if o.Hdp2 != nil {
		toSerialize["Hdp2"] = o.Hdp2
	}
	if o.BetID != nil {
		toSerialize["BetID"] = o.BetID
	}
	if o.TransIdCash != nil {
		toSerialize["TransId_Cash"] = o.TransIdCash
	}
	if o.TransIdBonus != nil {
		toSerialize["TransId_Bonus"] = o.TransIdBonus
	}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["Message"] = o.Message
	}
	if o.IsOddsChange != nil {
		toSerialize["isOddsChange"] = o.IsOddsChange
	}
	if o.Stake != nil {
		toSerialize["Stake"] = o.Stake
	}
	if o.StakeCash != nil {
		toSerialize["Stake_Cash"] = o.StakeCash
	}
	if o.LiveHomeScore != nil {
		toSerialize["LiveHomeScore"] = o.LiveHomeScore
	}
	if o.LiveAwayScore != nil {
		toSerialize["LiveAwayScore"] = o.LiveAwayScore
	}
	if o.TicketStatus != nil {
		toSerialize["TicketStatus"] = o.TicketStatus
	}
	if o.IsInPlay != nil {
		toSerialize["IsInPlay"] = o.IsInPlay
	}
	if o.TotalPerBet != nil {
		toSerialize["TotalPerBet"] = o.TotalPerBet
	}
	if o.FinalBalance != nil {
		toSerialize["FinalBalance"] = o.FinalBalance
	}
	if o.CheckWaitingTicket != nil {
		toSerialize["CheckWaitingTicket"] = o.CheckWaitingTicket
	}
	if o.ErrorCode != nil {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if o.Common != nil {
		toSerialize["Common"] = o.Common
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceBetItem struct {
	value *PlaceBetItem
	isSet bool
}

func (v NullablePlaceBetItem) Get() *PlaceBetItem {
	return v.value
}

func (v *NullablePlaceBetItem) Set(val *PlaceBetItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceBetItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceBetItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceBetItem(val *PlaceBetItem) *NullablePlaceBetItem {
	return &NullablePlaceBetItem{value: val, isSet: true}
}

func (v NullablePlaceBetItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceBetItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// MarketItem struct for MarketItem
type MarketItem struct {
	MarketId *int64 `json:"MarketId,omitempty"`
	MatchId *int64 `json:"MatchId,omitempty"`
	BetTypeId *int64 `json:"BetTypeId,omitempty"`
	Line *float64 `json:"Line,omitempty"`
	Cat *int64 `json:"Cat,omitempty"`
	Pty *int64 `json:"Pty,omitempty"`
	Pim *bool `json:"Pim,omitempty"`
	Pfm *int64 `json:"Pfm,omitempty"`
	Paj *int64 `json:"Paj,omitempty"`
	EXSP *float32 `json:"EXSP,omitempty"`
	LEXSP *float32 `json:"LEXSP,omitempty"`
	Sort *int64 `json:"sort,omitempty"`
	IsCP *bool `json:"IsCP,omitempty"`
	Selections *map[string]SelectionItem `json:"Selections,omitempty"`
}

// NewMarketItem instantiates a new MarketItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketItem() *MarketItem {
	this := MarketItem{}
	return &this
}

// NewMarketItemWithDefaults instantiates a new MarketItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketItemWithDefaults() *MarketItem {
	this := MarketItem{}
	return &this
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *MarketItem) GetMarketId() int64 {
	if o == nil || o.MarketId == nil {
		var ret int64
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetMarketIdOk() (*int64, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *MarketItem) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given int64 and assigns it to the MarketId field.
func (o *MarketItem) SetMarketId(v int64) {
	o.MarketId = &v
}

// GetMatchId returns the MatchId field value if set, zero value otherwise.
func (o *MarketItem) GetMatchId() int64 {
	if o == nil || o.MatchId == nil {
		var ret int64
		return ret
	}
	return *o.MatchId
}

// GetMatchIdOk returns a tuple with the MatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetMatchIdOk() (*int64, bool) {
	if o == nil || o.MatchId == nil {
		return nil, false
	}
	return o.MatchId, true
}

// HasMatchId returns a boolean if a field has been set.
func (o *MarketItem) HasMatchId() bool {
	if o != nil && o.MatchId != nil {
		return true
	}

	return false
}

// SetMatchId gets a reference to the given int64 and assigns it to the MatchId field.
func (o *MarketItem) SetMatchId(v int64) {
	o.MatchId = &v
}

// GetBetTypeId returns the BetTypeId field value if set, zero value otherwise.
func (o *MarketItem) GetBetTypeId() int64 {
	if o == nil || o.BetTypeId == nil {
		var ret int64
		return ret
	}
	return *o.BetTypeId
}

// GetBetTypeIdOk returns a tuple with the BetTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetBetTypeIdOk() (*int64, bool) {
	if o == nil || o.BetTypeId == nil {
		return nil, false
	}
	return o.BetTypeId, true
}

// HasBetTypeId returns a boolean if a field has been set.
func (o *MarketItem) HasBetTypeId() bool {
	if o != nil && o.BetTypeId != nil {
		return true
	}

	return false
}

// SetBetTypeId gets a reference to the given int64 and assigns it to the BetTypeId field.
func (o *MarketItem) SetBetTypeId(v int64) {
	o.BetTypeId = &v
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *MarketItem) GetLine() float64 {
	if o == nil || o.Line == nil {
		var ret float64
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetLineOk() (*float64, bool) {
	if o == nil || o.Line == nil {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *MarketItem) HasLine() bool {
	if o != nil && o.Line != nil {
		return true
	}

	return false
}

// SetLine gets a reference to the given float64 and assigns it to the Line field.
func (o *MarketItem) SetLine(v float64) {
	o.Line = &v
}

// GetCat returns the Cat field value if set, zero value otherwise.
func (o *MarketItem) GetCat() int64 {
	if o == nil || o.Cat == nil {
		var ret int64
		return ret
	}
	return *o.Cat
}

// GetCatOk returns a tuple with the Cat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetCatOk() (*int64, bool) {
	if o == nil || o.Cat == nil {
		return nil, false
	}
	return o.Cat, true
}

// HasCat returns a boolean if a field has been set.
func (o *MarketItem) HasCat() bool {
	if o != nil && o.Cat != nil {
		return true
	}

	return false
}

// SetCat gets a reference to the given int64 and assigns it to the Cat field.
func (o *MarketItem) SetCat(v int64) {
	o.Cat = &v
}

// GetPty returns the Pty field value if set, zero value otherwise.
func (o *MarketItem) GetPty() int64 {
	if o == nil || o.Pty == nil {
		var ret int64
		return ret
	}
	return *o.Pty
}

// GetPtyOk returns a tuple with the Pty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetPtyOk() (*int64, bool) {
	if o == nil || o.Pty == nil {
		return nil, false
	}
	return o.Pty, true
}

// HasPty returns a boolean if a field has been set.
func (o *MarketItem) HasPty() bool {
	if o != nil && o.Pty != nil {
		return true
	}

	return false
}

// SetPty gets a reference to the given int64 and assigns it to the Pty field.
func (o *MarketItem) SetPty(v int64) {
	o.Pty = &v
}

// GetPim returns the Pim field value if set, zero value otherwise.
func (o *MarketItem) GetPim() bool {
	if o == nil || o.Pim == nil {
		var ret bool
		return ret
	}
	return *o.Pim
}

// GetPimOk returns a tuple with the Pim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetPimOk() (*bool, bool) {
	if o == nil || o.Pim == nil {
		return nil, false
	}
	return o.Pim, true
}

// HasPim returns a boolean if a field has been set.
func (o *MarketItem) HasPim() bool {
	if o != nil && o.Pim != nil {
		return true
	}

	return false
}

// SetPim gets a reference to the given bool and assigns it to the Pim field.
func (o *MarketItem) SetPim(v bool) {
	o.Pim = &v
}

// GetPfm returns the Pfm field value if set, zero value otherwise.
func (o *MarketItem) GetPfm() int64 {
	if o == nil || o.Pfm == nil {
		var ret int64
		return ret
	}
	return *o.Pfm
}

// GetPfmOk returns a tuple with the Pfm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetPfmOk() (*int64, bool) {
	if o == nil || o.Pfm == nil {
		return nil, false
	}
	return o.Pfm, true
}

// HasPfm returns a boolean if a field has been set.
func (o *MarketItem) HasPfm() bool {
	if o != nil && o.Pfm != nil {
		return true
	}

	return false
}

// SetPfm gets a reference to the given int64 and assigns it to the Pfm field.
func (o *MarketItem) SetPfm(v int64) {
	o.Pfm = &v
}

// GetPaj returns the Paj field value if set, zero value otherwise.
func (o *MarketItem) GetPaj() int64 {
	if o == nil || o.Paj == nil {
		var ret int64
		return ret
	}
	return *o.Paj
}

// GetPajOk returns a tuple with the Paj field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetPajOk() (*int64, bool) {
	if o == nil || o.Paj == nil {
		return nil, false
	}
	return o.Paj, true
}

// HasPaj returns a boolean if a field has been set.
func (o *MarketItem) HasPaj() bool {
	if o != nil && o.Paj != nil {
		return true
	}

	return false
}

// SetPaj gets a reference to the given int64 and assigns it to the Paj field.
func (o *MarketItem) SetPaj(v int64) {
	o.Paj = &v
}

// GetEXSP returns the EXSP field value if set, zero value otherwise.
func (o *MarketItem) GetEXSP() float32 {
	if o == nil || o.EXSP == nil {
		var ret float32
		return ret
	}
	return *o.EXSP
}

// GetEXSPOk returns a tuple with the EXSP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetEXSPOk() (*float32, bool) {
	if o == nil || o.EXSP == nil {
		return nil, false
	}
	return o.EXSP, true
}

// HasEXSP returns a boolean if a field has been set.
func (o *MarketItem) HasEXSP() bool {
	if o != nil && o.EXSP != nil {
		return true
	}

	return false
}

// SetEXSP gets a reference to the given float32 and assigns it to the EXSP field.
func (o *MarketItem) SetEXSP(v float32) {
	o.EXSP = &v
}

// GetLEXSP returns the LEXSP field value if set, zero value otherwise.
func (o *MarketItem) GetLEXSP() float32 {
	if o == nil || o.LEXSP == nil {
		var ret float32
		return ret
	}
	return *o.LEXSP
}

// GetLEXSPOk returns a tuple with the LEXSP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetLEXSPOk() (*float32, bool) {
	if o == nil || o.LEXSP == nil {
		return nil, false
	}
	return o.LEXSP, true
}

// HasLEXSP returns a boolean if a field has been set.
func (o *MarketItem) HasLEXSP() bool {
	if o != nil && o.LEXSP != nil {
		return true
	}

	return false
}

// SetLEXSP gets a reference to the given float32 and assigns it to the LEXSP field.
func (o *MarketItem) SetLEXSP(v float32) {
	o.LEXSP = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *MarketItem) GetSort() int64 {
	if o == nil || o.Sort == nil {
		var ret int64
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetSortOk() (*int64, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *MarketItem) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given int64 and assigns it to the Sort field.
func (o *MarketItem) SetSort(v int64) {
	o.Sort = &v
}

// GetIsCP returns the IsCP field value if set, zero value otherwise.
func (o *MarketItem) GetIsCP() bool {
	if o == nil || o.IsCP == nil {
		var ret bool
		return ret
	}
	return *o.IsCP
}

// GetIsCPOk returns a tuple with the IsCP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetIsCPOk() (*bool, bool) {
	if o == nil || o.IsCP == nil {
		return nil, false
	}
	return o.IsCP, true
}

// HasIsCP returns a boolean if a field has been set.
func (o *MarketItem) HasIsCP() bool {
	if o != nil && o.IsCP != nil {
		return true
	}

	return false
}

// SetIsCP gets a reference to the given bool and assigns it to the IsCP field.
func (o *MarketItem) SetIsCP(v bool) {
	o.IsCP = &v
}

// GetSelections returns the Selections field value if set, zero value otherwise.
func (o *MarketItem) GetSelections() map[string]SelectionItem {
	if o == nil || o.Selections == nil {
		var ret map[string]SelectionItem
		return ret
	}
	return *o.Selections
}

// GetSelectionsOk returns a tuple with the Selections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketItem) GetSelectionsOk() (*map[string]SelectionItem, bool) {
	if o == nil || o.Selections == nil {
		return nil, false
	}
	return o.Selections, true
}

// HasSelections returns a boolean if a field has been set.
func (o *MarketItem) HasSelections() bool {
	if o != nil && o.Selections != nil {
		return true
	}

	return false
}

// SetSelections gets a reference to the given map[string]SelectionItem and assigns it to the Selections field.
func (o *MarketItem) SetSelections(v map[string]SelectionItem) {
	o.Selections = &v
}

func (o MarketItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketId != nil {
		toSerialize["MarketId"] = o.MarketId
	}
	if o.MatchId != nil {
		toSerialize["MatchId"] = o.MatchId
	}
	if o.BetTypeId != nil {
		toSerialize["BetTypeId"] = o.BetTypeId
	}
	if o.Line != nil {
		toSerialize["Line"] = o.Line
	}
	if o.Cat != nil {
		toSerialize["Cat"] = o.Cat
	}
	if o.Pty != nil {
		toSerialize["Pty"] = o.Pty
	}
	if o.Pim != nil {
		toSerialize["Pim"] = o.Pim
	}
	if o.Pfm != nil {
		toSerialize["Pfm"] = o.Pfm
	}
	if o.Paj != nil {
		toSerialize["Paj"] = o.Paj
	}
	if o.EXSP != nil {
		toSerialize["EXSP"] = o.EXSP
	}
	if o.LEXSP != nil {
		toSerialize["LEXSP"] = o.LEXSP
	}
	if o.Sort != nil {
		toSerialize["sort"] = o.Sort
	}
	if o.IsCP != nil {
		toSerialize["IsCP"] = o.IsCP
	}
	if o.Selections != nil {
		toSerialize["Selections"] = o.Selections
	}
	return json.Marshal(toSerialize)
}

type NullableMarketItem struct {
	value *MarketItem
	isSet bool
}

func (v NullableMarketItem) Get() *MarketItem {
	return v.value
}

func (v *NullableMarketItem) Set(val *MarketItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketItem(val *MarketItem) *NullableMarketItem {
	return &NullableMarketItem{value: val, isSet: true}
}

func (v NullableMarketItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

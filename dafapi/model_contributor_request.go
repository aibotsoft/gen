/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// ContributorRequest struct for ContributorRequest
type ContributorRequest struct {
	IsParlay bool `json:"isParlay"`
	Both bool `json:"both"`
}

// NewContributorRequest instantiates a new ContributorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorRequest(isParlay bool, both bool, ) *ContributorRequest {
	this := ContributorRequest{}
	this.IsParlay = isParlay
	this.Both = both
	return &this
}

// NewContributorRequestWithDefaults instantiates a new ContributorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorRequestWithDefaults() *ContributorRequest {
	this := ContributorRequest{}
	return &this
}

// GetIsParlay returns the IsParlay field value
func (o *ContributorRequest) GetIsParlay() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsParlay
}

// GetIsParlayOk returns a tuple with the IsParlay field value
// and a boolean to check if the value has been set.
func (o *ContributorRequest) GetIsParlayOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsParlay, true
}

// SetIsParlay sets field value
func (o *ContributorRequest) SetIsParlay(v bool) {
	o.IsParlay = v
}

// GetBoth returns the Both field value
func (o *ContributorRequest) GetBoth() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Both
}

// GetBothOk returns a tuple with the Both field value
// and a boolean to check if the value has been set.
func (o *ContributorRequest) GetBothOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Both, true
}

// SetBoth sets field value
func (o *ContributorRequest) SetBoth(v bool) {
	o.Both = v
}

func (o ContributorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isParlay"] = o.IsParlay
	}
	if true {
		toSerialize["both"] = o.Both
	}
	return json.Marshal(toSerialize)
}

type NullableContributorRequest struct {
	value *ContributorRequest
	isSet bool
}

func (v NullableContributorRequest) Get() *ContributorRequest {
	return v.value
}

func (v *NullableContributorRequest) Set(val *ContributorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorRequest(val *ContributorRequest) *NullableContributorRequest {
	return &NullableContributorRequest{value: val, isSet: true}
}

func (v NullableContributorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// TicketsRequest struct for TicketsRequest
type TicketsRequest struct {
	ItemList0Type BetTypeClassEnum `json:"ItemList[0][type]"`
	ItemList0Bettype *int64 `json:"ItemList[0][bettype],omitempty"`
	ItemList0Oddsid int64 `json:"ItemList[0][oddsid]"`
	ItemList0Odds *float32 `json:"ItemList[0][odds],omitempty"`
	ItemList0Line *float64 `json:"ItemList[0][Line],omitempty"`
	ItemList0Hscore *int64 `json:"ItemList[0][Hscore],omitempty"`
	ItemList0Ascore *int64 `json:"ItemList[0][Ascore],omitempty"`
	ItemList0Matchid *int64 `json:"ItemList[0][Matchid],omitempty"`
	ItemList0Betteam string `json:"ItemList[0][betteam]"`
	ItemList0Stake *int64 `json:"ItemList[0][stake],omitempty"`
	ItemList0QuickBet *string `json:"ItemList[0][QuickBet],omitempty"`
	ItemList0ChoiceValue *string `json:"ItemList[0][ChoiceValue],omitempty"`
	ItemList0Home *string `json:"ItemList[0][home],omitempty"`
	ItemList0Away *string `json:"ItemList[0][away],omitempty"`
	ItemList0Gameid *int64 `json:"ItemList[0][gameid],omitempty"`
	ItemList0IsInPlay *bool `json:"ItemList[0][IsInPlay],omitempty"`
	ItemList0Pty *int64 `json:"ItemList[0][pty],omitempty"`
	ItemList0Hdp1 *float32 `json:"ItemList[0][hdp1],omitempty"`
	ItemList0Hdp2 *float32 `json:"ItemList[0][hdp2],omitempty"`
}

// NewTicketsRequest instantiates a new TicketsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketsRequest(itemList0Type BetTypeClassEnum, itemList0Oddsid int64, itemList0Betteam string, ) *TicketsRequest {
	this := TicketsRequest{}
	this.ItemList0Type = itemList0Type
	this.ItemList0Oddsid = itemList0Oddsid
	this.ItemList0Betteam = itemList0Betteam
	return &this
}

// NewTicketsRequestWithDefaults instantiates a new TicketsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketsRequestWithDefaults() *TicketsRequest {
	this := TicketsRequest{}
	return &this
}

// GetItemList0Type returns the ItemList0Type field value
func (o *TicketsRequest) GetItemList0Type() BetTypeClassEnum {
	if o == nil  {
		var ret BetTypeClassEnum
		return ret
	}

	return o.ItemList0Type
}

// GetItemList0TypeOk returns a tuple with the ItemList0Type field value
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0TypeOk() (*BetTypeClassEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemList0Type, true
}

// SetItemList0Type sets field value
func (o *TicketsRequest) SetItemList0Type(v BetTypeClassEnum) {
	o.ItemList0Type = v
}

// GetItemList0Bettype returns the ItemList0Bettype field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Bettype() int64 {
	if o == nil || o.ItemList0Bettype == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Bettype
}

// GetItemList0BettypeOk returns a tuple with the ItemList0Bettype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0BettypeOk() (*int64, bool) {
	if o == nil || o.ItemList0Bettype == nil {
		return nil, false
	}
	return o.ItemList0Bettype, true
}

// HasItemList0Bettype returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Bettype() bool {
	if o != nil && o.ItemList0Bettype != nil {
		return true
	}

	return false
}

// SetItemList0Bettype gets a reference to the given int64 and assigns it to the ItemList0Bettype field.
func (o *TicketsRequest) SetItemList0Bettype(v int64) {
	o.ItemList0Bettype = &v
}

// GetItemList0Oddsid returns the ItemList0Oddsid field value
func (o *TicketsRequest) GetItemList0Oddsid() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.ItemList0Oddsid
}

// GetItemList0OddsidOk returns a tuple with the ItemList0Oddsid field value
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0OddsidOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemList0Oddsid, true
}

// SetItemList0Oddsid sets field value
func (o *TicketsRequest) SetItemList0Oddsid(v int64) {
	o.ItemList0Oddsid = v
}

// GetItemList0Odds returns the ItemList0Odds field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Odds() float32 {
	if o == nil || o.ItemList0Odds == nil {
		var ret float32
		return ret
	}
	return *o.ItemList0Odds
}

// GetItemList0OddsOk returns a tuple with the ItemList0Odds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0OddsOk() (*float32, bool) {
	if o == nil || o.ItemList0Odds == nil {
		return nil, false
	}
	return o.ItemList0Odds, true
}

// HasItemList0Odds returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Odds() bool {
	if o != nil && o.ItemList0Odds != nil {
		return true
	}

	return false
}

// SetItemList0Odds gets a reference to the given float32 and assigns it to the ItemList0Odds field.
func (o *TicketsRequest) SetItemList0Odds(v float32) {
	o.ItemList0Odds = &v
}

// GetItemList0Line returns the ItemList0Line field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Line() float64 {
	if o == nil || o.ItemList0Line == nil {
		var ret float64
		return ret
	}
	return *o.ItemList0Line
}

// GetItemList0LineOk returns a tuple with the ItemList0Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0LineOk() (*float64, bool) {
	if o == nil || o.ItemList0Line == nil {
		return nil, false
	}
	return o.ItemList0Line, true
}

// HasItemList0Line returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Line() bool {
	if o != nil && o.ItemList0Line != nil {
		return true
	}

	return false
}

// SetItemList0Line gets a reference to the given float64 and assigns it to the ItemList0Line field.
func (o *TicketsRequest) SetItemList0Line(v float64) {
	o.ItemList0Line = &v
}

// GetItemList0Hscore returns the ItemList0Hscore field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Hscore() int64 {
	if o == nil || o.ItemList0Hscore == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Hscore
}

// GetItemList0HscoreOk returns a tuple with the ItemList0Hscore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0HscoreOk() (*int64, bool) {
	if o == nil || o.ItemList0Hscore == nil {
		return nil, false
	}
	return o.ItemList0Hscore, true
}

// HasItemList0Hscore returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Hscore() bool {
	if o != nil && o.ItemList0Hscore != nil {
		return true
	}

	return false
}

// SetItemList0Hscore gets a reference to the given int64 and assigns it to the ItemList0Hscore field.
func (o *TicketsRequest) SetItemList0Hscore(v int64) {
	o.ItemList0Hscore = &v
}

// GetItemList0Ascore returns the ItemList0Ascore field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Ascore() int64 {
	if o == nil || o.ItemList0Ascore == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Ascore
}

// GetItemList0AscoreOk returns a tuple with the ItemList0Ascore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0AscoreOk() (*int64, bool) {
	if o == nil || o.ItemList0Ascore == nil {
		return nil, false
	}
	return o.ItemList0Ascore, true
}

// HasItemList0Ascore returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Ascore() bool {
	if o != nil && o.ItemList0Ascore != nil {
		return true
	}

	return false
}

// SetItemList0Ascore gets a reference to the given int64 and assigns it to the ItemList0Ascore field.
func (o *TicketsRequest) SetItemList0Ascore(v int64) {
	o.ItemList0Ascore = &v
}

// GetItemList0Matchid returns the ItemList0Matchid field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Matchid() int64 {
	if o == nil || o.ItemList0Matchid == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Matchid
}

// GetItemList0MatchidOk returns a tuple with the ItemList0Matchid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0MatchidOk() (*int64, bool) {
	if o == nil || o.ItemList0Matchid == nil {
		return nil, false
	}
	return o.ItemList0Matchid, true
}

// HasItemList0Matchid returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Matchid() bool {
	if o != nil && o.ItemList0Matchid != nil {
		return true
	}

	return false
}

// SetItemList0Matchid gets a reference to the given int64 and assigns it to the ItemList0Matchid field.
func (o *TicketsRequest) SetItemList0Matchid(v int64) {
	o.ItemList0Matchid = &v
}

// GetItemList0Betteam returns the ItemList0Betteam field value
func (o *TicketsRequest) GetItemList0Betteam() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ItemList0Betteam
}

// GetItemList0BetteamOk returns a tuple with the ItemList0Betteam field value
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0BetteamOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemList0Betteam, true
}

// SetItemList0Betteam sets field value
func (o *TicketsRequest) SetItemList0Betteam(v string) {
	o.ItemList0Betteam = v
}

// GetItemList0Stake returns the ItemList0Stake field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Stake() int64 {
	if o == nil || o.ItemList0Stake == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Stake
}

// GetItemList0StakeOk returns a tuple with the ItemList0Stake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0StakeOk() (*int64, bool) {
	if o == nil || o.ItemList0Stake == nil {
		return nil, false
	}
	return o.ItemList0Stake, true
}

// HasItemList0Stake returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Stake() bool {
	if o != nil && o.ItemList0Stake != nil {
		return true
	}

	return false
}

// SetItemList0Stake gets a reference to the given int64 and assigns it to the ItemList0Stake field.
func (o *TicketsRequest) SetItemList0Stake(v int64) {
	o.ItemList0Stake = &v
}

// GetItemList0QuickBet returns the ItemList0QuickBet field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0QuickBet() string {
	if o == nil || o.ItemList0QuickBet == nil {
		var ret string
		return ret
	}
	return *o.ItemList0QuickBet
}

// GetItemList0QuickBetOk returns a tuple with the ItemList0QuickBet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0QuickBetOk() (*string, bool) {
	if o == nil || o.ItemList0QuickBet == nil {
		return nil, false
	}
	return o.ItemList0QuickBet, true
}

// HasItemList0QuickBet returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0QuickBet() bool {
	if o != nil && o.ItemList0QuickBet != nil {
		return true
	}

	return false
}

// SetItemList0QuickBet gets a reference to the given string and assigns it to the ItemList0QuickBet field.
func (o *TicketsRequest) SetItemList0QuickBet(v string) {
	o.ItemList0QuickBet = &v
}

// GetItemList0ChoiceValue returns the ItemList0ChoiceValue field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0ChoiceValue() string {
	if o == nil || o.ItemList0ChoiceValue == nil {
		var ret string
		return ret
	}
	return *o.ItemList0ChoiceValue
}

// GetItemList0ChoiceValueOk returns a tuple with the ItemList0ChoiceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0ChoiceValueOk() (*string, bool) {
	if o == nil || o.ItemList0ChoiceValue == nil {
		return nil, false
	}
	return o.ItemList0ChoiceValue, true
}

// HasItemList0ChoiceValue returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0ChoiceValue() bool {
	if o != nil && o.ItemList0ChoiceValue != nil {
		return true
	}

	return false
}

// SetItemList0ChoiceValue gets a reference to the given string and assigns it to the ItemList0ChoiceValue field.
func (o *TicketsRequest) SetItemList0ChoiceValue(v string) {
	o.ItemList0ChoiceValue = &v
}

// GetItemList0Home returns the ItemList0Home field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Home() string {
	if o == nil || o.ItemList0Home == nil {
		var ret string
		return ret
	}
	return *o.ItemList0Home
}

// GetItemList0HomeOk returns a tuple with the ItemList0Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0HomeOk() (*string, bool) {
	if o == nil || o.ItemList0Home == nil {
		return nil, false
	}
	return o.ItemList0Home, true
}

// HasItemList0Home returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Home() bool {
	if o != nil && o.ItemList0Home != nil {
		return true
	}

	return false
}

// SetItemList0Home gets a reference to the given string and assigns it to the ItemList0Home field.
func (o *TicketsRequest) SetItemList0Home(v string) {
	o.ItemList0Home = &v
}

// GetItemList0Away returns the ItemList0Away field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Away() string {
	if o == nil || o.ItemList0Away == nil {
		var ret string
		return ret
	}
	return *o.ItemList0Away
}

// GetItemList0AwayOk returns a tuple with the ItemList0Away field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0AwayOk() (*string, bool) {
	if o == nil || o.ItemList0Away == nil {
		return nil, false
	}
	return o.ItemList0Away, true
}

// HasItemList0Away returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Away() bool {
	if o != nil && o.ItemList0Away != nil {
		return true
	}

	return false
}

// SetItemList0Away gets a reference to the given string and assigns it to the ItemList0Away field.
func (o *TicketsRequest) SetItemList0Away(v string) {
	o.ItemList0Away = &v
}

// GetItemList0Gameid returns the ItemList0Gameid field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Gameid() int64 {
	if o == nil || o.ItemList0Gameid == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Gameid
}

// GetItemList0GameidOk returns a tuple with the ItemList0Gameid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0GameidOk() (*int64, bool) {
	if o == nil || o.ItemList0Gameid == nil {
		return nil, false
	}
	return o.ItemList0Gameid, true
}

// HasItemList0Gameid returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Gameid() bool {
	if o != nil && o.ItemList0Gameid != nil {
		return true
	}

	return false
}

// SetItemList0Gameid gets a reference to the given int64 and assigns it to the ItemList0Gameid field.
func (o *TicketsRequest) SetItemList0Gameid(v int64) {
	o.ItemList0Gameid = &v
}

// GetItemList0IsInPlay returns the ItemList0IsInPlay field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0IsInPlay() bool {
	if o == nil || o.ItemList0IsInPlay == nil {
		var ret bool
		return ret
	}
	return *o.ItemList0IsInPlay
}

// GetItemList0IsInPlayOk returns a tuple with the ItemList0IsInPlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0IsInPlayOk() (*bool, bool) {
	if o == nil || o.ItemList0IsInPlay == nil {
		return nil, false
	}
	return o.ItemList0IsInPlay, true
}

// HasItemList0IsInPlay returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0IsInPlay() bool {
	if o != nil && o.ItemList0IsInPlay != nil {
		return true
	}

	return false
}

// SetItemList0IsInPlay gets a reference to the given bool and assigns it to the ItemList0IsInPlay field.
func (o *TicketsRequest) SetItemList0IsInPlay(v bool) {
	o.ItemList0IsInPlay = &v
}

// GetItemList0Pty returns the ItemList0Pty field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Pty() int64 {
	if o == nil || o.ItemList0Pty == nil {
		var ret int64
		return ret
	}
	return *o.ItemList0Pty
}

// GetItemList0PtyOk returns a tuple with the ItemList0Pty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0PtyOk() (*int64, bool) {
	if o == nil || o.ItemList0Pty == nil {
		return nil, false
	}
	return o.ItemList0Pty, true
}

// HasItemList0Pty returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Pty() bool {
	if o != nil && o.ItemList0Pty != nil {
		return true
	}

	return false
}

// SetItemList0Pty gets a reference to the given int64 and assigns it to the ItemList0Pty field.
func (o *TicketsRequest) SetItemList0Pty(v int64) {
	o.ItemList0Pty = &v
}

// GetItemList0Hdp1 returns the ItemList0Hdp1 field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Hdp1() float32 {
	if o == nil || o.ItemList0Hdp1 == nil {
		var ret float32
		return ret
	}
	return *o.ItemList0Hdp1
}

// GetItemList0Hdp1Ok returns a tuple with the ItemList0Hdp1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0Hdp1Ok() (*float32, bool) {
	if o == nil || o.ItemList0Hdp1 == nil {
		return nil, false
	}
	return o.ItemList0Hdp1, true
}

// HasItemList0Hdp1 returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Hdp1() bool {
	if o != nil && o.ItemList0Hdp1 != nil {
		return true
	}

	return false
}

// SetItemList0Hdp1 gets a reference to the given float32 and assigns it to the ItemList0Hdp1 field.
func (o *TicketsRequest) SetItemList0Hdp1(v float32) {
	o.ItemList0Hdp1 = &v
}

// GetItemList0Hdp2 returns the ItemList0Hdp2 field value if set, zero value otherwise.
func (o *TicketsRequest) GetItemList0Hdp2() float32 {
	if o == nil || o.ItemList0Hdp2 == nil {
		var ret float32
		return ret
	}
	return *o.ItemList0Hdp2
}

// GetItemList0Hdp2Ok returns a tuple with the ItemList0Hdp2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketsRequest) GetItemList0Hdp2Ok() (*float32, bool) {
	if o == nil || o.ItemList0Hdp2 == nil {
		return nil, false
	}
	return o.ItemList0Hdp2, true
}

// HasItemList0Hdp2 returns a boolean if a field has been set.
func (o *TicketsRequest) HasItemList0Hdp2() bool {
	if o != nil && o.ItemList0Hdp2 != nil {
		return true
	}

	return false
}

// SetItemList0Hdp2 gets a reference to the given float32 and assigns it to the ItemList0Hdp2 field.
func (o *TicketsRequest) SetItemList0Hdp2(v float32) {
	o.ItemList0Hdp2 = &v
}

func (o TicketsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ItemList[0][type]"] = o.ItemList0Type
	}
	if o.ItemList0Bettype != nil {
		toSerialize["ItemList[0][bettype]"] = o.ItemList0Bettype
	}
	if true {
		toSerialize["ItemList[0][oddsid]"] = o.ItemList0Oddsid
	}
	if o.ItemList0Odds != nil {
		toSerialize["ItemList[0][odds]"] = o.ItemList0Odds
	}
	if o.ItemList0Line != nil {
		toSerialize["ItemList[0][Line]"] = o.ItemList0Line
	}
	if o.ItemList0Hscore != nil {
		toSerialize["ItemList[0][Hscore]"] = o.ItemList0Hscore
	}
	if o.ItemList0Ascore != nil {
		toSerialize["ItemList[0][Ascore]"] = o.ItemList0Ascore
	}
	if o.ItemList0Matchid != nil {
		toSerialize["ItemList[0][Matchid]"] = o.ItemList0Matchid
	}
	if true {
		toSerialize["ItemList[0][betteam]"] = o.ItemList0Betteam
	}
	if o.ItemList0Stake != nil {
		toSerialize["ItemList[0][stake]"] = o.ItemList0Stake
	}
	if o.ItemList0QuickBet != nil {
		toSerialize["ItemList[0][QuickBet]"] = o.ItemList0QuickBet
	}
	if o.ItemList0ChoiceValue != nil {
		toSerialize["ItemList[0][ChoiceValue]"] = o.ItemList0ChoiceValue
	}
	if o.ItemList0Home != nil {
		toSerialize["ItemList[0][home]"] = o.ItemList0Home
	}
	if o.ItemList0Away != nil {
		toSerialize["ItemList[0][away]"] = o.ItemList0Away
	}
	if o.ItemList0Gameid != nil {
		toSerialize["ItemList[0][gameid]"] = o.ItemList0Gameid
	}
	if o.ItemList0IsInPlay != nil {
		toSerialize["ItemList[0][IsInPlay]"] = o.ItemList0IsInPlay
	}
	if o.ItemList0Pty != nil {
		toSerialize["ItemList[0][pty]"] = o.ItemList0Pty
	}
	if o.ItemList0Hdp1 != nil {
		toSerialize["ItemList[0][hdp1]"] = o.ItemList0Hdp1
	}
	if o.ItemList0Hdp2 != nil {
		toSerialize["ItemList[0][hdp2]"] = o.ItemList0Hdp2
	}
	return json.Marshal(toSerialize)
}

type NullableTicketsRequest struct {
	value *TicketsRequest
	isSet bool
}

func (v NullableTicketsRequest) Get() *TicketsRequest {
	return v.value
}

func (v *NullableTicketsRequest) Set(val *TicketsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketsRequest(val *TicketsRequest) *NullableTicketsRequest {
	return &NullableTicketsRequest{value: val, isSet: true}
}

func (v NullableTicketsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

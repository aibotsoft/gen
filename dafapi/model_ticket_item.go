/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// TicketItem struct for TicketItem
type TicketItem struct {
	TicketType *BetTypeClassEnum `json:"TicketType,omitempty"`
	Minbet *string `json:"Minbet,omitempty"`
	Maxbet *string `json:"Maxbet,omitempty"`
	Bet *string `json:"Bet,omitempty"`
	QuickBet *string `json:"QuickBet,omitempty"`
	SeqNo *int64 `json:"SeqNo,omitempty"`
	Line *float64 `json:"Line,omitempty"`
	DisplayHDP *string `json:"DisplayHDP,omitempty"`
	Hdp1 *float32 `json:"Hdp1,omitempty"`
	Hdp2 *float32 `json:"Hdp2,omitempty"`
	DisplayOdds *string `json:"DisplayOdds,omitempty"`
	DisplayOddsPair *string `json:"DisplayOddsPair,omitempty"`
	OddsID *int64 `json:"OddsID,omitempty"`
	Betteam *string `json:"Betteam,omitempty"`
	LiveScore *bool `json:"LiveScore,omitempty"`
	LiveHomeScore *int64 `json:"LiveHomeScore,omitempty"`
	LiveAwayScore *int64 `json:"LiveAwayScore,omitempty"`
	BetID *string `json:"BetID,omitempty"`
	ChoiceValue *string `json:"ChoiceValue,omitempty"`
	BettypeName *string `json:"BettypeName,omitempty"`
	HomeName *string `json:"HomeName,omitempty"`
	AwayName *string `json:"AwayName,omitempty"`
	LeagueName *string `json:"LeagueName,omitempty"`
	Bettype *string `json:"Bettype,omitempty"`
	SportType *int64 `json:"SportType,omitempty"`
	SportName *string `json:"SportName,omitempty"`
	GameName *string `json:"GameName,omitempty"`
	IsLive *bool `json:"IsLive,omitempty"`
	IsInPlay *bool `json:"IsInPlay,omitempty"`
	Matchid *int64 `json:"Matchid,omitempty"`
	Code *int64 `json:"Code,omitempty"`
	IsOddsChange *bool `json:"isOddsChange,omitempty"`
	AutoAcceptSec *string `json:"AutoAcceptSec,omitempty"`
	MRPercentage *string `json:"MRPercentage,omitempty"`
	DisplayTime *string `json:"DisplayTime,omitempty"`
	HasParlay *bool `json:"HasParlay,omitempty"`
	BonusID *int64 `json:"BonusID,omitempty"`
	BonusType *int64 `json:"BonusType,omitempty"`
	PromoID *int64 `json:"PromoID,omitempty"`
	BetHintMsg *string `json:"BetHintMsg,omitempty"`
	Common *CommonItem `json:"Common,omitempty"`
}

// NewTicketItem instantiates a new TicketItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketItem() *TicketItem {
	this := TicketItem{}
	return &this
}

// NewTicketItemWithDefaults instantiates a new TicketItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketItemWithDefaults() *TicketItem {
	this := TicketItem{}
	return &this
}

// GetTicketType returns the TicketType field value if set, zero value otherwise.
func (o *TicketItem) GetTicketType() BetTypeClassEnum {
	if o == nil || o.TicketType == nil {
		var ret BetTypeClassEnum
		return ret
	}
	return *o.TicketType
}

// GetTicketTypeOk returns a tuple with the TicketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetTicketTypeOk() (*BetTypeClassEnum, bool) {
	if o == nil || o.TicketType == nil {
		return nil, false
	}
	return o.TicketType, true
}

// HasTicketType returns a boolean if a field has been set.
func (o *TicketItem) HasTicketType() bool {
	if o != nil && o.TicketType != nil {
		return true
	}

	return false
}

// SetTicketType gets a reference to the given BetTypeClassEnum and assigns it to the TicketType field.
func (o *TicketItem) SetTicketType(v BetTypeClassEnum) {
	o.TicketType = &v
}

// GetMinbet returns the Minbet field value if set, zero value otherwise.
func (o *TicketItem) GetMinbet() string {
	if o == nil || o.Minbet == nil {
		var ret string
		return ret
	}
	return *o.Minbet
}

// GetMinbetOk returns a tuple with the Minbet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetMinbetOk() (*string, bool) {
	if o == nil || o.Minbet == nil {
		return nil, false
	}
	return o.Minbet, true
}

// HasMinbet returns a boolean if a field has been set.
func (o *TicketItem) HasMinbet() bool {
	if o != nil && o.Minbet != nil {
		return true
	}

	return false
}

// SetMinbet gets a reference to the given string and assigns it to the Minbet field.
func (o *TicketItem) SetMinbet(v string) {
	o.Minbet = &v
}

// GetMaxbet returns the Maxbet field value if set, zero value otherwise.
func (o *TicketItem) GetMaxbet() string {
	if o == nil || o.Maxbet == nil {
		var ret string
		return ret
	}
	return *o.Maxbet
}

// GetMaxbetOk returns a tuple with the Maxbet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetMaxbetOk() (*string, bool) {
	if o == nil || o.Maxbet == nil {
		return nil, false
	}
	return o.Maxbet, true
}

// HasMaxbet returns a boolean if a field has been set.
func (o *TicketItem) HasMaxbet() bool {
	if o != nil && o.Maxbet != nil {
		return true
	}

	return false
}

// SetMaxbet gets a reference to the given string and assigns it to the Maxbet field.
func (o *TicketItem) SetMaxbet(v string) {
	o.Maxbet = &v
}

// GetBet returns the Bet field value if set, zero value otherwise.
func (o *TicketItem) GetBet() string {
	if o == nil || o.Bet == nil {
		var ret string
		return ret
	}
	return *o.Bet
}

// GetBetOk returns a tuple with the Bet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBetOk() (*string, bool) {
	if o == nil || o.Bet == nil {
		return nil, false
	}
	return o.Bet, true
}

// HasBet returns a boolean if a field has been set.
func (o *TicketItem) HasBet() bool {
	if o != nil && o.Bet != nil {
		return true
	}

	return false
}

// SetBet gets a reference to the given string and assigns it to the Bet field.
func (o *TicketItem) SetBet(v string) {
	o.Bet = &v
}

// GetQuickBet returns the QuickBet field value if set, zero value otherwise.
func (o *TicketItem) GetQuickBet() string {
	if o == nil || o.QuickBet == nil {
		var ret string
		return ret
	}
	return *o.QuickBet
}

// GetQuickBetOk returns a tuple with the QuickBet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetQuickBetOk() (*string, bool) {
	if o == nil || o.QuickBet == nil {
		return nil, false
	}
	return o.QuickBet, true
}

// HasQuickBet returns a boolean if a field has been set.
func (o *TicketItem) HasQuickBet() bool {
	if o != nil && o.QuickBet != nil {
		return true
	}

	return false
}

// SetQuickBet gets a reference to the given string and assigns it to the QuickBet field.
func (o *TicketItem) SetQuickBet(v string) {
	o.QuickBet = &v
}

// GetSeqNo returns the SeqNo field value if set, zero value otherwise.
func (o *TicketItem) GetSeqNo() int64 {
	if o == nil || o.SeqNo == nil {
		var ret int64
		return ret
	}
	return *o.SeqNo
}

// GetSeqNoOk returns a tuple with the SeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetSeqNoOk() (*int64, bool) {
	if o == nil || o.SeqNo == nil {
		return nil, false
	}
	return o.SeqNo, true
}

// HasSeqNo returns a boolean if a field has been set.
func (o *TicketItem) HasSeqNo() bool {
	if o != nil && o.SeqNo != nil {
		return true
	}

	return false
}

// SetSeqNo gets a reference to the given int64 and assigns it to the SeqNo field.
func (o *TicketItem) SetSeqNo(v int64) {
	o.SeqNo = &v
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *TicketItem) GetLine() float64 {
	if o == nil || o.Line == nil {
		var ret float64
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetLineOk() (*float64, bool) {
	if o == nil || o.Line == nil {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *TicketItem) HasLine() bool {
	if o != nil && o.Line != nil {
		return true
	}

	return false
}

// SetLine gets a reference to the given float64 and assigns it to the Line field.
func (o *TicketItem) SetLine(v float64) {
	o.Line = &v
}

// GetDisplayHDP returns the DisplayHDP field value if set, zero value otherwise.
func (o *TicketItem) GetDisplayHDP() string {
	if o == nil || o.DisplayHDP == nil {
		var ret string
		return ret
	}
	return *o.DisplayHDP
}

// GetDisplayHDPOk returns a tuple with the DisplayHDP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetDisplayHDPOk() (*string, bool) {
	if o == nil || o.DisplayHDP == nil {
		return nil, false
	}
	return o.DisplayHDP, true
}

// HasDisplayHDP returns a boolean if a field has been set.
func (o *TicketItem) HasDisplayHDP() bool {
	if o != nil && o.DisplayHDP != nil {
		return true
	}

	return false
}

// SetDisplayHDP gets a reference to the given string and assigns it to the DisplayHDP field.
func (o *TicketItem) SetDisplayHDP(v string) {
	o.DisplayHDP = &v
}

// GetHdp1 returns the Hdp1 field value if set, zero value otherwise.
func (o *TicketItem) GetHdp1() float32 {
	if o == nil || o.Hdp1 == nil {
		var ret float32
		return ret
	}
	return *o.Hdp1
}

// GetHdp1Ok returns a tuple with the Hdp1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetHdp1Ok() (*float32, bool) {
	if o == nil || o.Hdp1 == nil {
		return nil, false
	}
	return o.Hdp1, true
}

// HasHdp1 returns a boolean if a field has been set.
func (o *TicketItem) HasHdp1() bool {
	if o != nil && o.Hdp1 != nil {
		return true
	}

	return false
}

// SetHdp1 gets a reference to the given float32 and assigns it to the Hdp1 field.
func (o *TicketItem) SetHdp1(v float32) {
	o.Hdp1 = &v
}

// GetHdp2 returns the Hdp2 field value if set, zero value otherwise.
func (o *TicketItem) GetHdp2() float32 {
	if o == nil || o.Hdp2 == nil {
		var ret float32
		return ret
	}
	return *o.Hdp2
}

// GetHdp2Ok returns a tuple with the Hdp2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetHdp2Ok() (*float32, bool) {
	if o == nil || o.Hdp2 == nil {
		return nil, false
	}
	return o.Hdp2, true
}

// HasHdp2 returns a boolean if a field has been set.
func (o *TicketItem) HasHdp2() bool {
	if o != nil && o.Hdp2 != nil {
		return true
	}

	return false
}

// SetHdp2 gets a reference to the given float32 and assigns it to the Hdp2 field.
func (o *TicketItem) SetHdp2(v float32) {
	o.Hdp2 = &v
}

// GetDisplayOdds returns the DisplayOdds field value if set, zero value otherwise.
func (o *TicketItem) GetDisplayOdds() string {
	if o == nil || o.DisplayOdds == nil {
		var ret string
		return ret
	}
	return *o.DisplayOdds
}

// GetDisplayOddsOk returns a tuple with the DisplayOdds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetDisplayOddsOk() (*string, bool) {
	if o == nil || o.DisplayOdds == nil {
		return nil, false
	}
	return o.DisplayOdds, true
}

// HasDisplayOdds returns a boolean if a field has been set.
func (o *TicketItem) HasDisplayOdds() bool {
	if o != nil && o.DisplayOdds != nil {
		return true
	}

	return false
}

// SetDisplayOdds gets a reference to the given string and assigns it to the DisplayOdds field.
func (o *TicketItem) SetDisplayOdds(v string) {
	o.DisplayOdds = &v
}

// GetDisplayOddsPair returns the DisplayOddsPair field value if set, zero value otherwise.
func (o *TicketItem) GetDisplayOddsPair() string {
	if o == nil || o.DisplayOddsPair == nil {
		var ret string
		return ret
	}
	return *o.DisplayOddsPair
}

// GetDisplayOddsPairOk returns a tuple with the DisplayOddsPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetDisplayOddsPairOk() (*string, bool) {
	if o == nil || o.DisplayOddsPair == nil {
		return nil, false
	}
	return o.DisplayOddsPair, true
}

// HasDisplayOddsPair returns a boolean if a field has been set.
func (o *TicketItem) HasDisplayOddsPair() bool {
	if o != nil && o.DisplayOddsPair != nil {
		return true
	}

	return false
}

// SetDisplayOddsPair gets a reference to the given string and assigns it to the DisplayOddsPair field.
func (o *TicketItem) SetDisplayOddsPair(v string) {
	o.DisplayOddsPair = &v
}

// GetOddsID returns the OddsID field value if set, zero value otherwise.
func (o *TicketItem) GetOddsID() int64 {
	if o == nil || o.OddsID == nil {
		var ret int64
		return ret
	}
	return *o.OddsID
}

// GetOddsIDOk returns a tuple with the OddsID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetOddsIDOk() (*int64, bool) {
	if o == nil || o.OddsID == nil {
		return nil, false
	}
	return o.OddsID, true
}

// HasOddsID returns a boolean if a field has been set.
func (o *TicketItem) HasOddsID() bool {
	if o != nil && o.OddsID != nil {
		return true
	}

	return false
}

// SetOddsID gets a reference to the given int64 and assigns it to the OddsID field.
func (o *TicketItem) SetOddsID(v int64) {
	o.OddsID = &v
}

// GetBetteam returns the Betteam field value if set, zero value otherwise.
func (o *TicketItem) GetBetteam() string {
	if o == nil || o.Betteam == nil {
		var ret string
		return ret
	}
	return *o.Betteam
}

// GetBetteamOk returns a tuple with the Betteam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBetteamOk() (*string, bool) {
	if o == nil || o.Betteam == nil {
		return nil, false
	}
	return o.Betteam, true
}

// HasBetteam returns a boolean if a field has been set.
func (o *TicketItem) HasBetteam() bool {
	if o != nil && o.Betteam != nil {
		return true
	}

	return false
}

// SetBetteam gets a reference to the given string and assigns it to the Betteam field.
func (o *TicketItem) SetBetteam(v string) {
	o.Betteam = &v
}

// GetLiveScore returns the LiveScore field value if set, zero value otherwise.
func (o *TicketItem) GetLiveScore() bool {
	if o == nil || o.LiveScore == nil {
		var ret bool
		return ret
	}
	return *o.LiveScore
}

// GetLiveScoreOk returns a tuple with the LiveScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetLiveScoreOk() (*bool, bool) {
	if o == nil || o.LiveScore == nil {
		return nil, false
	}
	return o.LiveScore, true
}

// HasLiveScore returns a boolean if a field has been set.
func (o *TicketItem) HasLiveScore() bool {
	if o != nil && o.LiveScore != nil {
		return true
	}

	return false
}

// SetLiveScore gets a reference to the given bool and assigns it to the LiveScore field.
func (o *TicketItem) SetLiveScore(v bool) {
	o.LiveScore = &v
}

// GetLiveHomeScore returns the LiveHomeScore field value if set, zero value otherwise.
func (o *TicketItem) GetLiveHomeScore() int64 {
	if o == nil || o.LiveHomeScore == nil {
		var ret int64
		return ret
	}
	return *o.LiveHomeScore
}

// GetLiveHomeScoreOk returns a tuple with the LiveHomeScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetLiveHomeScoreOk() (*int64, bool) {
	if o == nil || o.LiveHomeScore == nil {
		return nil, false
	}
	return o.LiveHomeScore, true
}

// HasLiveHomeScore returns a boolean if a field has been set.
func (o *TicketItem) HasLiveHomeScore() bool {
	if o != nil && o.LiveHomeScore != nil {
		return true
	}

	return false
}

// SetLiveHomeScore gets a reference to the given int64 and assigns it to the LiveHomeScore field.
func (o *TicketItem) SetLiveHomeScore(v int64) {
	o.LiveHomeScore = &v
}

// GetLiveAwayScore returns the LiveAwayScore field value if set, zero value otherwise.
func (o *TicketItem) GetLiveAwayScore() int64 {
	if o == nil || o.LiveAwayScore == nil {
		var ret int64
		return ret
	}
	return *o.LiveAwayScore
}

// GetLiveAwayScoreOk returns a tuple with the LiveAwayScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetLiveAwayScoreOk() (*int64, bool) {
	if o == nil || o.LiveAwayScore == nil {
		return nil, false
	}
	return o.LiveAwayScore, true
}

// HasLiveAwayScore returns a boolean if a field has been set.
func (o *TicketItem) HasLiveAwayScore() bool {
	if o != nil && o.LiveAwayScore != nil {
		return true
	}

	return false
}

// SetLiveAwayScore gets a reference to the given int64 and assigns it to the LiveAwayScore field.
func (o *TicketItem) SetLiveAwayScore(v int64) {
	o.LiveAwayScore = &v
}

// GetBetID returns the BetID field value if set, zero value otherwise.
func (o *TicketItem) GetBetID() string {
	if o == nil || o.BetID == nil {
		var ret string
		return ret
	}
	return *o.BetID
}

// GetBetIDOk returns a tuple with the BetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBetIDOk() (*string, bool) {
	if o == nil || o.BetID == nil {
		return nil, false
	}
	return o.BetID, true
}

// HasBetID returns a boolean if a field has been set.
func (o *TicketItem) HasBetID() bool {
	if o != nil && o.BetID != nil {
		return true
	}

	return false
}

// SetBetID gets a reference to the given string and assigns it to the BetID field.
func (o *TicketItem) SetBetID(v string) {
	o.BetID = &v
}

// GetChoiceValue returns the ChoiceValue field value if set, zero value otherwise.
func (o *TicketItem) GetChoiceValue() string {
	if o == nil || o.ChoiceValue == nil {
		var ret string
		return ret
	}
	return *o.ChoiceValue
}

// GetChoiceValueOk returns a tuple with the ChoiceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetChoiceValueOk() (*string, bool) {
	if o == nil || o.ChoiceValue == nil {
		return nil, false
	}
	return o.ChoiceValue, true
}

// HasChoiceValue returns a boolean if a field has been set.
func (o *TicketItem) HasChoiceValue() bool {
	if o != nil && o.ChoiceValue != nil {
		return true
	}

	return false
}

// SetChoiceValue gets a reference to the given string and assigns it to the ChoiceValue field.
func (o *TicketItem) SetChoiceValue(v string) {
	o.ChoiceValue = &v
}

// GetBettypeName returns the BettypeName field value if set, zero value otherwise.
func (o *TicketItem) GetBettypeName() string {
	if o == nil || o.BettypeName == nil {
		var ret string
		return ret
	}
	return *o.BettypeName
}

// GetBettypeNameOk returns a tuple with the BettypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBettypeNameOk() (*string, bool) {
	if o == nil || o.BettypeName == nil {
		return nil, false
	}
	return o.BettypeName, true
}

// HasBettypeName returns a boolean if a field has been set.
func (o *TicketItem) HasBettypeName() bool {
	if o != nil && o.BettypeName != nil {
		return true
	}

	return false
}

// SetBettypeName gets a reference to the given string and assigns it to the BettypeName field.
func (o *TicketItem) SetBettypeName(v string) {
	o.BettypeName = &v
}

// GetHomeName returns the HomeName field value if set, zero value otherwise.
func (o *TicketItem) GetHomeName() string {
	if o == nil || o.HomeName == nil {
		var ret string
		return ret
	}
	return *o.HomeName
}

// GetHomeNameOk returns a tuple with the HomeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetHomeNameOk() (*string, bool) {
	if o == nil || o.HomeName == nil {
		return nil, false
	}
	return o.HomeName, true
}

// HasHomeName returns a boolean if a field has been set.
func (o *TicketItem) HasHomeName() bool {
	if o != nil && o.HomeName != nil {
		return true
	}

	return false
}

// SetHomeName gets a reference to the given string and assigns it to the HomeName field.
func (o *TicketItem) SetHomeName(v string) {
	o.HomeName = &v
}

// GetAwayName returns the AwayName field value if set, zero value otherwise.
func (o *TicketItem) GetAwayName() string {
	if o == nil || o.AwayName == nil {
		var ret string
		return ret
	}
	return *o.AwayName
}

// GetAwayNameOk returns a tuple with the AwayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetAwayNameOk() (*string, bool) {
	if o == nil || o.AwayName == nil {
		return nil, false
	}
	return o.AwayName, true
}

// HasAwayName returns a boolean if a field has been set.
func (o *TicketItem) HasAwayName() bool {
	if o != nil && o.AwayName != nil {
		return true
	}

	return false
}

// SetAwayName gets a reference to the given string and assigns it to the AwayName field.
func (o *TicketItem) SetAwayName(v string) {
	o.AwayName = &v
}

// GetLeagueName returns the LeagueName field value if set, zero value otherwise.
func (o *TicketItem) GetLeagueName() string {
	if o == nil || o.LeagueName == nil {
		var ret string
		return ret
	}
	return *o.LeagueName
}

// GetLeagueNameOk returns a tuple with the LeagueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetLeagueNameOk() (*string, bool) {
	if o == nil || o.LeagueName == nil {
		return nil, false
	}
	return o.LeagueName, true
}

// HasLeagueName returns a boolean if a field has been set.
func (o *TicketItem) HasLeagueName() bool {
	if o != nil && o.LeagueName != nil {
		return true
	}

	return false
}

// SetLeagueName gets a reference to the given string and assigns it to the LeagueName field.
func (o *TicketItem) SetLeagueName(v string) {
	o.LeagueName = &v
}

// GetBettype returns the Bettype field value if set, zero value otherwise.
func (o *TicketItem) GetBettype() string {
	if o == nil || o.Bettype == nil {
		var ret string
		return ret
	}
	return *o.Bettype
}

// GetBettypeOk returns a tuple with the Bettype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBettypeOk() (*string, bool) {
	if o == nil || o.Bettype == nil {
		return nil, false
	}
	return o.Bettype, true
}

// HasBettype returns a boolean if a field has been set.
func (o *TicketItem) HasBettype() bool {
	if o != nil && o.Bettype != nil {
		return true
	}

	return false
}

// SetBettype gets a reference to the given string and assigns it to the Bettype field.
func (o *TicketItem) SetBettype(v string) {
	o.Bettype = &v
}

// GetSportType returns the SportType field value if set, zero value otherwise.
func (o *TicketItem) GetSportType() int64 {
	if o == nil || o.SportType == nil {
		var ret int64
		return ret
	}
	return *o.SportType
}

// GetSportTypeOk returns a tuple with the SportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetSportTypeOk() (*int64, bool) {
	if o == nil || o.SportType == nil {
		return nil, false
	}
	return o.SportType, true
}

// HasSportType returns a boolean if a field has been set.
func (o *TicketItem) HasSportType() bool {
	if o != nil && o.SportType != nil {
		return true
	}

	return false
}

// SetSportType gets a reference to the given int64 and assigns it to the SportType field.
func (o *TicketItem) SetSportType(v int64) {
	o.SportType = &v
}

// GetSportName returns the SportName field value if set, zero value otherwise.
func (o *TicketItem) GetSportName() string {
	if o == nil || o.SportName == nil {
		var ret string
		return ret
	}
	return *o.SportName
}

// GetSportNameOk returns a tuple with the SportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetSportNameOk() (*string, bool) {
	if o == nil || o.SportName == nil {
		return nil, false
	}
	return o.SportName, true
}

// HasSportName returns a boolean if a field has been set.
func (o *TicketItem) HasSportName() bool {
	if o != nil && o.SportName != nil {
		return true
	}

	return false
}

// SetSportName gets a reference to the given string and assigns it to the SportName field.
func (o *TicketItem) SetSportName(v string) {
	o.SportName = &v
}

// GetGameName returns the GameName field value if set, zero value otherwise.
func (o *TicketItem) GetGameName() string {
	if o == nil || o.GameName == nil {
		var ret string
		return ret
	}
	return *o.GameName
}

// GetGameNameOk returns a tuple with the GameName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetGameNameOk() (*string, bool) {
	if o == nil || o.GameName == nil {
		return nil, false
	}
	return o.GameName, true
}

// HasGameName returns a boolean if a field has been set.
func (o *TicketItem) HasGameName() bool {
	if o != nil && o.GameName != nil {
		return true
	}

	return false
}

// SetGameName gets a reference to the given string and assigns it to the GameName field.
func (o *TicketItem) SetGameName(v string) {
	o.GameName = &v
}

// GetIsLive returns the IsLive field value if set, zero value otherwise.
func (o *TicketItem) GetIsLive() bool {
	if o == nil || o.IsLive == nil {
		var ret bool
		return ret
	}
	return *o.IsLive
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetIsLiveOk() (*bool, bool) {
	if o == nil || o.IsLive == nil {
		return nil, false
	}
	return o.IsLive, true
}

// HasIsLive returns a boolean if a field has been set.
func (o *TicketItem) HasIsLive() bool {
	if o != nil && o.IsLive != nil {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given bool and assigns it to the IsLive field.
func (o *TicketItem) SetIsLive(v bool) {
	o.IsLive = &v
}

// GetIsInPlay returns the IsInPlay field value if set, zero value otherwise.
func (o *TicketItem) GetIsInPlay() bool {
	if o == nil || o.IsInPlay == nil {
		var ret bool
		return ret
	}
	return *o.IsInPlay
}

// GetIsInPlayOk returns a tuple with the IsInPlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetIsInPlayOk() (*bool, bool) {
	if o == nil || o.IsInPlay == nil {
		return nil, false
	}
	return o.IsInPlay, true
}

// HasIsInPlay returns a boolean if a field has been set.
func (o *TicketItem) HasIsInPlay() bool {
	if o != nil && o.IsInPlay != nil {
		return true
	}

	return false
}

// SetIsInPlay gets a reference to the given bool and assigns it to the IsInPlay field.
func (o *TicketItem) SetIsInPlay(v bool) {
	o.IsInPlay = &v
}

// GetMatchid returns the Matchid field value if set, zero value otherwise.
func (o *TicketItem) GetMatchid() int64 {
	if o == nil || o.Matchid == nil {
		var ret int64
		return ret
	}
	return *o.Matchid
}

// GetMatchidOk returns a tuple with the Matchid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetMatchidOk() (*int64, bool) {
	if o == nil || o.Matchid == nil {
		return nil, false
	}
	return o.Matchid, true
}

// HasMatchid returns a boolean if a field has been set.
func (o *TicketItem) HasMatchid() bool {
	if o != nil && o.Matchid != nil {
		return true
	}

	return false
}

// SetMatchid gets a reference to the given int64 and assigns it to the Matchid field.
func (o *TicketItem) SetMatchid(v int64) {
	o.Matchid = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TicketItem) GetCode() int64 {
	if o == nil || o.Code == nil {
		var ret int64
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetCodeOk() (*int64, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TicketItem) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int64 and assigns it to the Code field.
func (o *TicketItem) SetCode(v int64) {
	o.Code = &v
}

// GetIsOddsChange returns the IsOddsChange field value if set, zero value otherwise.
func (o *TicketItem) GetIsOddsChange() bool {
	if o == nil || o.IsOddsChange == nil {
		var ret bool
		return ret
	}
	return *o.IsOddsChange
}

// GetIsOddsChangeOk returns a tuple with the IsOddsChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetIsOddsChangeOk() (*bool, bool) {
	if o == nil || o.IsOddsChange == nil {
		return nil, false
	}
	return o.IsOddsChange, true
}

// HasIsOddsChange returns a boolean if a field has been set.
func (o *TicketItem) HasIsOddsChange() bool {
	if o != nil && o.IsOddsChange != nil {
		return true
	}

	return false
}

// SetIsOddsChange gets a reference to the given bool and assigns it to the IsOddsChange field.
func (o *TicketItem) SetIsOddsChange(v bool) {
	o.IsOddsChange = &v
}

// GetAutoAcceptSec returns the AutoAcceptSec field value if set, zero value otherwise.
func (o *TicketItem) GetAutoAcceptSec() string {
	if o == nil || o.AutoAcceptSec == nil {
		var ret string
		return ret
	}
	return *o.AutoAcceptSec
}

// GetAutoAcceptSecOk returns a tuple with the AutoAcceptSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetAutoAcceptSecOk() (*string, bool) {
	if o == nil || o.AutoAcceptSec == nil {
		return nil, false
	}
	return o.AutoAcceptSec, true
}

// HasAutoAcceptSec returns a boolean if a field has been set.
func (o *TicketItem) HasAutoAcceptSec() bool {
	if o != nil && o.AutoAcceptSec != nil {
		return true
	}

	return false
}

// SetAutoAcceptSec gets a reference to the given string and assigns it to the AutoAcceptSec field.
func (o *TicketItem) SetAutoAcceptSec(v string) {
	o.AutoAcceptSec = &v
}

// GetMRPercentage returns the MRPercentage field value if set, zero value otherwise.
func (o *TicketItem) GetMRPercentage() string {
	if o == nil || o.MRPercentage == nil {
		var ret string
		return ret
	}
	return *o.MRPercentage
}

// GetMRPercentageOk returns a tuple with the MRPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetMRPercentageOk() (*string, bool) {
	if o == nil || o.MRPercentage == nil {
		return nil, false
	}
	return o.MRPercentage, true
}

// HasMRPercentage returns a boolean if a field has been set.
func (o *TicketItem) HasMRPercentage() bool {
	if o != nil && o.MRPercentage != nil {
		return true
	}

	return false
}

// SetMRPercentage gets a reference to the given string and assigns it to the MRPercentage field.
func (o *TicketItem) SetMRPercentage(v string) {
	o.MRPercentage = &v
}

// GetDisplayTime returns the DisplayTime field value if set, zero value otherwise.
func (o *TicketItem) GetDisplayTime() string {
	if o == nil || o.DisplayTime == nil {
		var ret string
		return ret
	}
	return *o.DisplayTime
}

// GetDisplayTimeOk returns a tuple with the DisplayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetDisplayTimeOk() (*string, bool) {
	if o == nil || o.DisplayTime == nil {
		return nil, false
	}
	return o.DisplayTime, true
}

// HasDisplayTime returns a boolean if a field has been set.
func (o *TicketItem) HasDisplayTime() bool {
	if o != nil && o.DisplayTime != nil {
		return true
	}

	return false
}

// SetDisplayTime gets a reference to the given string and assigns it to the DisplayTime field.
func (o *TicketItem) SetDisplayTime(v string) {
	o.DisplayTime = &v
}

// GetHasParlay returns the HasParlay field value if set, zero value otherwise.
func (o *TicketItem) GetHasParlay() bool {
	if o == nil || o.HasParlay == nil {
		var ret bool
		return ret
	}
	return *o.HasParlay
}

// GetHasParlayOk returns a tuple with the HasParlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetHasParlayOk() (*bool, bool) {
	if o == nil || o.HasParlay == nil {
		return nil, false
	}
	return o.HasParlay, true
}

// HasHasParlay returns a boolean if a field has been set.
func (o *TicketItem) HasHasParlay() bool {
	if o != nil && o.HasParlay != nil {
		return true
	}

	return false
}

// SetHasParlay gets a reference to the given bool and assigns it to the HasParlay field.
func (o *TicketItem) SetHasParlay(v bool) {
	o.HasParlay = &v
}

// GetBonusID returns the BonusID field value if set, zero value otherwise.
func (o *TicketItem) GetBonusID() int64 {
	if o == nil || o.BonusID == nil {
		var ret int64
		return ret
	}
	return *o.BonusID
}

// GetBonusIDOk returns a tuple with the BonusID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBonusIDOk() (*int64, bool) {
	if o == nil || o.BonusID == nil {
		return nil, false
	}
	return o.BonusID, true
}

// HasBonusID returns a boolean if a field has been set.
func (o *TicketItem) HasBonusID() bool {
	if o != nil && o.BonusID != nil {
		return true
	}

	return false
}

// SetBonusID gets a reference to the given int64 and assigns it to the BonusID field.
func (o *TicketItem) SetBonusID(v int64) {
	o.BonusID = &v
}

// GetBonusType returns the BonusType field value if set, zero value otherwise.
func (o *TicketItem) GetBonusType() int64 {
	if o == nil || o.BonusType == nil {
		var ret int64
		return ret
	}
	return *o.BonusType
}

// GetBonusTypeOk returns a tuple with the BonusType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBonusTypeOk() (*int64, bool) {
	if o == nil || o.BonusType == nil {
		return nil, false
	}
	return o.BonusType, true
}

// HasBonusType returns a boolean if a field has been set.
func (o *TicketItem) HasBonusType() bool {
	if o != nil && o.BonusType != nil {
		return true
	}

	return false
}

// SetBonusType gets a reference to the given int64 and assigns it to the BonusType field.
func (o *TicketItem) SetBonusType(v int64) {
	o.BonusType = &v
}

// GetPromoID returns the PromoID field value if set, zero value otherwise.
func (o *TicketItem) GetPromoID() int64 {
	if o == nil || o.PromoID == nil {
		var ret int64
		return ret
	}
	return *o.PromoID
}

// GetPromoIDOk returns a tuple with the PromoID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetPromoIDOk() (*int64, bool) {
	if o == nil || o.PromoID == nil {
		return nil, false
	}
	return o.PromoID, true
}

// HasPromoID returns a boolean if a field has been set.
func (o *TicketItem) HasPromoID() bool {
	if o != nil && o.PromoID != nil {
		return true
	}

	return false
}

// SetPromoID gets a reference to the given int64 and assigns it to the PromoID field.
func (o *TicketItem) SetPromoID(v int64) {
	o.PromoID = &v
}

// GetBetHintMsg returns the BetHintMsg field value if set, zero value otherwise.
func (o *TicketItem) GetBetHintMsg() string {
	if o == nil || o.BetHintMsg == nil {
		var ret string
		return ret
	}
	return *o.BetHintMsg
}

// GetBetHintMsgOk returns a tuple with the BetHintMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetBetHintMsgOk() (*string, bool) {
	if o == nil || o.BetHintMsg == nil {
		return nil, false
	}
	return o.BetHintMsg, true
}

// HasBetHintMsg returns a boolean if a field has been set.
func (o *TicketItem) HasBetHintMsg() bool {
	if o != nil && o.BetHintMsg != nil {
		return true
	}

	return false
}

// SetBetHintMsg gets a reference to the given string and assigns it to the BetHintMsg field.
func (o *TicketItem) SetBetHintMsg(v string) {
	o.BetHintMsg = &v
}

// GetCommon returns the Common field value if set, zero value otherwise.
func (o *TicketItem) GetCommon() CommonItem {
	if o == nil || o.Common == nil {
		var ret CommonItem
		return ret
	}
	return *o.Common
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketItem) GetCommonOk() (*CommonItem, bool) {
	if o == nil || o.Common == nil {
		return nil, false
	}
	return o.Common, true
}

// HasCommon returns a boolean if a field has been set.
func (o *TicketItem) HasCommon() bool {
	if o != nil && o.Common != nil {
		return true
	}

	return false
}

// SetCommon gets a reference to the given CommonItem and assigns it to the Common field.
func (o *TicketItem) SetCommon(v CommonItem) {
	o.Common = &v
}

func (o TicketItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TicketType != nil {
		toSerialize["TicketType"] = o.TicketType
	}
	if o.Minbet != nil {
		toSerialize["Minbet"] = o.Minbet
	}
	if o.Maxbet != nil {
		toSerialize["Maxbet"] = o.Maxbet
	}
	if o.Bet != nil {
		toSerialize["Bet"] = o.Bet
	}
	if o.QuickBet != nil {
		toSerialize["QuickBet"] = o.QuickBet
	}
	if o.SeqNo != nil {
		toSerialize["SeqNo"] = o.SeqNo
	}
	if o.Line != nil {
		toSerialize["Line"] = o.Line
	}
	if o.DisplayHDP != nil {
		toSerialize["DisplayHDP"] = o.DisplayHDP
	}
	if o.Hdp1 != nil {
		toSerialize["Hdp1"] = o.Hdp1
	}
	if o.Hdp2 != nil {
		toSerialize["Hdp2"] = o.Hdp2
	}
	if o.DisplayOdds != nil {
		toSerialize["DisplayOdds"] = o.DisplayOdds
	}
	if o.DisplayOddsPair != nil {
		toSerialize["DisplayOddsPair"] = o.DisplayOddsPair
	}
	if o.OddsID != nil {
		toSerialize["OddsID"] = o.OddsID
	}
	if o.Betteam != nil {
		toSerialize["Betteam"] = o.Betteam
	}
	if o.LiveScore != nil {
		toSerialize["LiveScore"] = o.LiveScore
	}
	if o.LiveHomeScore != nil {
		toSerialize["LiveHomeScore"] = o.LiveHomeScore
	}
	if o.LiveAwayScore != nil {
		toSerialize["LiveAwayScore"] = o.LiveAwayScore
	}
	if o.BetID != nil {
		toSerialize["BetID"] = o.BetID
	}
	if o.ChoiceValue != nil {
		toSerialize["ChoiceValue"] = o.ChoiceValue
	}
	if o.BettypeName != nil {
		toSerialize["BettypeName"] = o.BettypeName
	}
	if o.HomeName != nil {
		toSerialize["HomeName"] = o.HomeName
	}
	if o.AwayName != nil {
		toSerialize["AwayName"] = o.AwayName
	}
	if o.LeagueName != nil {
		toSerialize["LeagueName"] = o.LeagueName
	}
	if o.Bettype != nil {
		toSerialize["Bettype"] = o.Bettype
	}
	if o.SportType != nil {
		toSerialize["SportType"] = o.SportType
	}
	if o.SportName != nil {
		toSerialize["SportName"] = o.SportName
	}
	if o.GameName != nil {
		toSerialize["GameName"] = o.GameName
	}
	if o.IsLive != nil {
		toSerialize["IsLive"] = o.IsLive
	}
	if o.IsInPlay != nil {
		toSerialize["IsInPlay"] = o.IsInPlay
	}
	if o.Matchid != nil {
		toSerialize["Matchid"] = o.Matchid
	}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.IsOddsChange != nil {
		toSerialize["isOddsChange"] = o.IsOddsChange
	}
	if o.AutoAcceptSec != nil {
		toSerialize["AutoAcceptSec"] = o.AutoAcceptSec
	}
	if o.MRPercentage != nil {
		toSerialize["MRPercentage"] = o.MRPercentage
	}
	if o.DisplayTime != nil {
		toSerialize["DisplayTime"] = o.DisplayTime
	}
	if o.HasParlay != nil {
		toSerialize["HasParlay"] = o.HasParlay
	}
	if o.BonusID != nil {
		toSerialize["BonusID"] = o.BonusID
	}
	if o.BonusType != nil {
		toSerialize["BonusType"] = o.BonusType
	}
	if o.PromoID != nil {
		toSerialize["PromoID"] = o.PromoID
	}
	if o.BetHintMsg != nil {
		toSerialize["BetHintMsg"] = o.BetHintMsg
	}
	if o.Common != nil {
		toSerialize["Common"] = o.Common
	}
	return json.Marshal(toSerialize)
}

type NullableTicketItem struct {
	value *TicketItem
	isSet bool
}

func (v NullableTicketItem) Get() *TicketItem {
	return v.value
}

func (v *NullableTicketItem) Set(val *TicketItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketItem(val *TicketItem) *NullableTicketItem {
	return &NullableTicketItem{value: val, isSet: true}
}

func (v NullableTicketItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

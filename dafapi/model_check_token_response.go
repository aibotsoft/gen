/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// CheckTokenResponse struct for CheckTokenResponse
type CheckTokenResponse struct {
	ErrorCode *int64 `json:"ErrorCode,omitempty"`
	ErrorMsg *string `json:"ErrorMsg,omitempty"`
	Token *string `json:"token,omitempty"`
	Rid *int64 `json:"rid,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewCheckTokenResponse instantiates a new CheckTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckTokenResponse() *CheckTokenResponse {
	this := CheckTokenResponse{}
	return &this
}

// NewCheckTokenResponseWithDefaults instantiates a new CheckTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckTokenResponseWithDefaults() *CheckTokenResponse {
	this := CheckTokenResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetErrorCode() int64 {
	if o == nil || o.ErrorCode == nil {
		var ret int64
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetErrorCodeOk() (*int64, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int64 and assigns it to the ErrorCode field.
func (o *CheckTokenResponse) SetErrorCode(v int64) {
	o.ErrorCode = &v
}

// GetErrorMsg returns the ErrorMsg field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetErrorMsg() string {
	if o == nil || o.ErrorMsg == nil {
		var ret string
		return ret
	}
	return *o.ErrorMsg
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetErrorMsgOk() (*string, bool) {
	if o == nil || o.ErrorMsg == nil {
		return nil, false
	}
	return o.ErrorMsg, true
}

// HasErrorMsg returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasErrorMsg() bool {
	if o != nil && o.ErrorMsg != nil {
		return true
	}

	return false
}

// SetErrorMsg gets a reference to the given string and assigns it to the ErrorMsg field.
func (o *CheckTokenResponse) SetErrorMsg(v string) {
	o.ErrorMsg = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CheckTokenResponse) SetToken(v string) {
	o.Token = &v
}

// GetRid returns the Rid field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetRid() int64 {
	if o == nil || o.Rid == nil {
		var ret int64
		return ret
	}
	return *o.Rid
}

// GetRidOk returns a tuple with the Rid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetRidOk() (*int64, bool) {
	if o == nil || o.Rid == nil {
		return nil, false
	}
	return o.Rid, true
}

// HasRid returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasRid() bool {
	if o != nil && o.Rid != nil {
		return true
	}

	return false
}

// SetRid gets a reference to the given int64 and assigns it to the Rid field.
func (o *CheckTokenResponse) SetRid(v int64) {
	o.Rid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CheckTokenResponse) SetId(v int64) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CheckTokenResponse) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckTokenResponse) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CheckTokenResponse) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CheckTokenResponse) SetUrl(v string) {
	o.Url = &v
}

func (o CheckTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if o.ErrorMsg != nil {
		toSerialize["ErrorMsg"] = o.ErrorMsg
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Rid != nil {
		toSerialize["rid"] = o.Rid
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableCheckTokenResponse struct {
	value *CheckTokenResponse
	isSet bool
}

func (v NullableCheckTokenResponse) Get() *CheckTokenResponse {
	return v.value
}

func (v *NullableCheckTokenResponse) Set(val *CheckTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckTokenResponse(val *CheckTokenResponse) *NullableCheckTokenResponse {
	return &NullableCheckTokenResponse{value: val, isSet: true}
}

func (v NullableCheckTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Sample API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dafapi

import (
	"encoding/json"
)

// FavoritesResponse struct for FavoritesResponse
type FavoritesResponse struct {
	ErrorCode *int `json:"ErrorCode,omitempty"`
	ErrorMsg *string `json:"ErrorMsg,omitempty"`
	Data *FavoritesResponseData `json:"Data,omitempty"`
}

// NewFavoritesResponse instantiates a new FavoritesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoritesResponse() *FavoritesResponse {
	this := FavoritesResponse{}
	return &this
}

// NewFavoritesResponseWithDefaults instantiates a new FavoritesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoritesResponseWithDefaults() *FavoritesResponse {
	this := FavoritesResponse{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *FavoritesResponse) GetErrorCode() int {
	if o == nil || o.ErrorCode == nil {
		var ret int
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoritesResponse) GetErrorCodeOk() (*int, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *FavoritesResponse) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int and assigns it to the ErrorCode field.
func (o *FavoritesResponse) SetErrorCode(v int) {
	o.ErrorCode = &v
}

// GetErrorMsg returns the ErrorMsg field value if set, zero value otherwise.
func (o *FavoritesResponse) GetErrorMsg() string {
	if o == nil || o.ErrorMsg == nil {
		var ret string
		return ret
	}
	return *o.ErrorMsg
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoritesResponse) GetErrorMsgOk() (*string, bool) {
	if o == nil || o.ErrorMsg == nil {
		return nil, false
	}
	return o.ErrorMsg, true
}

// HasErrorMsg returns a boolean if a field has been set.
func (o *FavoritesResponse) HasErrorMsg() bool {
	if o != nil && o.ErrorMsg != nil {
		return true
	}

	return false
}

// SetErrorMsg gets a reference to the given string and assigns it to the ErrorMsg field.
func (o *FavoritesResponse) SetErrorMsg(v string) {
	o.ErrorMsg = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *FavoritesResponse) GetData() FavoritesResponseData {
	if o == nil || o.Data == nil {
		var ret FavoritesResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoritesResponse) GetDataOk() (*FavoritesResponseData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *FavoritesResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given FavoritesResponseData and assigns it to the Data field.
func (o *FavoritesResponse) SetData(v FavoritesResponseData) {
	o.Data = &v
}

func (o FavoritesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode != nil {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if o.ErrorMsg != nil {
		toSerialize["ErrorMsg"] = o.ErrorMsg
	}
	if o.Data != nil {
		toSerialize["Data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableFavoritesResponse struct {
	value *FavoritesResponse
	isSet bool
}

func (v NullableFavoritesResponse) Get() *FavoritesResponse {
	return v.value
}

func (v *NullableFavoritesResponse) Set(val *FavoritesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoritesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoritesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoritesResponse(val *FavoritesResponse) *NullableFavoritesResponse {
	return &NullableFavoritesResponse{value: val, isSet: true}
}

func (v NullableFavoritesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoritesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
